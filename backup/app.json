[
{
  "fields": {
    "pub_date": "2015-08-09T14:38:01.103Z",
    "user": 2,
    "name": "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"
  },
  "model": "app.tag",
  "pk": 1
},
{
  "fields": {
    "pub_date": "2015-08-09T14:38:01.133Z",
    "user": 2,
    "name": "python"
  },
  "model": "app.tag",
  "pk": 2
},
{
  "fields": {
    "pub_date": "2015-08-09T14:40:00.384Z",
    "user": 2,
    "name": "LT"
  },
  "model": "app.tag",
  "pk": 3
},
{
  "fields": {
    "pub_date": "2015-08-09T14:41:37.322Z",
    "user": 2,
    "name": "\u6050\u7adc"
  },
  "model": "app.tag",
  "pk": 4
},
{
  "fields": {
    "pub_date": "2015-08-09T14:41:37.411Z",
    "user": 2,
    "name": "\u5316\u77f3"
  },
  "model": "app.tag",
  "pk": 5
},
{
  "fields": {
    "pub_date": "2015-08-09T14:44:31.436Z",
    "user": 2,
    "name": "\u653b\u6bbb\u6a5f\u52d5\u968a"
  },
  "model": "app.tag",
  "pk": 6
},
{
  "fields": {
    "pub_date": "2015-08-09T14:44:31.452Z",
    "user": 2,
    "name": "ARIZE"
  },
  "model": "app.tag",
  "pk": 7
},
{
  "fields": {
    "pub_date": "2015-08-09T14:46:01.371Z",
    "user": 2,
    "name": "C\u8a00\u8a9e"
  },
  "model": "app.tag",
  "pk": 8
},
{
  "fields": {
    "pub_date": "2015-08-09T14:46:01.418Z",
    "user": 2,
    "name": "FizzBuzz"
  },
  "model": "app.tag",
  "pk": 9
},
{
  "fields": {
    "pub_date": "2015-08-09T14:49:10.255Z",
    "user": 2,
    "name": "C#"
  },
  "model": "app.tag",
  "pk": 10
},
{
  "fields": {
    "pub_date": "2015-08-09T14:49:59.937Z",
    "user": 2,
    "name": "GUNDAM"
  },
  "model": "app.tag",
  "pk": 11
},
{
  "fields": {
    "pub_date": "2015-08-09T14:53:30.708Z",
    "user": 2,
    "name": "GCJ"
  },
  "model": "app.tag",
  "pk": 12
},
{
  "fields": {
    "pub_date": "2015-08-09T14:58:36.261Z",
    "user": 2,
    "name": "\u98df\u4e8b"
  },
  "model": "app.tag",
  "pk": 13
},
{
  "fields": {
    "pub_date": "2015-08-09T14:58:36.300Z",
    "user": 2,
    "name": "\u3082\u3093\u3058\u3083"
  },
  "model": "app.tag",
  "pk": 14
},
{
  "fields": {
    "pub_date": "2015-08-09T15:03:12.141Z",
    "user": 2,
    "name": "\u52d5\u7269"
  },
  "model": "app.tag",
  "pk": 15
},
{
  "fields": {
    "pub_date": "2015-08-09T15:04:41.703Z",
    "user": 2,
    "name": "C++"
  },
  "model": "app.tag",
  "pk": 16
},
{
  "fields": {
    "pub_date": "2015-08-09T15:09:42.627Z",
    "user": 2,
    "name": "\u30af\u30ed\u30fc\u30b8\u30e3"
  },
  "model": "app.tag",
  "pk": 17
},
{
  "fields": {
    "pub_date": "2015-08-09T15:13:58.721Z",
    "user": 2,
    "name": "OpenCV"
  },
  "model": "app.tag",
  "pk": 18
},
{
  "fields": {
    "pub_date": "2015-08-14T13:08:00.432Z",
    "user": 2,
    "name": "\u6620\u753b"
  },
  "model": "app.tag",
  "pk": 20
},
{
  "fields": {
    "pub_date": "2015-08-16T03:36:44.607Z",
    "user": 2,
    "name": "\u9903\u5b50"
  },
  "model": "app.tag",
  "pk": 21
},
{
  "fields": {
    "pub_date": "2015-08-16T03:42:59.512Z",
    "user": 2,
    "name": "\u3046\u3069\u3093"
  },
  "model": "app.tag",
  "pk": 22
},
{
  "fields": {
    "pub_date": "2015-08-17T03:12:50.212Z",
    "user": 2,
    "name": "\u547d\u540d"
  },
  "model": "app.tag",
  "pk": 23
},
{
  "fields": {
    "pub_date": "2015-08-18T08:54:15.522Z",
    "user": 2,
    "name": "\u30c7\u30b6\u30a4\u30f3"
  },
  "model": "app.tag",
  "pk": 25
},
{
  "fields": {
    "pub_date": "2015-08-22T08:32:42.131Z",
    "user": 2,
    "name": "jQuery"
  },
  "model": "app.tag",
  "pk": 26
},
{
  "fields": {
    "pub_date": "2015-08-23T12:05:33.817Z",
    "user": 2,
    "name": "\u30ed\u30dc\u30c3\u30c8"
  },
  "model": "app.tag",
  "pk": 27
},
{
  "fields": {
    "pub_date": "2015-08-26T11:21:48.004Z",
    "user": 2,
    "name": "\u5bff\u53f8"
  },
  "model": "app.tag",
  "pk": 30
},
{
  "fields": {
    "pub_date": "2015-08-26T11:22:51.859Z",
    "user": 2,
    "name": "\u5929\u3077\u3089"
  },
  "model": "app.tag",
  "pk": 31
},
{
  "fields": {
    "pub_date": "2015-08-27T02:29:32.346Z",
    "user": 2,
    "name": "Git"
  },
  "model": "app.tag",
  "pk": 32
},
{
  "fields": {
    "pub_date": "2015-09-06T11:34:53.893Z",
    "user": 2,
    "name": "Heroku"
  },
  "model": "app.tag",
  "pk": 33
},
{
  "fields": {
    "pub_date": "2015-10-05T13:36:13.995Z",
    "user": 2,
    "name": "\u30ab\u30ec\u30fc"
  },
  "model": "app.tag",
  "pk": 34
},
{
  "fields": {
    "pub_date": "2015-10-13T13:24:45.747Z",
    "user": 2,
    "name": "\u6e29\u6cc9"
  },
  "model": "app.tag",
  "pk": 35
},
{
  "fields": {
    "pub_date": "2015-11-13T09:34:30.042Z",
    "user": 2,
    "name": "\u6570\u5b66"
  },
  "model": "app.tag",
  "pk": 36
},
{
  "fields": {
    "pub_date": "2015-12-17T02:00:55.827Z",
    "user": 2,
    "name": "Windows"
  },
  "model": "app.tag",
  "pk": 37
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-08-09T14:38:01.085Z",
    "content": "# Hello World with Python\r\n\r\n```\r\n# coding: utf-8\r\nprint('Hello, python!')\r\n```\r\n",
    "user": 2,
    "title": "Hello, python!"
  },
  "model": "app.memo",
  "pk": 1
},
{
  "fields": {
    "tags": [
      1,
      2,
      3
    ],
    "pub_date": "2015-08-09T14:40:00.343Z",
    "content": "# *random*\r\n\r\n```\r\nimport random\r\n\r\nwith open('LT_list.txt', 'r', encoding = 'shift_jis') as f:\r\n    list = f.readlines()\r\n\r\nlength = len(list)\r\nif length != 0:\r\n    index = random.randint(0, length - 1)\r\n    print(('\u6700\u5f8c\u306f ' if length == 1 else '\u6b21\u306f ') + list[index][:-1] + ' \u3067\u3059(\u3063\u00b4\u2200\uff40)\u3063')\r\n    del list[index]\r\n\r\n    with open('LT_list.txt', 'w', encoding = 'shift_jis') as f:\r\n        f.writelines(list)\r\n```\r\n",
    "user": 2,
    "title": "LT random"
  },
  "model": "app.memo",
  "pk": 2
},
{
  "fields": {
    "tags": [
      4,
      5
    ],
    "pub_date": "2015-08-09T14:41:37.294Z",
    "content": "# *t-rex*\r\n\r\n![image](https://c1.staticflickr.com/5/4072/4490328601_508f7d5983.jpg &quot;black-beauty&quot;)</textarea>\r\n",
    "user": 2,
    "title": "\u30d6\u30e9\u30c3\u30af\u30fb\u30d3\u30e5\u30fc\u30c6\u30a3"
  },
  "model": "app.memo",
  "pk": 3
},
{
  "fields": {
    "tags": [
      4,
      5
    ],
    "pub_date": "2015-08-09T14:42:48.335Z",
    "content": "\u306a\u3081\u308b\u306a\u3088\uff01\uff01\r\n\r\n![image](http://3.bp.blogspot.com/-kvbJ2Lk3e5g/Ur1GXV2yTsI/AAAAAAAAcck/uu_54SA8zwY/s450/trex_kokkaku.png)</textarea>\r\n",
    "user": 2,
    "title": "T-REX\u304c\u5f31\u304b\u3063\u305f\u3068\u304b\u3044\u3046\u3084\u3064"
  },
  "model": "app.memo",
  "pk": 4
},
{
  "fields": {
    "tags": [
      6,
      7
    ],
    "pub_date": "2015-08-09T14:44:31.429Z",
    "content": "# \u30dc\u30fc\u30de\r\n\u6d3b\u8e8d\u3059\u308b\u304b\u306a\u3041\uff0e\uff0e\uff0e\r\n\r\n[http://kokaku-a.jp](http://kokaku-a.jp)\r\n\r\n![image](http://blog-imgs-62.fc2.com/d/d/3/dd360/arise_01.jpg)\r\n",
    "user": 2,
    "title": "\u653b\u6bbb\u6a5f\u52d5\u968aARIZE \u65b0\u5287\u5834\u7248"
  },
  "model": "app.memo",
  "pk": 5
},
{
  "fields": {
    "tags": [
      8,
      1,
      9
    ],
    "pub_date": "2015-08-09T14:46:01.320Z",
    "content": "# FizzBuzz\r\n\r\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u305a\u3089\u3059\u306e\u3068\uff0c\u9014\u4e2d\u306b\u7d42\u7aef\u6587\u5b57`\\0`\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\uff01\r\n\r\n```\r\n#include \"stdafx.h\"\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tfor (size_t i = 1; i < 16; i++)\r\n\t{\r\n\t\t::printf(\"%d\\n\\0Fizz\\n\\0FizzBuzz\\n\" + ((i % 15) ? (i % 3) ? (i % 5) ? 0 : 14 : 4 : 10), i);\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n```\r\n",
    "user": 2,
    "title": "C\u8a00\u8a9e\u306eFizzBuzz"
  },
  "model": "app.memo",
  "pk": 6
},
{
  "fields": {
    "tags": [
      1,
      2,
      9
    ],
    "pub_date": "2015-08-09T14:48:15.652Z",
    "content": "# FizzBuzz\r\n\r\n\u3053\u308c\u306f**cool!!** `f + b or str(n)`\u304c\u306a\u3093\u3068\u3082(\u3002-\u2200-)\r\n\r\n```\r\nfrom itertools import cycle\r\n\r\nfor s in [f + b or str(n) for f, b, n in zip(cycle([''] * 2 + ['Fizz']), cycle([''] * 4 + ['Buzz']), range(1, 16))]: print(s)\r\n```\r\n",
    "user": 2,
    "title": "Python\u306eFizzBuzz"
  },
  "model": "app.memo",
  "pk": 7
},
{
  "fields": {
    "tags": [
      1,
      10,
      9
    ],
    "pub_date": "2015-08-09T14:49:10.206Z",
    "content": "#FizzBuzz\r\n\r\n`LINQ`\u3067\u3084\u3063\u3066\u307f\u305f\uff0e\r\n\r\n```\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApplication\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Enumerable.Range(1, 15).Select(x => (x % 15 == 0) ? \"FizzBuxx\" : (x % 3 == 0) ? \"Fizz\" : (x % 5 == 0) ? \"Buzz\" :  x.ToString()).ToList().ForEach(x => Console.WriteLine(x));\r\n        }\r\n    }\r\n}\r\n```\r\n",
    "user": 2,
    "title": "C#\u306eFizzBuzz"
  },
  "model": "app.memo",
  "pk": 8
},
{
  "fields": {
    "tags": [
      11
    ],
    "pub_date": "2015-08-09T14:49:59.928Z",
    "content": "# \u9769\u547d\u8ad6\r\n\r\n\u9769\u547d\u306e\u3053\u3068\u3092\u77e5\u3089\u306a\u3044\u3093\u3060\u306a\u30fb\u30fb\u30fb\uff0e\u9769\u547d\u306f\u3044\u3064\u3082\u30a4\u30f3\u30c6\u30ea\u304c\u306f\u3058\u3081\u308b\u3093\u3060\uff0e\u5922\u898b\u305f\u3044\u306a\u76ee\u6a19\u3092\u6301\u3063\u3066\u3084\u308b\u304b\u3089\u3044\u3064\u3082\u904e\u6fc0\u306a\u3053\u3068\u3057\u304b\u3084\u3089\u306a\u3044\uff01\r\n\r\n![image](https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRrPD-1iRuYSJ3YRRf4eSknNu_rDZHvI3YJqVRK9aeFqByaNROTnw)\r\n",
    "user": 2,
    "title": "\u03bd\u30ac\u30f3\u30c0\u30e0"
  },
  "model": "app.memo",
  "pk": 9
},
{
  "fields": {
    "tags": [
      1,
      12
    ],
    "pub_date": "2015-08-09T14:53:30.686Z",
    "content": "# Google Code Jam\r\n\r\n\u4eca\u5e74\u306fpython\u3067\u3084\u308b\u304b\u3041\uff0e\r\n\r\n* Google Code Jam  \r\n [https://code.google.com/codejam](https://code.google.com/codejam)\r\n\r\n* Go, Hero!  \r\n [http://www.go-hero.net/jam/](http://www.go-hero.net/jam/)\r\n",
    "user": 2,
    "title": "Google Code Jam 2015"
  },
  "model": "app.memo",
  "pk": 10
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-08-09T14:56:27.365Z",
    "content": "# \u306a\u3093\u304b\u4f7f\u3044\u305d\u3046\u306a\u306e\u3092\u8f09\u305b\u3066\u304a\u304f\r\n\r\n### \u30ea\u30b9\u30c8\u64cd\u4f5c\r\n[http://qiita.com/clarinet758/items/e181fcfe8ed6f99cbeb5](http://qiita.com/clarinet758/items/e181fcfe8ed6f99cbeb5)\r\n  \r\n### \u4fbf\u5229\u306a\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\r\n[http://qiita.com/pika_shi/items/bf3b449a354cc7609ab9](http://qiita.com/pika_shi/items/bf3b449a354cc7609ab9)\r\n  \r\n### \u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\uff08\u30b5\u30d6\u30d5\u30a9\u30eb\u30c0\u3082\u518d\u5e30\u7684\u306b\uff09\r\n[http://www.gesource.jp/programming/python/code/0001.html](http://www.gesource.jp/programming/python/code/0001.html)\r\n\r\n![image](http://westmarch.sjsoft.com/wp-content/uploads/2012/11/zen-of-python-poster-a3-1024x724.png)\r\n",
    "user": 2,
    "title": "Python\u30e1\u30e2( ..)\u03c6"
  },
  "model": "app.memo",
  "pk": 11
},
{
  "fields": {
    "tags": [
      13,
      14
    ],
    "pub_date": "2015-08-09T14:58:36.248Z",
    "content": "# *\u4e45\u5c4b\u306e\u3082\u3093\u3058\u3083*\r\n\r\n[http://tabelog.com/aichi/A2301/A230103/23038804/](http://tabelog.com/aichi/A2301/A230103/23038804/)\r\n\r\n![image](http://image1-3.tabelog.k-img.com/resize/660x370c/restaurant/images/Rvw/29008/29008164.jpg?token=edfe93f&amp;api=v2)\r\n",
    "user": 2,
    "title": "\u3055\u3044\u305f\u306b\u3084"
  },
  "model": "app.memo",
  "pk": 12
},
{
  "fields": {
    "tags": [
      13,
      14
    ],
    "pub_date": "2015-08-09T15:00:20.441Z",
    "content": "# *\u5208\u8c37\u306e\u3082\u3093\u3058\u3083*\r\n\r\n[http://tabelog.com/aichi/A2305/A230503/23009823/](http://tabelog.com/aichi/A2305/A230503/23009823/)\r\n\r\n![image](http://image1-3.tabelog.k-img.com/resize/660x370c/restaurant/images/Rvw/6190/6190320.jpg?token=8b7ddc4&amp;api=v2)\r\n",
    "user": 2,
    "title": "\u3084\u3093\u3084"
  },
  "model": "app.memo",
  "pk": 13
},
{
  "fields": {
    "tags": [
      1,
      2,
      12
    ],
    "pub_date": "2015-08-09T15:01:37.310Z",
    "content": "# Google Coce Jam\u7528\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\r\n\r\n```\r\nimport sys\r\n\r\nfilename = 'sample.txt' if len(sys.argv) == 1 else sys.argv[1]\r\nwith open(filename, 'r', encoding = 'shift_jis') as f:\r\n    T = int(f.readline()[:-1])    # \u6539\u884c\u306f\u305a\u3059\u30b9\u30e9\u30a4\u30b9\r\n    for i in range(T):\r\n        print('Case #{0}: {1}'.format(i + 1, 'ans'))\r\n```\r\n",
    "user": 2,
    "title": "Google Code Jam with Python"
  },
  "model": "app.memo",
  "pk": 14
},
{
  "fields": {
    "tags": [
      6,
      7
    ],
    "pub_date": "2015-08-09T15:02:28.980Z",
    "content": "## *\u541b\u306e\u4f11\u6687\u306e\u6700\u9577\u8a18\u9332\u3060\uff0e\uff0e\uff0e*\r\n\r\n![image](http://i.gzn.jp/img/2014/05/24/gits-arise-border3-trailer/00.png)\r\n",
    "user": 2,
    "title": "5\u6642\u9593\u30687\u5206"
  },
  "model": "app.memo",
  "pk": 15
},
{
  "fields": {
    "tags": [
      15
    ],
    "pub_date": "2015-08-09T15:03:12.116Z",
    "content": "# \u5915\u65b9\u306e\u30cb\u30e5\u30fc\u30b9\u3067\r\n\r\n\u898b\u3064\u304b\u3063\u305f\u3089\u3057\u3044\u3067\u3059( \uff9f\u0414\uff9f)\r\n\r\n![image](http://s.maho.jp/share/image_archive/6d/2c/6d2cf5bc10541bb2/df/df4e27f55e.jpg)\r\n",
    "user": 2,
    "title": "\u30cb\u30e3\u30f3\u30d4\u30e7\u30a6"
  },
  "model": "app.memo",
  "pk": 16
},
{
  "fields": {
    "tags": [
      16,
      1
    ],
    "pub_date": "2015-08-09T15:04:41.670Z",
    "content": "# CPU\u8ca0\u8377\u3092\u4e0a\u3052\u308b\u30b5\u30f3\u30d7\u30eb\r\nstd::thread\u3068\u304b\u30e9\u30e0\u30c0\u5f0f\u3068\u304b\u7bc4\u56f2for\u3068\u304b\r\n\r\n```\r\n#include \"stdafx.h\"\r\n#include <vector>\r\n#include <thread>\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tauto threads = std::vector<std::thread>(16);\r\n\tfor (auto& item : threads)\r\n\t{\r\n\t\titem = std::thread([]\r\n\t\t{\r\n\t\t\twhile (true)\r\n\t\t\t{\r\n\t\t\t\tauto x = 10.0 / 3;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfor (auto& item : threads)\r\n\t{\r\n\t\titem.join();\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n```\r\n",
    "user": 2,
    "title": "C++11\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb"
  },
  "model": "app.memo",
  "pk": 17
},
{
  "fields": {
    "tags": [
      16,
      1
    ],
    "pub_date": "2015-08-09T15:05:41.685Z",
    "content": "std::function\u3067\u3044\u3044\u3060\u308d\u3046\uff0e\uff0e\uff0e\r\n\r\n```\r\n#include \"stdafx.h\"\r\n#include <ostream>\r\n#include <functional>\r\n\r\nconst char* hoge(int n)\r\n{\r\n\treturn \"hoge\";\r\n}\r\n\r\ntypedef const char* (*hogetype)(int);\r\n\r\nhogetype piyo(double d)\r\n{\r\n\treturn hoge;\r\n}\r\n\r\nconst char* (*fuga(double d))(int)\r\n{\r\n\treturn hoge;\r\n}\r\n\r\nstd::function<const char* (int)> hogehoge(double d)\r\n{\r\n\treturn hoge;\r\n}\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tstd::cout << hoge(42) << std::endl;\r\n\r\n\tauto hoge1 = piyo(23.0);\r\n\tstd::cout << hoge1(42) << std::endl;\r\n\r\n\tauto hoge2 = fuga(23.0);\r\n\tstd::cout << hoge2(42) << std::endl;\r\n\r\n\tauto hoge3 = hogehoge(23.0);\r\n\tstd::cout << hoge3(42) << std::endl;\r\n\r\n\treturn 0;\r\n}\r\n```\r\n",
    "user": 2,
    "title": "\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3059\u95a2\u6570"
  },
  "model": "app.memo",
  "pk": 18
},
{
  "fields": {
    "tags": [
      16,
      1
    ],
    "pub_date": "2015-08-09T15:06:25.467Z",
    "content": "\u77e5\u3089\u306a\u304b\u3063\u305f\u306a\u3041\uff0e\uff0e\uff0e\u305f\u3060\u306e\u30a2\u30c9\u30ec\u30b9\u306e\u4e26\u3073\u3063\u3066\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u304b\uff0e\r\n\r\n```\r\n#include \"stdafx.h\"\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tint ary[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\r\n\tint (*hoge)[10] = &ary;\r\n\r\n\t::printf(\"%p\\n\", ary);\r\n\t::printf(\"%p\\n\", &ary);\r\n\t::printf(\"%p\\n\", hoge);\t\t// &ary[0]\u306e\u3053\u3068\uff1f\uff08\u5b9f\u969b\u306f\u9055\u3046\u3063\u307d\u3044\uff0e\uff09\r\n\r\n\t::printf(\"%d, %d\\n\", ary[0], ary[1]);\r\n\t::printf(\"%d, %d\\n\", *hoge[0], *hoge[1]);\t\t// \u3042\u308c\uff1f( \uff9f\u0414\uff9f)\r\n\t::printf(\"%d, %d\\n\", (*hoge)[0], (*hoge)[1]);\t// *hoge\u306f\u914d\u5217\u3067\u3042\u308a\u5148\u982d\u8981\u7d20\u3058\u3083\u306a\u3044\u3063\u307d\u3044\uff0e\r\n\t//::pringf(\"%d, %d\\n\", (*ary)[0], (*ary)[1]);\t// ary\u3068hoge\u306f\u540c\u3058\u30a2\u30c9\u30ec\u30b9\u3092\u793a\u3059\u304c\u3053\u308c\u306f\u3067\u304d\u306a\u3044\uff0e\r\n\r\n\t//int(*piyo)[20] = &ary;\t// \u3061\u306a\u307f\u306b\u3053\u308c\u3082\u30c0\u30e1\uff0eC\u8a00\u8a9e\u306e\u914d\u5217\u3063\u3066\u3061\u3083\u3093\u3068\u578b\u3060\u3063\u305f\u3093\u3060\uff0e\uff0e\uff0e\r\n\r\n\treturn 0;\r\n}\r\n```\r\n",
    "user": 2,
    "title": "\u914d\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf"
  },
  "model": "app.memo",
  "pk": 19
},
{
  "fields": {
    "tags": [
      1,
      2,
      23
    ],
    "pub_date": "2015-08-09T15:07:11.293Z",
    "content": "# Google Python Style Guide \u306b\u3088\u308bPython \u306e\u547d\u540d\u898f\u7d04\r\n\r\n* \u30e2\u30b8\u30e5\u30fc\u30eb\uff1a module_name\r\n* \u30d1\u30c3\u30b1\u30fc\u30b8 : package_name\r\n* \u30af\u30e9\u30b9\u540d : ClassName\r\n* \u30e1\u30bd\u30c3\u30c9\u540d: method_name\r\n* \u4f8b\u5916 : ExceptionName\r\n* \u95a2\u6570\u540d : function_name\r\n* \u30b0\u30ed\u30fc\u30d0\u30eb\u5b9a\u6570\uff1aGLOBAL_CONSTANT_NAME\r\n* \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\uff1aglobal_var_name\r\n* \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 : instance_var_name\r\n* \u30ed\u30fc\u30ab\u30eb\u5909\u6570\uff1alocal_var_name\r\n",
    "user": 2,
    "title": "Python\u306e\u547d\u540d\u898f\u7d04"
  },
  "model": "app.memo",
  "pk": 20
},
{
  "fields": {
    "tags": [
      13,
      14
    ],
    "pub_date": "2015-08-09T15:08:34.387Z",
    "content": "# \u4f1a\u793e\u524d\u306e\u3082\u3093\u3058\u3083\r\n\r\n[http://www.rikyu-japan.com/nadya/](http://www.rikyu-japan.com/nadya/)\r\n\r\n![image](http://rikyu-japan.sakura.ne.jp/wp/wp-content/uploads/DSC_0005.JPG)\r\n",
    "user": 2,
    "title": "\u308a\u304d\u3085\u3046"
  },
  "model": "app.memo",
  "pk": 21
},
{
  "fields": {
    "tags": [
      16,
      1,
      17
    ],
    "pub_date": "2015-08-09T15:09:42.595Z",
    "content": "# C++\u3067\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\r\n\r\n\u5024\u3067\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066`mutable`\u3068\u3059\u308b\u3068\u5916\u306e\u74b0\u5883\u3092\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\uff0e\r\n\r\n```\r\n#include \"stdafx.h\"\r\n#include <functional>\r\n#include <iostream>\r\n\r\nstd::function<int ()> Somethig()\r\n{\r\n\tauto count = 0;\r\n\treturn [=]() mutable -> int\r\n\t{\r\n\t\treturn ++count;\r\n\t};\r\n}\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tauto hoge = Somethig();\r\n\r\n\tfor (int i = 0; i < 100; i++)\r\n\t{\r\n\t\tstd::cout << hoge() << std::endl;\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n```\r\n",
    "user": 2,
    "title": "C++\u306e\u30af\u30ed\u30fc\u30b8\u30e3"
  },
  "model": "app.memo",
  "pk": 22
},
{
  "fields": {
    "tags": [
      1,
      10,
      17
    ],
    "pub_date": "2015-08-09T15:10:26.599Z",
    "content": "# C#\u3067\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\r\n\r\n\u7279\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u304b\u306f\u3044\u3089\u306a\u3044\uff0e\r\n\r\n```\r\nusing System;\r\n\r\nnamespace cssample\r\n{\r\n    class Program\r\n    {\r\n        static Func<int> Something()\r\n        {\r\n            var count = 0;\r\n            return () => ++count;\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var hoge = Program.Something();\r\n\r\n            for (int i = 0; i < 100; i++)\r\n            {\r\n                Console.WriteLine(hoge());\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n",
    "user": 2,
    "title": "C#\u306e\u30af\u30ed\u30fc\u30b8\u30e3"
  },
  "model": "app.memo",
  "pk": 23
},
{
  "fields": {
    "tags": [
      1,
      2,
      17
    ],
    "pub_date": "2015-08-09T15:12:07.584Z",
    "content": "# Python\u3067\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\r\n\r\n`nonlocal`\u3068\u3059\u308b\u3068\u5916\u5074\u306e\u74b0\u5883\u304c\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\uff0e\r\n\r\n```\r\ndef something():\r\n    count = 0\r\n    def inner():\r\n        nonlocal count \r\n        count += 1\r\n        return count\r\n    return inner\r\n\r\nhoge = something()\r\nfor i in range(100):\r\n    print(hoge())\r\n```\r\n",
    "user": 2,
    "title": "Python\u306e\u30af\u30ed\u30fc\u30b8\u30e3"
  },
  "model": "app.memo",
  "pk": 24
},
{
  "fields": {
    "tags": [
      1,
      10
    ],
    "pub_date": "2015-08-09T15:13:03.431Z",
    "content": "# \u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3068\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u76f8\u6027\u304c\u60aa\u3044(..)\r\n\r\n\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u306f\u5909\u6570\u306e\u578b\u306e\u5024\u304c\u4f7f\u308f\u308c\u308b\uff0e\r\n\r\n```\r\nusing System;\r\n\r\nnamespace ConsoleApplication1\r\n{\r\n    class B\r\n    {\r\n        public virtual void X(string s = \"B\";)\r\n        {\r\n            Console.WriteLine(\"{0} : B\", s);\r\n        }\r\n    }\r\n\r\n    class S : B\r\n    {\r\n        public override void X(string s = \"S\")\r\n        {\r\n            Console.WriteLine(\"{0} : S\", s);\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            B b = new B();\r\n            b.X();    // B : B\r\n\r\n            S s = new S();\r\n            s.X();    // S : S\r\n\r\n            B bs = new S();\r\n            bs.X();   // B : S\r\n        }\r\n    }\r\n}\r\n```\r\n",
    "user": 2,
    "title": "\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3068\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"
  },
  "model": "app.memo",
  "pk": 25
},
{
  "fields": {
    "tags": [
      1,
      2,
      18
    ],
    "pub_date": "2015-08-09T15:13:58.685Z",
    "content": "# \u57fa\u790e\u7684\u306a\u3053\u3068\u304c\u304b\u306a\u308a\u7db2\u7f85\u3055\u308c\u3066\u3044\u308b\u30b5\u30a4\u30c8\r\n\r\n[http://opencv.blog.jp/python/\u4f7f\u3044\u65b9](http://opencv.blog.jp/python/\u4f7f\u3044\u65b9)\r\n\r\n![image](http://livedoor.blogimg.jp/progr-python2/imgs/b/4/b4d28d74.jpg)\r\n",
    "user": 2,
    "title": "Python\u3067OpenCV"
  },
  "model": "app.memo",
  "pk": 26
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-08-13T06:09:48.832Z",
    "content": "\u3044\u3064\u3082\u6bce\u56de\u8abf\u3079\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u3044\u308d\u3044\u308d\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u307e\u3068\u3081\uff0e\r\n\r\n```\r\nimport os\r\nimport glob\r\n\r\ndirectory = 'C:\\\\Python34\\\\'\r\n\r\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\uff08\u540d\u524d\u306e\u307f\uff0c\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u6307\u5b9a\u4e0d\u53ef\uff09\r\nfor f in os.listdir(directory):\r\n    print(f)\r\n\r\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\uff08\u30d1\u30b9\u4ed8\u304d\uff09\r\nfor f in glob.glob(directory + '*.txt'):\r\n    print(f)\r\n\r\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\uff08\u540d\u524d\u306e\u307f\uff09\r\nfor f in [os.path.basename(r) for r in glob.glob(directory + '*.txt')]:\r\n    print(f)\r\n\r\n# \u518d\u5e30\u7684\u306b\u30d5\u30a9\u30eb\u30c0\u3092\u6e21\u308a\u6b69\u304d\r\nfor r, ds, fs in os.walk(directory):\r\n    print(r, ds, fs)\r\n```\r\n",
    "user": 2,
    "title": "\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u53d6\u5f97"
  },
  "model": "app.memo",
  "pk": 27
},
{
  "fields": {
    "tags": [
      4,
      20
    ],
    "pub_date": "2015-08-14T13:08:00.424Z",
    "content": "\u6050\u7adc\u306e\u30b7\u30fc\u30f3\u304c\u304b\u306a\u308a\u826f\u304b\u3063\u305f\uff0e\u6700\u5f8c\u3082\u597d\u304d\uff01\r\n\r\n![iamge](http://blog-imgs-52.fc2.com/s/e/k/sekiga914/jyura401s.jpg)\r\n",
    "user": 2,
    "title": "\u30b8\u30e5\u30e9\u30b7\u30c3\u30af\u30fb\u30ef\u30fc\u30eb\u30c9"
  },
  "model": "app.memo",
  "pk": 29
},
{
  "fields": {
    "tags": [
      13,
      21
    ],
    "pub_date": "2015-08-16T03:36:44.552Z",
    "content": "# \u30d3\u30fc\u30eb\u306b\u3042\u3046\u4e00\u53e3\u30b5\u30a4\u30ba\u306e\u304a\u3044\u3057\u3044\u9903\u5b50\r\n\r\n[http://tabelog.com/aichi/A2301/A230103/23015455/](http://tabelog.com/aichi/A2301/A230103/23015455/)\r\n\r\n![image](http://www.kin3.info/category/gourmet/img/karaya-2.jpg)\r\n",
    "user": 2,
    "title": "\u5510\u3084"
  },
  "model": "app.memo",
  "pk": 30
},
{
  "fields": {
    "tags": [
      13,
      22
    ],
    "pub_date": "2015-08-16T03:42:59.408Z",
    "content": "# \u98f2\u3093\u3060\u5f8c\u306b\u3074\u3063\u305f\u308a\u306a\u30ab\u30ec\u30fc\u3046\u3069\u3093\r\n\r\n[http://tabelog.com/aichi/A2301/A230103/23000374/](http://tabelog.com/aichi/A2301/A230103/23000374/)\r\n\r\n![image](http://image1-3.tabelog.k-img.com/restaurant/images/Rvw/34128/640x640_rect_34128119.jpg)\r\n",
    "user": 2,
    "title": "\u3046\u3069\u3093\u9326"
  },
  "model": "app.memo",
  "pk": 31
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-08-16T09:46:12.731Z",
    "content": "# \u30cf\u30ce\u30a4\u306e\u5854\u306e\u518d\u5e30\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\r\n\r\n```\r\ndef hanoi(n, source, work, dest):\r\n    if 2 <= n:\r\n        hanoi(n - 1, source, dest, work)\r\n\r\n    print('{0} \u3092 {1} \u304b\u3089 {2} \u3078'.format(n, source, dest))\r\n\r\n    if 2 <= n:\r\n        hanoi(n - 1, work, source, dest)\r\n\r\nif __name__ == '__main__':\r\n    hanoi(64, 'A', 'B', 'C')\r\n```\r\n",
    "user": 2,
    "title": "\u30cf\u30ce\u30a4\u306e\u5854"
  },
  "model": "app.memo",
  "pk": 32
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-08-16T10:22:06.358Z",
    "content": "# Python\u3067\u6b63\u898f\u8868\u73fe\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\r\n\r\n\u5f8c\u65b9\u53c2\u7167\u306e\u53d6\u308a\u51fa\u3057\u65b9\u3068\u304b\u3044\u3064\u3082\u8abf\u3079\u3066\u3057\u307e\u3046\u306e\u3067\uff0e\r\n\r\n```\r\nimport re\r\n\r\ntext = '<h1 style=\"width: 100px; height: 200px;\">'\r\nresult = re.search(r'width: (.*)px; height: (.*)px;', text)\r\n\r\nprint(result.group(0))      # 1\u56de\u76ee: width: 100px; height: 200px;\r\nprint(result.group(1))      # 1\u56de\u76ee: 100\r\nprint(result.group(2))      # 1\u56de\u76ee: 200\r\nprint(result.groups())      # 1\u56de\u76ee: ('100', '200')\r\n\r\nprint()\r\n\r\ntext = '[width=30, height=45] [width=40, height=20]'\r\nresult = re.finditer(r'\\[width=(.*), height=(.*)\\]', text)\r\n\r\nfor match in result:\r\n    print(match.group(0))   # 1\u56de\u76ee: [width=30, height=45]   2\u56de\u76ee: [width=30, height=45]  \r\n    print(match.group(1))   # 1\u56de\u76ee: 30                      2\u56de\u76ee: 40           \r\n    print(match.group(2))   # 1\u56de\u76ee: 45                      2\u56de\u76ee: 20           \r\n    print(match.groups())   # 1\u56de\u76ee: ('30', '45')            2\u56de\u76ee: ('40', '20')\r\n```\r\n",
    "user": 2,
    "title": "Python\u3067\u6b63\u898f\u8868\u73fe"
  },
  "model": "app.memo",
  "pk": 33
},
{
  "fields": {
    "tags": [
      1,
      23
    ],
    "pub_date": "2015-08-17T01:26:18.201Z",
    "content": "# \u540d\u524d\u4ed8\u3051\u306b\u56f0\u3063\u305f\u3089\r\n\r\n[https://codic.jp](https://codic.jp)\r\n\r\n![image](https://codic.jp/img/home_screenshot.png)\r\n",
    "user": 2,
    "title": "\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u305f\u3081\u306e\u30cd\u30fc\u30df\u30f3\u30b0\u8f9e\u66f8"
  },
  "model": "app.memo",
  "pk": 34
},
{
  "fields": {
    "tags": [
      8,
      1
    ],
    "pub_date": "2015-08-17T02:44:35.314Z",
    "content": "# signed\u3068unsigned\u306e\u6bd4\u8f03\r\n\r\nsizeof\u306e\u578b\u306funsigned\u3068\u306a\u3063\u3066\u3044\u308b\uff0esigned\u3068unsigned\u3092\u6bd4\u8f03\u3059\u308b\u3068unsigned\u3078\u306e\u6697\u9ed9\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u884c\u308f\u308c\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3067`-1`\u304c`0xFF`\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u601d\u3063\u305f\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u304c\uff0e\uff0e\uff0e\r\n\r\n```\r\n#include <stdio.h>\r\n\r\n#define TOTAL_ELEMENTS (sizeof(array) / sizeof(array[0]))\r\nint array[] = { 23, 34, 12, 17, 204, 99, 16 };\r\n\r\nint main()\r\n{\r\n    for (int d = -1; d <= (TOTAL_ELEMENTS - 2); d++)\r\n    {\r\n        printf(\"%d\\n\", array[d + 1]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\n",
    "user": 2,
    "title": "sizeof\u306e\u578b\u3068\u6bd4\u8f03\u6f14\u7b97\u5b50\u3067\u306e\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8"
  },
  "model": "app.memo",
  "pk": 35
},
{
  "fields": {
    "tags": [
      25
    ],
    "pub_date": "2015-08-18T06:58:13.361Z",
    "content": "# \u4ed6\u3067\u306f\u3042\u307e\u308a\u898b\u306a\u3044\u3088\u3046\u306a\u304a\u3082\u3057\u308d\u3044\u30d4\u30af\u30c8\u30b0\u30e9\u30e0\r\n\r\n[http://pictogram2.com](http://pictogram2.com)\r\n\r\n![image](http://pictogram2.com/p/p0256/i/m.png)\r\n",
    "user": 2,
    "title": "\u30e6\u30cb\u30fc\u30af\u306a\u30d2\u30e5\u30fc\u30de\u30f3\u30d4\u30af\u30c8\u30b0\u30e9\u30e0\u96c6"
  },
  "model": "app.memo",
  "pk": 36
},
{
  "fields": {
    "tags": [
      25
    ],
    "pub_date": "2015-08-18T08:56:46.940Z",
    "content": "# \u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3068\u30d5\u30e9\u30c3\u30c8\u30c7\u30b6\u30a4\u30f3\u3063\u3066\u7d50\u5c40\u4f55\u304c\u9055\u3046\u306e\uff1f\r\n\r\n[http://matome.naver.jp/odai/2142379522980270301](http://matome.naver.jp/odai/2142379522980270301)\r\n\r\n[http://photoshopvip.net/archives/76201](http://photoshopvip.net/archives/76201)\r\n\r\n![image](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7SjE5bTNHN3JpQXc/style_color_introduction.png)\r\n",
    "user": 2,
    "title": "Google\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3"
  },
  "model": "app.memo",
  "pk": 37
},
{
  "fields": {
    "tags": [
      25
    ],
    "pub_date": "2015-08-19T06:55:37.154Z",
    "content": "\u30d9\u30fc\u30b9\u30ab\u30e9\u30fc\u3092\u6307\u5b9a\u3057\uff0c\u305d\u308c\u306b\u5bfe\u5fdc\u3057\u3066good\u306a\u8272\u5408\u3044\u3092\u898b\u3064\u3051\u3066\u304f\u308c\u307e\u3059\uff0e\u30e2\u30ce\u30c8\u30fc\u30f3\u7cfb\u3060\u3051\u3067\u306a\u304f\uff0c\u88dc\u8272\u3092\u5229\u7528\u3057\u305f\u7269\u3084\u985e\u4f3c\u8272\u306a\u3069\uff0c\u3044\u308d\u3044\u308d\u306a\u30bf\u30a4\u30d7\u3092\u9078\u3079\u307e\u3059\uff0e\r\n\r\n[https://color.adobe.com/ja/create/color-wheel/](https://color.adobe.com/ja/create/color-wheel/)\r\n\r\n![image](http://cdn-ak.f.st-hatena.com/images/fotolife/b/blacktails2/20140713/20140713004301.png)\r\n",
    "user": 2,
    "title": "Adobe Kuler"
  },
  "model": "app.memo",
  "pk": 38
},
{
  "fields": {
    "tags": [
      1,
      26
    ],
    "pub_date": "2015-08-22T08:32:42.107Z",
    "content": "django\u306e\u30ed\u30b0\u30a4\u30f3\u30b7\u30b9\u30c6\u30e0\u3067CSRF\u691c\u8a3c\u5931\u6557\u304c403\u30a8\u30e9\u30fc\u3067\u51fa\u3066\u3044\u305f\u306e\u3067\uff0c\u7c21\u6613\u7684\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067jQuery\u3067\u306e\u9632\u6b62\u7b56\uff0e\r\n\r\n[http://weble.org/2012/06/12/jquery-multiplex-disable](http://weble.org/2012/06/12/jquery-multiplex-disable)\r\n\r\n```\r\n$('form').submit(function() {\r\n    $(this).submit(function () {\r\n        alert('\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u30c7\u30fc\u30bf\u9001\u4fe1\u306f\u4e00\u5ea6\u305a\u3064\u884c\u306a\u3063\u3066\u4e0b\u3055\u3044\uff0e');\r\n        return false;\r\n    });\r\n});\r\n```\r\n",
    "user": 2,
    "title": "\u30d5\u30a9\u30fc\u30e0\u306e2\u91cd\u9001\u4fe1\u3092\u7981\u6b62"
  },
  "model": "app.memo",
  "pk": 39
},
{
  "fields": {
    "tags": [
      27
    ],
    "pub_date": "2015-08-23T12:05:32.006Z",
    "content": "# \u30d2\u30e5\u30fc\u30de\u30ce\u30a4\u30c9\u30ed\u30dc\u30c3\u30c8\u7528\u306eOS\r\n\r\nKinect\u3067\u30b7\u30e3\u30a2\u5c02\u7528\u30ba\u30b4\u30c3\u30af\u3092\u52d5\u304b\u3057\u3066\u3044\u305f\u306e\u306f\u3053\u308c\uff0eKinect\u306f\u3072\u3087\u3063\u3068\u3057\u3066SDK\u3067\u306a\u304f\u30cf\u30c3\u30af\uff1f\uff1f\r\n\r\n[https://v-sido-developer.com](https://v-sido-developer.com)\r\n\r\n[http://www.v-sido.com/ja/index.html](http://www.v-sido.com/ja/index.html)\r\n\r\n[https://www.youtube.com/watch?v=Qqz28b6SLzQ](https://www.youtube.com/watch?v=Qqz28b6SLzQ)\r\n\r\n![image](https://v-sido-developer.com/wp-content/uploads/2014/12/top0605.png)\r\n",
    "user": 2,
    "title": "V-Sido OS"
  },
  "model": "app.memo",
  "pk": 42
},
{
  "fields": {
    "tags": [
      13,
      30,
      31
    ],
    "pub_date": "2015-08-26T10:52:05.322Z",
    "content": "# \u5bff\u53f8\u3068\u5929\u3077\u3089\u306e\u4e21\u65b9\r\n\r\n[http://tabelog.com/aichi/A2301/A230102/23045059/](http://tabelog.com/aichi/A2301/A230102/23045059/)\r\n\r\n![image](http://image1-2.tabelog.k-img.com/resize/660x370c/restaurant/images/Rvw/24879/24879442.jpg?token=f36f479&api=v2)\r\n",
    "user": 2,
    "title": "\u3075\u3089\u308a\u5bff\u53f8"
  },
  "model": "app.memo",
  "pk": 43
},
{
  "fields": {
    "tags": [
      1,
      32
    ],
    "pub_date": "2015-08-27T02:29:32.312Z",
    "content": "Git\u3067\u958b\u767a\u3057\u3066\u3044\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\uff0c\u7d0d\u54c1\u6642\u306a\u3069\u306b\u66f4\u65b0\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u629c\u304d\u51fa\u3059\u65b9\u6cd5\uff0e\r\n\r\n```\r\n$ git archive --format=zip --prefix=root/ HEAD `git diff --name-only --diff-filter=AMCR tagname HEAD` -o hoge.zip\r\n```\r\n\r\n\u203b`tagname`\u306f\u30b9\u30bf\u30fc\u30c8\u6642\u306e\u30b3\u30df\u30c3\u30c8\u306etag\u540d\uff0e\r\n",
    "user": 2,
    "title": "Git\u3067\u66f4\u65b0\u30d5\u30a1\u30a4\u30eb\u3092\u62bd\u51fa"
  },
  "model": "app.memo",
  "pk": 44
},
{
  "fields": {
    "tags": [
      1,
      33
    ],
    "pub_date": "2015-09-06T11:34:52.259Z",
    "content": "## Heroku\u30a2\u30d7\u30ea\u306e\u65b0\u898f\u4f5c\u6210\r\n\r\n```\r\n$ heroku create \u30a2\u30d7\u30ea\u540d\r\n```\r\n*\u30a2\u30d7\u30ea\u540d\u3092\u7701\u7565\u3059\u308b\u3068\u30e9\u30f3\u30c0\u30e0\u306a\u540d\u524d\u3067\u4f5c\u6210\u3055\u308c\u3066\u3057\u307e\u3046\uff0e*\r\n\r\n## \u30ed\u30b0\u306e\u78ba\u8a8d\r\n\r\n```\r\n$ heroku logs\r\n```\r\n\r\n## DB\u306e\u30af\u30ea\u30a2\r\n\r\n```\r\n$ heroku pg:reset DATABASE\r\n```\r\n\r\n## ssh\u30ed\u30b0\u30a4\u30f3\r\n\r\n```\r\n$ heroku run bash\r\n```\r\n\r\n## python\u306e\u5b9f\u884c\u65b9\u6cd5\r\n\r\n```\r\n$ heroku run python manage.py syncdb\r\n```\r\n\r\n## heroku\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u5207\u308a\u66ff\u3048\r\n\r\n```\r\n$ heroku logout\r\n$ heroku login\r\n```\r\n\r\n*\u4e00\u5ea6\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304b\u3089\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\uff0e*\r\n\r\n## \u305d\u306e\u307b\u304b\u8a73\u3057\u304f\u306f\u672c\u5bb6\u3067\r\n[https://devcenter.heroku.com](https://devcenter.heroku.com)\r\n",
    "user": 2,
    "title": "Heroku\u30b3\u30de\u30f3\u30c9\u899a\u3048\u66f8\u304d"
  },
  "model": "app.memo",
  "pk": 48
},
{
  "fields": {
    "tags": [
      1,
      2,
      33
    ],
    "pub_date": "2015-09-13T18:07:34.030Z",
    "content": "# DB\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\r\n\r\n```\r\n$ heroku run python manage.py dumpdata app_name --format=json --indent=2 > app.json\r\n```\r\n\u30ed\u30fc\u30ab\u30eb\u306bapp.json\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e\r\n\r\n# DB\u30ea\u30b9\u30c8\u30a2\r\n\r\n```\r\n$ heroku run python manage.py loaddata app.json\r\n```\r\n\u307e\u305a\u306f\u3058\u3081\u306bgit\u3067json\u3092commit + push\u3057\u3066\u304a\u304f\uff0e\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u306f\u30ea\u30b9\u30c8\u30a2\u3067\u304d\u306a\u3044\u3063\u307d\u3044\uff0e\r\n",
    "user": 2,
    "title": "Heroku + Django\u306eDB\u30d0\u30c3\u30af\u30a2\u30c3\u30d7"
  },
  "model": "app.memo",
  "pk": 53
},
{
  "fields": {
    "tags": [
      1,
      2,
      33
    ],
    "pub_date": "2015-09-14T13:44:19.214Z",
    "content": "# manage.py syncdb\u304c\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u306e\u3067\r\n\r\n```\r\n$ heroku run python manage.py migrate auth\r\n$ heroku run python manage.py migrate\r\n$ heroku run python manage.py createsuperuser\r\n```\r\n\r\nHeroku\u74b0\u5883\u3067\u306f`migrate auth`\u3067\u4e00\u90e8\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u304c\uff0c\u3053\u306e\u624b\u9806\u304c\u6210\u529f\u7387\u9ad8\u3044\u3063\u307d\u3044\uff0e\r\n",
    "user": 2,
    "title": "Heroku + Django\u306eDB\u521d\u671f\u5316"
  },
  "model": "app.memo",
  "pk": 54
},
{
  "fields": {
    "tags": [
      13,
      34
    ],
    "pub_date": "2015-10-05T13:36:13.866Z",
    "content": "# \u7d20\u63da\u3052\u3057\u305f\u91ce\u83dc\u304c\u30b7\u30e3\u30ad\u30b7\u30e3\u30ad\r\n\r\n[http://tabelog.com/aichi/A2301/A230101/23056147/](http://tabelog.com/aichi/A2301/A230101/23056147/)\r\n\r\n![image](http://tabelog.com/imgview/original?id=r3192739255166)\r\n",
    "user": 2,
    "title": "\u91ce\u83dc\u3092\u98df\u3079\u308b\u30ab\u30ec\u30fccamp"
  },
  "model": "app.memo",
  "pk": 55
},
{
  "fields": {
    "tags": [
      35
    ],
    "pub_date": "2015-10-13T13:24:45.732Z",
    "content": "# \u5175\u5eab\u770c\u8d64\u7a42\u5e02\u306e\u6e29\u6cc9\u65c5\u9928\r\n\r\n\u6e29\u6cc9\u304b\u306a\u308a\u6700\u9ad8\u3060\u3063\u305f\uff0e\u6599\u7406\u3082\u3046\u307e\u3044\uff0e\r\n\r\n[http://www.ginpaso.co.jp](http://www.ginpaso.co.jp)\r\n\r\n![image](http://www.ginpaso.co.jp/spa/img/spa_img_iwami_03.png)\r\n",
    "user": 2,
    "title": "\u6d77\u306e\u76ee\u7dda\u306e\u9732\u5929\u98a8\u5442"
  },
  "model": "app.memo",
  "pk": 56
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-10-26T01:51:23.321Z",
    "content": "# \u76f4\u63a5.py\u30d5\u30a1\u30a4\u30eb\u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306b\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\u3084\u3064\r\n\r\n\u3044\u3064\u3082\u66f8\u304d\u65b9\u5fd8\u308c\u3066\u8abf\u3079\u3066\u3057\u307e\u3046\u306e\u3067\u899a\u66f8\u304d\uff0e  \r\n\u203b\u3064\u3044\u3067\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u306e\u53d6\u308a\u65b9\u3082\uff0e\r\n\r\n```\r\nimport sys\r\n\r\ndef do_something(value):\r\n    print(value)\r\n\r\nif __name__ == '__main__':\r\n    value = 'spam' if len(sys.argv) <= 1 else sys.argv[1]\r\n    do_something(value)\r\n```\r\n",
    "user": 2,
    "title": "Python\u3067main\u95a2\u6570\u3063\u307d\u3044\u3084\u3064"
  },
  "model": "app.memo",
  "pk": 57
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-10-28T11:50:02.945Z",
    "content": "\u4e00\u822c\u7684\u306aUnit\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u65b9\u6cd5\uff0e\r\n\r\n```\r\nimport unittest\r\n\r\nclass MyUnittest(unittest.TestCase):\r\n    def test_01(self):\r\n        a = 1\r\n        b = 1\r\n        self.assertTrue(a == b)\r\n        self.assertTrue(a is b)\r\n\r\n    def test_02(self):\r\n        a = [1, 2, 3]\r\n        b = [1, 2, 3]\r\n        self.assertTrue(a == b)\r\n        self.assertTrue(a is not b)\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n",
    "user": 2,
    "title": "Python\u6a19\u6e96\u306eUnit\u30c6\u30b9\u30c8"
  },
  "model": "app.memo",
  "pk": 58
},
{
  "fields": {
    "tags": [
      1
    ],
    "pub_date": "2015-11-08T07:58:53.702Z",
    "content": "[http://pronama.azurewebsites.net](http://pronama.azurewebsites.net)\r\n\r\n![image](http://pronama.jp/code/sd.png)\r\n",
    "user": 2,
    "title": "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u751f\u653e\u9001"
  },
  "model": "app.memo",
  "pk": 59
},
{
  "fields": {
    "tags": [
      36
    ],
    "pub_date": "2015-11-13T09:34:30.016Z",
    "content": "# \u30aa\u30a4\u30e9\u30fc\u306e\u7b49\u5f0f\r\n\r\n```\r\ne^i\u03c0 + 1 = 0\r\n```\r\n\r\n> \u3068\u306f\u3044\u3048\u79c1\u306a\u3093\u304b\u306f\uff0c\u7b54\u3048\u304c\uff10\u306b\u306a\u308b\u306a\u3089\u53d6\u308a\u7acb\u3066\u3066\u8a08\u7b97\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u3063\u3066\u601d\u3044\u307e\u3059\u3051\u308c\u3069\u306d\uff0e\r\n",
    "user": 2,
    "title": "\u6570\u5b66\u53f2\u4e0a\u6700\u3082\u7f8e\u3057\u3044\u5f0f"
  },
  "model": "app.memo",
  "pk": 60
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-11-22T15:45:23.846Z",
    "content": "\u7a7a\u3092\u98db\u3073\u305f\u304f\u306a\u3063\u305f\u3089\uff0e\uff0e\uff0e\r\n\r\n```\r\nimport this\r\nimport __hello__\r\nimport antigravity\r\n```\r\n\r\n![image](http://imgs.xkcd.com/comics/python.png)\r\n",
    "user": 2,
    "title": "Python\u306eeaster egg"
  },
  "model": "app.memo",
  "pk": 61
},
{
  "fields": {
    "tags": [
      1,
      2
    ],
    "pub_date": "2015-11-28T10:32:46.038Z",
    "content": "\u3061\u3087\u3063\u3068\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```\r\nimport re\r\n\r\nwith open('A-large-practice.in') as f:\r\n    L, D, N = [int(x) for x in f.readline()[:-1].split()]\r\n    table = [f.readline()[:-1] for _ in range(D)]\r\n    for i in range(N):\r\n        pattern = f.readline()[:-1].replace('(', '[').replace(')', ']')\r\n        K = len([x for x in table if re.match(pattern, x) is not None])\r\n        print('Case #{0}: {1}'.format(i + 1, K))\r\n```\r\n",
    "user": 2,
    "title": "Alien Language"
  },
  "model": "app.memo",
  "pk": 62
},
{
  "fields": {
    "tags": [
      37
    ],
    "pub_date": "2015-12-17T02:00:55.820Z",
    "content": "# SQL Server\u3068IIS\u306e\u74b0\u5883\u69cb\u7bc9\r\n\r\n\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u305f\u3089\uff0c\u3060\u3044\u305f\u3044\u3084\u308c\u305f\uff0e\r\n\r\n[https://creativeweb.jp](https://creativeweb.jp)\r\n\r\n\u3042\u3068\uff0c\u30dd\u30fc\u30c8\u306e\u6307\u5b9a\u3067\u3061\u3087\u3044\u306f\u307e\u3063\u305f\uff0e\r\n\r\n> 192.168.0.3\\SQLExpress \u3067\u63a5\u7d9a\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u6307\u5b9a\u3057\u3066 192.168.0.3\\SQLExpress,1433 \u3067\u63a5\u7d9a\u3059\u308b\u3068\u3046\u307e\u304f\u63a5\u7d9a\u3067\u304d\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002",
    "user": 2,
    "title": "Windows\u74b0\u5883\u3067\u306e\u30b5\u30fc\u30d0\u69cb\u7bc9"
  },
  "model": "app.memo",
  "pk": 63
},
{
  "fields": {
    "tags": [
      1,
      10
    ],
    "pub_date": "2015-12-17T02:23:27.059Z",
    "content": "\u3068\u308a\u3042\u3048\u305a\u4e0b\u8a18\u306e\u306f\u3066\u306a\u30d6\u30ed\u30b0\u3092\u3056\u3063\u3068\u898b\u308b\u3068\u3044\u3044\u304b\u3082\uff0e\r\n\r\n[http://blog.okazuki.jp/entry/2014/12/27/200015](http://blog.okazuki.jp/entry/2014/12/27/200015)\r\n\r\n![image](http://hatenablog.com/images/top/top-logo@2x.png)\r\n",
    "user": 2,
    "title": "WPF\u306e\u57fa\u790e\u77e5\u8b58"
  },
  "model": "app.memo",
  "pk": 64
},
{
  "fields": {
    "tags": [
      1,
      25
    ],
    "pub_date": "2015-12-17T04:15:35.220Z",
    "content": "# \u65e5\u672c\u8a9e\u3082\u304d\u308c\u3044\u306b\u8868\u793a\u3055\u308c\u308bBootstrap\u30c6\u30fc\u30de\r\n\r\n[http://honokak.osaka](http://honokak.osaka)\r\n\r\n![image](http://cdn.honokak.osaka/assets/img/umi.png)\r\n",
    "user": 2,
    "title": "Bootstrap Theme for Japanese."
  },
  "model": "app.memo",
  "pk": 65
},
{
  "fields": {
    "tags": [
      1,
      10
    ],
    "pub_date": "2015-12-18T05:33:20.209Z",
    "content": "# A wiki for .NET developers\r\n\r\nPInvoke.net is primarily a wiki, allowing developers to find, edit and add PInvoke* signatures, user-defined types, and any other information related to calling Win32 and other unmanaged APIs from managed code (written in languages such as C# or VB.\r\nNET).\r\n\r\n[http://www.pinvoke.net](http://www.pinvoke.net)\r\n\r\n![image](http://www.pinvoke.net/images/vsaddin1.png)\r\n",
    "user": 2,
    "title": "PInvoke.net"
  },
  "model": "app.memo",
  "pk": 66
},
{
  "fields": {
    "tags": [
      1,
      2,
      18
    ],
    "pub_date": "2015-12-26T12:07:32.526Z",
    "content": "# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u8868\u793a\uff0e\r\n\r\n```\r\nimport cv2\r\n\r\ndef main():\r\n    gray = cv2.imread(\"spam.png\", 0)    # \u5165\u529b\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067\u53d6\u5f97\r\n    edge = cv2.Canny(gray, 100, 200)    # Canny\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30a8\u30c3\u30b8\u691c\u51fa\r\n    cv2.imshow(\"Show Image\", edge)      # \u30a8\u30c3\u30b8\u753b\u50cf\u3092\u8868\u793a\r\n    cv2.waitKey(0)                      # \u30ad\u30fc\u5165\u529b\u5f85\u6a5f\r\n    cv2.destroyAllWindows()             # \u30a6\u30a3\u30f3\u30c9\u30a6\u7834\u68c4\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n",
    "user": 2,
    "title": "Python + OpenCV"
  },
  "model": "app.memo",
  "pk": 67
}
]
