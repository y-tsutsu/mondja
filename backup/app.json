[
{
  "model": "app.tag",
  "pk": 1,
  "fields": {
    "name": "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0",
    "pub_date": "2015-08-09T14:38:01.103Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 2,
  "fields": {
    "name": "Python",
    "pub_date": "2015-08-09T14:38:01.133Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 3,
  "fields": {
    "name": "LT",
    "pub_date": "2015-08-09T14:40:00.384Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 4,
  "fields": {
    "name": "\u6050\u7adc",
    "pub_date": "2015-08-09T14:41:37.322Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 5,
  "fields": {
    "name": "\u5316\u77f3",
    "pub_date": "2015-08-09T14:41:37.411Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 6,
  "fields": {
    "name": "\u653b\u6bbb\u6a5f\u52d5\u968a",
    "pub_date": "2015-08-09T14:44:31.436Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 7,
  "fields": {
    "name": "ARIZE",
    "pub_date": "2015-08-09T14:44:31.452Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 8,
  "fields": {
    "name": "C\u8a00\u8a9e",
    "pub_date": "2015-08-09T14:46:01.371Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 9,
  "fields": {
    "name": "FizzBuzz",
    "pub_date": "2015-08-09T14:46:01.418Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 10,
  "fields": {
    "name": "C#",
    "pub_date": "2015-08-09T14:49:10.255Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 11,
  "fields": {
    "name": "GUNDAM",
    "pub_date": "2015-08-09T14:49:59.937Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 12,
  "fields": {
    "name": "GCJ",
    "pub_date": "2015-08-09T14:53:30.708Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 13,
  "fields": {
    "name": "\u98df\u4e8b",
    "pub_date": "2015-08-09T14:58:36.261Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 14,
  "fields": {
    "name": "\u3082\u3093\u3058\u3083",
    "pub_date": "2015-08-09T14:58:36.300Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 15,
  "fields": {
    "name": "\u52d5\u7269",
    "pub_date": "2015-08-09T15:03:12.141Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 16,
  "fields": {
    "name": "C++",
    "pub_date": "2015-08-09T15:04:41.703Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 17,
  "fields": {
    "name": "\u30af\u30ed\u30fc\u30b8\u30e3",
    "pub_date": "2015-08-09T15:09:42.627Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 18,
  "fields": {
    "name": "OpenCV",
    "pub_date": "2015-08-09T15:13:58.721Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 20,
  "fields": {
    "name": "\u6620\u753b",
    "pub_date": "2015-08-14T13:08:00.432Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 21,
  "fields": {
    "name": "\u9903\u5b50",
    "pub_date": "2015-08-16T03:36:44.607Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 22,
  "fields": {
    "name": "\u3046\u3069\u3093",
    "pub_date": "2015-08-16T03:42:59.512Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 25,
  "fields": {
    "name": "\u30c7\u30b6\u30a4\u30f3",
    "pub_date": "2015-08-18T08:54:15.522Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 26,
  "fields": {
    "name": "jQuery",
    "pub_date": "2015-08-22T08:32:42.131Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 27,
  "fields": {
    "name": "\u30ed\u30dc\u30c3\u30c8",
    "pub_date": "2015-08-23T12:05:33.817Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 30,
  "fields": {
    "name": "\u5bff\u53f8",
    "pub_date": "2015-08-26T11:21:48.004Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 31,
  "fields": {
    "name": "\u5929\u3077\u3089",
    "pub_date": "2015-08-26T11:22:51.859Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 32,
  "fields": {
    "name": "Git",
    "pub_date": "2015-08-27T02:29:32.346Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 33,
  "fields": {
    "name": "Heroku",
    "pub_date": "2015-09-06T11:34:53.893Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 34,
  "fields": {
    "name": "\u30ab\u30ec\u30fc",
    "pub_date": "2015-10-05T13:36:13.995Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 35,
  "fields": {
    "name": "\u6e29\u6cc9",
    "pub_date": "2015-10-13T13:24:45.747Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 36,
  "fields": {
    "name": "\u6570\u5b66",
    "pub_date": "2015-11-13T09:34:30.042Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 37,
  "fields": {
    "name": "Windows",
    "pub_date": "2015-12-17T02:00:55.827Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 39,
  "fields": {
    "name": "\u96d1\u5b66",
    "pub_date": "2016-01-17T07:18:57.554Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 40,
  "fields": {
    "name": "\u547d\u540d\u898f\u7d04",
    "pub_date": "2016-01-17T07:20:11.646Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 41,
  "fields": {
    "name": "\u30a2\u30cb\u30e1",
    "pub_date": "2016-01-19T12:44:05.096Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 42,
  "fields": {
    "name": "\u690d\u7269",
    "pub_date": "2016-01-26T01:10:23Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 44,
  "fields": {
    "name": "Socket",
    "pub_date": "2016-01-30T12:52:54.854Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 46,
  "fields": {
    "name": "Atom",
    "pub_date": "2016-04-28T01:57:54.663Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 47,
  "fields": {
    "name": "Electron",
    "pub_date": "2016-05-08T00:34:42.168Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 48,
  "fields": {
    "name": "Django",
    "pub_date": "2016-05-21T07:52:30.700Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 49,
  "fields": {
    "name": "\u5c45\u9152\u5c4b",
    "pub_date": "2016-05-22T11:38:32.611Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 50,
  "fields": {
    "name": "\u6642\u8a08",
    "pub_date": "2016-05-31T13:53:49.235Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 51,
  "fields": {
    "name": "\u30de\u30cd\u30b8\u30e1\u30f3\u30c8",
    "pub_date": "2016-06-13T05:55:27.193Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 52,
  "fields": {
    "name": "Debian",
    "pub_date": "2016-08-11T08:11:30.756Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 53,
  "fields": {
    "name": "\u6a5f\u68b0\u5b66\u7fd2",
    "pub_date": "2016-09-19T02:19:41.558Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 54,
  "fields": {
    "name": "Vivaldi",
    "pub_date": "2016-09-30T14:05:25.017Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 55,
  "fields": {
    "name": "VSCode",
    "pub_date": "2016-12-01T06:02:40.362Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 56,
  "fields": {
    "name": "TypeScript",
    "pub_date": "2016-12-18T09:49:44.330Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 57,
  "fields": {
    "name": "Qt",
    "pub_date": "2017-02-04T12:04:09.735Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 58,
  "fields": {
    "name": "Elixir",
    "pub_date": "2017-02-11T05:16:19.586Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 59,
  "fields": {
    "name": "Jupyter",
    "pub_date": "2017-08-19T03:22:57.286Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 60,
  "fields": {
    "name": "GitHub",
    "pub_date": "2017-09-05T13:42:38.051Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 61,
  "fields": {
    "name": "\u751f\u6d3b",
    "pub_date": "2017-09-16T01:37:36.884Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 62,
  "fields": {
    "name": "Docker",
    "pub_date": "2017-10-21T11:56:25.554Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 63,
  "fields": {
    "name": "reveal.js",
    "pub_date": "2018-04-05T06:59:24.008Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 64,
  "fields": {
    "name": "Go",
    "pub_date": "2018-12-16T14:07:42.493Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 65,
  "fields": {
    "name": "Node.js",
    "pub_date": "2019-08-04T06:21:35.400Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 66,
  "fields": {
    "name": "VMware",
    "pub_date": "2019-09-01T00:38:40.149Z",
    "user": 2
  }
},
{
  "model": "app.tag",
  "pk": 67,
  "fields": {
    "name": "WSL",
    "pub_date": "2020-03-08T06:55:48.186Z",
    "user": 2
  }
},
{
  "model": "app.memo",
  "pk": 1,
  "fields": {
    "title": "Hello, python!",
    "content": "# Hello World with Python\r\n\r\n```py\r\n# coding: utf-8\r\nprint('Hello, python!')\r\n```",
    "pub_date": "2015-08-09T14:38:01.085Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 2,
  "fields": {
    "title": "LT random",
    "content": "# *random*\r\n\r\n```py\r\nimport random\r\n\r\nwith open('lt_list.txt', 'r', encoding='shift_jis') as f:\r\n    file = f.readlines()\r\n\r\nif file != []:\r\n    choice = random.choice(file)\r\n    print(('\u6700\u5f8c\u306f ' if len(file) == 1 else '\u6b21\u306f ') + choice[:-1] + ' \u3067\u3059(\u3063\u00b4\u2200\uff40)\u3063')\r\n    file.remove(choice)\r\n\r\n    with open('lt_list.txt', 'w', encoding='shift_jis') as f:\r\n        f.writelines(file)\r\n```",
    "pub_date": "2015-08-09T14:40:00.343Z",
    "user": 2,
    "tags": [
      1,
      2,
      3
    ]
  }
},
{
  "model": "app.memo",
  "pk": 3,
  "fields": {
    "title": "\u30d6\u30e9\u30c3\u30af\u30fb\u30d3\u30e5\u30fc\u30c6\u30a3",
    "content": "# *t-rex*\r\n\r\n![image](http://2.bp.blogspot.com/-sTfmaquq7xI/UFPEnwmCcHI/AAAAAAAABjk/ZCfXs3Ef_Lw/s1600/Royal+Tyrell+Museum+&+Hoodoo+Formations+011.JPG)",
    "pub_date": "2015-08-09T14:41:37.294Z",
    "user": 2,
    "tags": [
      4,
      5
    ]
  }
},
{
  "model": "app.memo",
  "pk": 4,
  "fields": {
    "title": "T-REX\u304c\u5f31\u304b\u3063\u305f\u3068\u304b\u3044\u3046\u3084\u3064",
    "content": "\u306a\u3081\u308b\u306a\u3088\uff01\uff01\r\n\r\n![image](http://3.bp.blogspot.com/-kvbJ2Lk3e5g/Ur1GXV2yTsI/AAAAAAAAcck/uu_54SA8zwY/s450/trex_kokkaku.png)</textarea>\r\n",
    "pub_date": "2015-08-09T14:42:48.335Z",
    "user": 2,
    "tags": [
      4,
      5
    ]
  }
},
{
  "model": "app.memo",
  "pk": 5,
  "fields": {
    "title": "\u653b\u6bbb\u6a5f\u52d5\u968aARIZE \u65b0\u5287\u5834\u7248",
    "content": "# \u30dc\u30fc\u30de\r\n\u6d3b\u8e8d\u3059\u308b\u304b\u306a\u3041\uff0e\uff0e\uff0e\r\n\r\n[http://kokaku-a.jp](http://kokaku-a.jp)\r\n\r\n![image](http://blog-imgs-62.fc2.com/d/d/3/dd360/arise_01.jpg)\r\n",
    "pub_date": "2015-08-09T14:44:31.429Z",
    "user": 2,
    "tags": [
      6,
      7
    ]
  }
},
{
  "model": "app.memo",
  "pk": 6,
  "fields": {
    "title": "C\u8a00\u8a9e\u306eFizzBuzz",
    "content": "# FizzBuzz\r\n\r\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u305a\u3089\u3059\u306e\u3068\uff0c\u9014\u4e2d\u306b\u7d42\u7aef\u6587\u5b57`\\0`\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\uff01\r\n\r\n```c\r\n#include <stdio.h>\r\n\r\nint main(int argc, char const *argv[])\r\n{\r\n    for (size_t i = 1; i < 16; i++)\r\n    {\r\n        printf(\"%d\\n\\0Fizz\\n\\0FizzBuzz\\n\" + ((i % 15) ? (i % 3) ? (i % 5) ? 0 : 14 : 4 : 10), i);\r\n    }\r\n    return 0;\r\n}\r\n```",
    "pub_date": "2015-08-09T14:46:01.320Z",
    "user": 2,
    "tags": [
      1,
      8,
      9
    ]
  }
},
{
  "model": "app.memo",
  "pk": 7,
  "fields": {
    "title": "Python\u306eFizzBuzz",
    "content": "# FizzBuzz\r\n\r\n\u3053\u308c\u306f**cool!!** `f + b or str(n)`\u304c\u306a\u3093\u3068\u3082(\u3002-\u2200-)\r\n\r\n```py\r\nfrom itertools import cycle\r\n\r\nfor s in [f + b or str(n) for f, b, n in zip(cycle([''] * 2 + ['Fizz']), cycle([''] * 4 + ['Buzz']), range(1, 16))]: print(s)\r\n```",
    "pub_date": "2015-08-09T14:48:15.652Z",
    "user": 2,
    "tags": [
      1,
      2,
      9
    ]
  }
},
{
  "model": "app.memo",
  "pk": 8,
  "fields": {
    "title": "C#\u306eFizzBuzz",
    "content": "#FizzBuzz\r\n\r\n`LINQ`\u3067\u3084\u3063\u3066\u307f\u305f\uff0e\r\n\r\n```cs\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApplication\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Enumerable.Range(1, 15).Select(x => (x % 15 == 0) ? \"FizzBuxx\" : (x % 3 == 0) ? \"Fizz\" : (x % 5 == 0) ? \"Buzz\" :  x.ToString()).ToList().ForEach(x => Console.WriteLine(x));\r\n        }\r\n    }\r\n}\r\n```",
    "pub_date": "2015-08-09T14:49:10.206Z",
    "user": 2,
    "tags": [
      1,
      9,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 9,
  "fields": {
    "title": "\u03bd\u30ac\u30f3\u30c0\u30e0",
    "content": "# \u9769\u547d\u8ad6\r\n\r\n\u9769\u547d\u306e\u3053\u3068\u3092\u77e5\u3089\u306a\u3044\u3093\u3060\u306a\u30fb\u30fb\u30fb\uff0e\u9769\u547d\u306f\u3044\u3064\u3082\u30a4\u30f3\u30c6\u30ea\u304c\u306f\u3058\u3081\u308b\u3093\u3060\uff0e\u5922\u898b\u305f\u3044\u306a\u76ee\u6a19\u3092\u6301\u3063\u3066\u3084\u308b\u304b\u3089\u3044\u3064\u3082\u904e\u6fc0\u306a\u3053\u3068\u3057\u304b\u3084\u3089\u306a\u3044\uff01\r\n\r\n![image](https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRrPD-1iRuYSJ3YRRf4eSknNu_rDZHvI3YJqVRK9aeFqByaNROTnw)\r\n",
    "pub_date": "2015-08-09T14:49:59.928Z",
    "user": 2,
    "tags": [
      11
    ]
  }
},
{
  "model": "app.memo",
  "pk": 10,
  "fields": {
    "title": "Google Code Jam 2015",
    "content": "# Google Code Jam\r\n\r\n\u4eca\u5e74\u306fpython\u3067\u3084\u308b\u304b\u3041\uff0e\r\n\r\n* Google Code Jam  \r\n [https://code.google.com/codejam](https://code.google.com/codejam)\r\n\r\n* Go, Hero!  \r\n [http://www.go-hero.net/jam/](http://www.go-hero.net/jam/)\r\n",
    "pub_date": "2015-08-09T14:53:30.686Z",
    "user": 2,
    "tags": [
      1,
      12
    ]
  }
},
{
  "model": "app.memo",
  "pk": 11,
  "fields": {
    "title": "Python\u30e1\u30e2( ..)\u03c6",
    "content": "# \u306a\u3093\u304b\u4f7f\u3044\u305d\u3046\u306a\u306e\u3092\u8f09\u305b\u3066\u304a\u304f\r\n\r\n## \u30ea\u30b9\u30c8\u64cd\u4f5c\r\n[http://qiita.com/clarinet758/items/e181fcfe8ed6f99cbeb5](http://qiita.com/clarinet758/items/e181fcfe8ed6f99cbeb5)\r\n  \r\n## \u4fbf\u5229\u306a\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\r\n[http://qiita.com/pika_shi/items/bf3b449a354cc7609ab9](http://qiita.com/pika_shi/items/bf3b449a354cc7609ab9)\r\n  \r\n## \u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\uff08\u30b5\u30d6\u30d5\u30a9\u30eb\u30c0\u3082\u518d\u5e30\u7684\u306b\uff09\r\n[http://www.gesource.jp/programming/python/code/0001.html](http://www.gesource.jp/programming/python/code/0001.html)\r\n\r\n![image](https://www.skyarch.net/blog/wp-content/uploads/2015/11/python-logo-master-v3-TM.png)",
    "pub_date": "2015-08-09T14:56:27.365Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 12,
  "fields": {
    "title": "\u3055\u3044\u305f\u306b\u3084",
    "content": "# *\u4e45\u5c4b\u306e\u3082\u3093\u3058\u3083*\r\n\r\n[http://tabelog.com/aichi/A2301/A230103/23038804/](http://tabelog.com/aichi/A2301/A230103/23038804/)\r\n\r\n![image](https://tblg.k-img.com/restaurant/images/Rvw/7367/320x320_rect_7367824.jpg)",
    "pub_date": "2015-08-09T14:58:36.248Z",
    "user": 2,
    "tags": [
      13,
      14
    ]
  }
},
{
  "model": "app.memo",
  "pk": 13,
  "fields": {
    "title": "\u3084\u3093\u3084",
    "content": "# *\u5208\u8c37\u306e\u3082\u3093\u3058\u3083*\r\n\r\n[http://tabelog.com/aichi/A2305/A230503/23009823/](http://tabelog.com/aichi/A2305/A230503/23009823/)\r\n\r\n![image](https://tblg.k-img.com/restaurant/images/Rvw/68139/68139243.jpg)",
    "pub_date": "2015-08-09T15:00:20.441Z",
    "user": 2,
    "tags": [
      13,
      14
    ]
  }
},
{
  "model": "app.memo",
  "pk": 14,
  "fields": {
    "title": "Google Code Jam with Python",
    "content": "# Google Coce Jam\u7528\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\r\n\r\n```py\r\nimport sys\r\n\r\nfilename = 'sample.txt' if len(sys.argv) == 1 else sys.argv[1]\r\nwith open(filename, 'r', encoding = 'shift_jis') as f:\r\n    T = int(f.readline()[:-1])    # \u6539\u884c\u306f\u305a\u3059\u30b9\u30e9\u30a4\u30b9\r\n    for i in range(T):\r\n        print('Case #{0}: {1}'.format(i + 1, 'ans'))\r\n```",
    "pub_date": "2015-08-09T15:01:37.310Z",
    "user": 2,
    "tags": [
      1,
      2,
      12
    ]
  }
},
{
  "model": "app.memo",
  "pk": 15,
  "fields": {
    "title": "5\u6642\u9593\u30687\u5206",
    "content": "## *\u541b\u306e\u4f11\u6687\u306e\u6700\u9577\u8a18\u9332\u3060\uff0e\uff0e\uff0e*\r\n\r\n![image](http://i.gzn.jp/img/2014/05/24/gits-arise-border3-trailer/00.png)\r\n",
    "pub_date": "2015-08-09T15:02:28.980Z",
    "user": 2,
    "tags": [
      6,
      7
    ]
  }
},
{
  "model": "app.memo",
  "pk": 16,
  "fields": {
    "title": "\u30cb\u30e3\u30f3\u30d4\u30e7\u30a6",
    "content": "# \u5915\u65b9\u306e\u30cb\u30e5\u30fc\u30b9\u3067\r\n\r\n\u898b\u3064\u304b\u3063\u305f\u3089\u3057\u3044\u3067\u3059( \uff9f\u0414\uff9f)\r\n\r\n![image](http://s.maho.jp/share/image_archive/6d/2c/6d2cf5bc10541bb2/df/df4e27f55e.jpg)\r\n",
    "pub_date": "2015-08-09T15:03:12.116Z",
    "user": 2,
    "tags": [
      15
    ]
  }
},
{
  "model": "app.memo",
  "pk": 17,
  "fields": {
    "title": "C++11\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb",
    "content": "# CPU\u8ca0\u8377\u3092\u4e0a\u3052\u308b\u30b5\u30f3\u30d7\u30eb\r\nstd::thread\u3068\u304b\u30e9\u30e0\u30c0\u5f0f\u3068\u304b\u7bc4\u56f2for\u3068\u304b\r\n\r\n```cpp\r\n#include \"stdafx.h\"\r\n#include <vector>\r\n#include <thread>\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tauto threads = std::vector<std::thread>(16);\r\n\tfor (auto& item : threads)\r\n\t{\r\n\t\titem = std::thread([]\r\n\t\t{\r\n\t\t\twhile (true)\r\n\t\t\t{\r\n\t\t\t\tauto x = 10.0 / 3;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfor (auto& item : threads)\r\n\t{\r\n\t\titem.join();\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n```",
    "pub_date": "2015-08-09T15:04:41.670Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 18,
  "fields": {
    "title": "\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3059\u95a2\u6570",
    "content": "std::function\u3067\u3044\u3044\u3060\u308d\u3046\uff0e\uff0e\uff0e\r\n\r\n```cpp\r\n#include \"stdafx.h\"\r\n#include <ostream>\r\n#include <functional>\r\n\r\nconst char* hoge(int n)\r\n{\r\n\treturn \"hoge\";\r\n}\r\n\r\ntypedef const char* (*hogetype)(int);\r\n\r\nhogetype piyo(double d)\r\n{\r\n\treturn hoge;\r\n}\r\n\r\nconst char* (*fuga(double d))(int)\r\n{\r\n\treturn hoge;\r\n}\r\n\r\nstd::function<const char* (int)> hogehoge(double d)\r\n{\r\n\treturn hoge;\r\n}\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tstd::cout << hoge(42) << std::endl;\r\n\r\n\tauto hoge1 = piyo(23.0);\r\n\tstd::cout << hoge1(42) << std::endl;\r\n\r\n\tauto hoge2 = fuga(23.0);\r\n\tstd::cout << hoge2(42) << std::endl;\r\n\r\n\tauto hoge3 = hogehoge(23.0);\r\n\tstd::cout << hoge3(42) << std::endl;\r\n\r\n\treturn 0;\r\n}\r\n```",
    "pub_date": "2015-08-09T15:05:41.685Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 19,
  "fields": {
    "title": "\u914d\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf",
    "content": "\u77e5\u3089\u306a\u304b\u3063\u305f\u306a\u3041\uff0e\uff0e\uff0e\u305f\u3060\u306e\u30a2\u30c9\u30ec\u30b9\u306e\u4e26\u3073\u3063\u3066\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u304b\uff0e\r\n\r\n```cpp\r\n#include \"stdafx.h\"\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tint ary[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\r\n\tint (*hoge)[10] = &ary;\r\n\r\n\t::printf(\"%p\\n\", ary);\r\n\t::printf(\"%p\\n\", &ary);\r\n\t::printf(\"%p\\n\", hoge);\t\t// &ary[0]\u306e\u3053\u3068\uff1f\uff08\u5b9f\u969b\u306f\u9055\u3046\u3063\u307d\u3044\uff0e\uff09\r\n\r\n\t::printf(\"%d, %d\\n\", ary[0], ary[1]);\r\n\t::printf(\"%d, %d\\n\", *hoge[0], *hoge[1]);\t\t// \u3042\u308c\uff1f( \uff9f\u0414\uff9f)\r\n\t::printf(\"%d, %d\\n\", (*hoge)[0], (*hoge)[1]);\t// *hoge\u306f\u914d\u5217\u3067\u3042\u308a\u5148\u982d\u8981\u7d20\u3058\u3083\u306a\u3044\u3063\u307d\u3044\uff0e\r\n\t//::pringf(\"%d, %d\\n\", (*ary)[0], (*ary)[1]);\t// ary\u3068hoge\u306f\u540c\u3058\u30a2\u30c9\u30ec\u30b9\u3092\u793a\u3059\u304c\u3053\u308c\u306f\u3067\u304d\u306a\u3044\uff0e\r\n\r\n\t//int(*piyo)[20] = &ary;\t// \u3061\u306a\u307f\u306b\u3053\u308c\u3082\u30c0\u30e1\uff0eC\u8a00\u8a9e\u306e\u914d\u5217\u3063\u3066\u3061\u3083\u3093\u3068\u578b\u3060\u3063\u305f\u3093\u3060\uff0e\uff0e\uff0e\r\n\r\n\treturn 0;\r\n}\r\n```",
    "pub_date": "2015-08-09T15:06:25.467Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 20,
  "fields": {
    "title": "Python\u306e\u547d\u540d\u898f\u7d04",
    "content": "# Google Python Style Guide \u306b\u3088\u308bPython \u306e\u547d\u540d\u898f\u7d04\r\n\r\n* \u30e2\u30b8\u30e5\u30fc\u30eb\uff1a module_name\r\n* \u30d1\u30c3\u30b1\u30fc\u30b8 : package_name\r\n* \u30af\u30e9\u30b9\u540d : ClassName\r\n* \u30e1\u30bd\u30c3\u30c9\u540d: method_name\r\n* \u4f8b\u5916 : ExceptionName\r\n* \u95a2\u6570\u540d : function_name\r\n* \u30b0\u30ed\u30fc\u30d0\u30eb\u5b9a\u6570\uff1aGLOBAL_CONSTANT_NAME\r\n* \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\uff1aglobal_var_name\r\n* \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 : instance_var_name\r\n* \u30ed\u30fc\u30ab\u30eb\u5909\u6570\uff1alocal_var_name\r\n",
    "pub_date": "2015-08-09T15:07:11.293Z",
    "user": 2,
    "tags": [
      1,
      2,
      40
    ]
  }
},
{
  "model": "app.memo",
  "pk": 21,
  "fields": {
    "title": "\u308a\u304d\u3085\u3046",
    "content": "# \u4f1a\u793e\u524d\u306e\u3082\u3093\u3058\u3083\r\n\r\n[http://www.rikyu-japan.com/nadya/](http://www.rikyu-japan.com/nadya/)\r\n\r\n![image](http://www.rikyu-japan.com/wp/wp-content/uploads/2016/07/nadya_0002.jpg)",
    "pub_date": "2015-08-09T15:08:34.387Z",
    "user": 2,
    "tags": [
      13,
      14
    ]
  }
},
{
  "model": "app.memo",
  "pk": 22,
  "fields": {
    "title": "C++\u306e\u30af\u30ed\u30fc\u30b8\u30e3",
    "content": "# C++\u3067\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\r\n\r\n\u5024\u3067\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066`mutable`\u3068\u3059\u308b\u3068\u5916\u306e\u74b0\u5883\u3092\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\uff0e\r\n\r\n```cpp\r\n#include \"stdafx.h\"\r\n#include <functional>\r\n#include <iostream>\r\n\r\nstd::function<int ()> Somethig()\r\n{\r\n\tauto count = 0;\r\n\treturn [=]() mutable -> int\r\n\t{\r\n\t\treturn ++count;\r\n\t};\r\n}\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n\tauto hoge = Somethig();\r\n\r\n\tfor (int i = 0; i < 100; i++)\r\n\t{\r\n\t\tstd::cout << hoge() << std::endl;\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n```",
    "pub_date": "2015-08-09T15:09:42.595Z",
    "user": 2,
    "tags": [
      1,
      16,
      17
    ]
  }
},
{
  "model": "app.memo",
  "pk": 23,
  "fields": {
    "title": "C#\u306e\u30af\u30ed\u30fc\u30b8\u30e3",
    "content": "# C#\u3067\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\r\n\r\n\u7279\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u304b\u306f\u3044\u3089\u306a\u3044\uff0e\r\n\r\n```cs\r\nusing System;\r\n\r\nnamespace cssample\r\n{\r\n    class Program\r\n    {\r\n        static Func<int> Something()\r\n        {\r\n            var count = 0;\r\n            return () => ++count;\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var hoge = Program.Something();\r\n\r\n            for (int i = 0; i < 100; i++)\r\n            {\r\n                Console.WriteLine(hoge());\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "pub_date": "2015-08-09T15:10:26.599Z",
    "user": 2,
    "tags": [
      1,
      10,
      17
    ]
  }
},
{
  "model": "app.memo",
  "pk": 24,
  "fields": {
    "title": "Python\u306e\u30af\u30ed\u30fc\u30b8\u30e3",
    "content": "# Python\u3067\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\r\n\r\n`nonlocal`\u3068\u3059\u308b\u3068\u5916\u5074\u306e\u74b0\u5883\u304c\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\uff0e\r\n\r\n```py\r\ndef something():\r\n    count = 0\r\n    def inner():\r\n        nonlocal count \r\n        count += 1\r\n        return count\r\n    return inner\r\n\r\nhoge = something()\r\nfor i in range(100):\r\n    print(hoge())\r\n```",
    "pub_date": "2015-08-09T15:12:07.584Z",
    "user": 2,
    "tags": [
      1,
      2,
      17
    ]
  }
},
{
  "model": "app.memo",
  "pk": 25,
  "fields": {
    "title": "\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3068\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9",
    "content": "# \u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3068\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u76f8\u6027\u304c\u60aa\u3044(..)\r\n\r\n\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u306f\u5909\u6570\u306e\u578b\u306e\u5024\u304c\u4f7f\u308f\u308c\u308b\uff0e\r\n\r\n```cs\r\nusing System;\r\n\r\nnamespace ConsoleApplication1\r\n{\r\n    class B\r\n    {\r\n        public virtual void X(string s = \"B\";)\r\n        {\r\n            Console.WriteLine(\"{0} : B\", s);\r\n        }\r\n    }\r\n\r\n    class S : B\r\n    {\r\n        public override void X(string s = \"S\")\r\n        {\r\n            Console.WriteLine(\"{0} : S\", s);\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            B b = new B();\r\n            b.X();    // B : B\r\n\r\n            S s = new S();\r\n            s.X();    // S : S\r\n\r\n            B bs = new S();\r\n            bs.X();   // B : S\r\n        }\r\n    }\r\n}\r\n```",
    "pub_date": "2015-08-09T15:13:03.431Z",
    "user": 2,
    "tags": [
      1,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 26,
  "fields": {
    "title": "Python\u3067OpenCV",
    "content": "# \u57fa\u790e\u7684\u306a\u3053\u3068\u304c\u304b\u306a\u308a\u7db2\u7f85\u3055\u308c\u3066\u3044\u308b\u30b5\u30a4\u30c8\r\n\r\n[http://opencv.blog.jp/python/\u4f7f\u3044\u65b9](http://opencv.blog.jp/python/\u4f7f\u3044\u65b9)\r\n\r\n![image](http://opencv.jp/wordpress/wp-content/uploads/q100_7.01bpp-300x300.png)",
    "pub_date": "2015-08-09T15:13:58.685Z",
    "user": 2,
    "tags": [
      1,
      2,
      18
    ]
  }
},
{
  "model": "app.memo",
  "pk": 27,
  "fields": {
    "title": "\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u53d6\u5f97",
    "content": "\u3044\u3064\u3082\u6bce\u56de\u8abf\u3079\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u3044\u308d\u3044\u308d\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u307e\u3068\u3081\uff0e\r\n\r\n```py\r\nimport os\r\nimport glob\r\n\r\ndirectory = 'C:\\\\Python34\\\\'\r\n\r\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\uff08\u540d\u524d\u306e\u307f\uff0c\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u6307\u5b9a\u4e0d\u53ef\uff09\r\nfor f in os.listdir(directory):\r\n    print(f)\r\n\r\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\uff08\u30d1\u30b9\u4ed8\u304d\uff09\r\nfor f in glob.glob(directory + '*.txt'):\r\n    print(f)\r\n\r\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff0b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\uff08\u540d\u524d\u306e\u307f\uff09\r\nfor f in [os.path.basename(r) for r in glob.glob(directory + '*.txt')]:\r\n    print(f)\r\n\r\n# \u518d\u5e30\u7684\u306b\u30d5\u30a9\u30eb\u30c0\u3092\u6e21\u308a\u6b69\u304d\r\nfor r, ds, fs in os.walk(directory):\r\n    print(r, ds, fs)\r\n```",
    "pub_date": "2015-08-13T06:09:48.832Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 29,
  "fields": {
    "title": "\u30b8\u30e5\u30e9\u30b7\u30c3\u30af\u30fb\u30ef\u30fc\u30eb\u30c9",
    "content": "\u6050\u7adc\u306e\u30b7\u30fc\u30f3\u304c\u304b\u306a\u308a\u826f\u304b\u3063\u305f\uff0e\u6700\u5f8c\u3082\u597d\u304d\uff01\r\n\r\n![iamge](http://blog-imgs-52.fc2.com/s/e/k/sekiga914/jyura401s.jpg)\r\n",
    "pub_date": "2015-08-14T13:08:00.424Z",
    "user": 2,
    "tags": [
      4,
      20
    ]
  }
},
{
  "model": "app.memo",
  "pk": 30,
  "fields": {
    "title": "\u5510\u3084",
    "content": "# \u30d3\u30fc\u30eb\u306b\u3042\u3046\u4e00\u53e3\u30b5\u30a4\u30ba\u306e\u304a\u3044\u3057\u3044\u9903\u5b50\r\n\r\n[http://tabelog.com/aichi/A2301/A230103/23015455/](http://tabelog.com/aichi/A2301/A230103/23015455/)\r\n\r\n![image](http://www.kin3.info/category/gourmet/img/karaya-2.jpg)\r\n",
    "pub_date": "2015-08-16T03:36:44.552Z",
    "user": 2,
    "tags": [
      13,
      21
    ]
  }
},
{
  "model": "app.memo",
  "pk": 31,
  "fields": {
    "title": "\u3046\u3069\u3093\u9326",
    "content": "# \u98f2\u3093\u3060\u5f8c\u306b\u3074\u3063\u305f\u308a\u306a\u30ab\u30ec\u30fc\u3046\u3069\u3093\r\n\r\n[http://tabelog.com/aichi/A2301/A230103/23000374/](http://tabelog.com/aichi/A2301/A230103/23000374/)\r\n\r\n![image](https://tblg.k-img.com/restaurant/images/Rvw/79120/320x320_rect_79120956.jpg)",
    "pub_date": "2015-08-16T03:42:59.408Z",
    "user": 2,
    "tags": [
      13,
      22
    ]
  }
},
{
  "model": "app.memo",
  "pk": 32,
  "fields": {
    "title": "\u30cf\u30ce\u30a4\u306e\u5854",
    "content": "# \u30cf\u30ce\u30a4\u306e\u5854\u306e\u518d\u5e30\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\r\n\r\n```py\r\ndef hanoi(n, source, work, dest):\r\n    if 2 <= n:\r\n        hanoi(n - 1, source, dest, work)\r\n\r\n    print('{0} \u3092 {1} \u304b\u3089 {2} \u3078'.format(n, source, dest))\r\n\r\n    if 2 <= n:\r\n        hanoi(n - 1, work, source, dest)\r\n\r\nif __name__ == '__main__':\r\n    hanoi(64, 'A', 'B', 'C')\r\n```",
    "pub_date": "2015-08-16T09:46:12.731Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 33,
  "fields": {
    "title": "Python\u3067\u6b63\u898f\u8868\u73fe",
    "content": "# Python\u3067\u6b63\u898f\u8868\u73fe\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\r\n\r\n\u5f8c\u65b9\u53c2\u7167\u306e\u53d6\u308a\u51fa\u3057\u65b9\u3068\u304b\u3044\u3064\u3082\u8abf\u3079\u3066\u3057\u307e\u3046\u306e\u3067\uff0e\r\n\r\n```py\r\nimport re\r\n\r\ntext = '<h1 style=\"width: 100px; height: 200px;\">'\r\nresult = re.search(r'width: (.*)px; height: (.*)px;', text)\r\n\r\nprint(result.group(0))      # 1\u56de\u76ee: width: 100px; height: 200px;\r\nprint(result.group(1))      # 1\u56de\u76ee: 100\r\nprint(result.group(2))      # 1\u56de\u76ee: 200\r\nprint(result.groups())      # 1\u56de\u76ee: ('100', '200')\r\n\r\nprint()\r\n\r\ntext = '[width=30, height=45] [width=40, height=20]'\r\nmatch = re.finditer(r'\\[width=(.*), height=(.*)\\]', text)\r\n\r\nfor match in result:\r\n    print(match.group(0))   # 1\u56de\u76ee: [width=30, height=45]   2\u56de\u76ee: [width=30, height=45]  \r\n    print(match.group(1))   # 1\u56de\u76ee: 30                      2\u56de\u76ee: 40           \r\n    print(match.group(2))   # 1\u56de\u76ee: 45                      2\u56de\u76ee: 20           \r\n    print(match.groups())   # 1\u56de\u76ee: ('30', '45')            2\u56de\u76ee: ('40', '20')\r\n```",
    "pub_date": "2015-08-16T10:22:06.358Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 34,
  "fields": {
    "title": "\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u305f\u3081\u306e\u30cd\u30fc\u30df\u30f3\u30b0\u8f9e\u66f8",
    "content": "# \u540d\u524d\u4ed8\u3051\u306b\u56f0\u3063\u305f\u3089\r\n\r\n[https://codic.jp](https://codic.jp)\r\n\r\n![image](https://codic.jp/img/home_screenshot.png)\r\n",
    "pub_date": "2015-08-17T01:26:18.201Z",
    "user": 2,
    "tags": [
      1,
      40
    ]
  }
},
{
  "model": "app.memo",
  "pk": 35,
  "fields": {
    "title": "sizeof\u306e\u578b\u3068\u6bd4\u8f03\u6f14\u7b97\u5b50\u3067\u306e\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8",
    "content": "# signed\u3068unsigned\u306e\u6bd4\u8f03\r\n\r\nsizeof\u306e\u578b\u306funsigned\u3068\u306a\u3063\u3066\u3044\u308b\uff0esigned\u3068unsigned\u3092\u6bd4\u8f03\u3059\u308b\u3068unsigned\u3078\u306e\u6697\u9ed9\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u884c\u308f\u308c\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3067`-1`\u304c`0xFF`\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u601d\u3063\u305f\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u304c\uff0e\uff0e\uff0e\r\n\r\n```c\r\n#include <stdio.h>\r\n\r\n#define TOTAL_ELEMENTS (sizeof(array) / sizeof(array[0]))\r\nint array[] = { 23, 34, 12, 17, 204, 99, 16 };\r\n\r\nint main()\r\n{\r\n    for (int d = -1; d <= (TOTAL_ELEMENTS - 2); d++)\r\n    {\r\n        printf(\"%d\\n\", array[d + 1]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n```",
    "pub_date": "2015-08-17T02:44:35.314Z",
    "user": 2,
    "tags": [
      1,
      8
    ]
  }
},
{
  "model": "app.memo",
  "pk": 36,
  "fields": {
    "title": "\u30e6\u30cb\u30fc\u30af\u306a\u30d2\u30e5\u30fc\u30de\u30f3\u30d4\u30af\u30c8\u30b0\u30e9\u30e0\u96c6",
    "content": "# \u4ed6\u3067\u306f\u3042\u307e\u308a\u898b\u306a\u3044\u3088\u3046\u306a\u304a\u3082\u3057\u308d\u3044\u30d4\u30af\u30c8\u30b0\u30e9\u30e0\r\n\r\n[http://pictogram2.com](http://pictogram2.com)\r\n\r\n![image](http://pictogram2.com/p/p0256/i/m.png)\r\n",
    "pub_date": "2015-08-18T06:58:13.361Z",
    "user": 2,
    "tags": [
      25
    ]
  }
},
{
  "model": "app.memo",
  "pk": 37,
  "fields": {
    "title": "Google\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3",
    "content": "# \u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3068\u30d5\u30e9\u30c3\u30c8\u30c7\u30b6\u30a4\u30f3\u3063\u3066\u7d50\u5c40\u4f55\u304c\u9055\u3046\u306e\uff1f\r\n\r\n[http://matome.naver.jp/odai/2142379522980270301](http://matome.naver.jp/odai/2142379522980270301)\r\n\r\n[http://photoshopvip.net/archives/76201](http://photoshopvip.net/archives/76201)\r\n\r\n![image](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7SjE5bTNHN3JpQXc/style_color_introduction.png)\r\n",
    "pub_date": "2015-08-18T08:56:46.940Z",
    "user": 2,
    "tags": [
      25
    ]
  }
},
{
  "model": "app.memo",
  "pk": 38,
  "fields": {
    "title": "Adobe Kuler",
    "content": "\u30d9\u30fc\u30b9\u30ab\u30e9\u30fc\u3092\u6307\u5b9a\u3057\uff0c\u305d\u308c\u306b\u5bfe\u5fdc\u3057\u3066good\u306a\u8272\u5408\u3044\u3092\u898b\u3064\u3051\u3066\u304f\u308c\u307e\u3059\uff0e\u30e2\u30ce\u30c8\u30fc\u30f3\u7cfb\u3060\u3051\u3067\u306a\u304f\uff0c\u88dc\u8272\u3092\u5229\u7528\u3057\u305f\u7269\u3084\u985e\u4f3c\u8272\u306a\u3069\uff0c\u3044\u308d\u3044\u308d\u306a\u30bf\u30a4\u30d7\u3092\u9078\u3079\u307e\u3059\uff0e\r\n\r\n[https://color.adobe.com/ja/create/color-wheel/](https://color.adobe.com/ja/create/color-wheel/)\r\n\r\n![image](http://cdn-ak.f.st-hatena.com/images/fotolife/b/blacktails2/20140713/20140713004301.png)\r\n",
    "pub_date": "2015-08-19T06:55:37.154Z",
    "user": 2,
    "tags": [
      25
    ]
  }
},
{
  "model": "app.memo",
  "pk": 39,
  "fields": {
    "title": "\u30d5\u30a9\u30fc\u30e0\u306e2\u91cd\u9001\u4fe1\u3092\u7981\u6b62",
    "content": "django\u306e\u30ed\u30b0\u30a4\u30f3\u30b7\u30b9\u30c6\u30e0\u3067CSRF\u691c\u8a3c\u5931\u6557\u304c403\u30a8\u30e9\u30fc\u3067\u51fa\u3066\u3044\u305f\u306e\u3067\uff0c\u7c21\u6613\u7684\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067jQuery\u3067\u306e\u9632\u6b62\u7b56\uff0e\r\n\r\n[http://weble.org/2012/06/12/jquery-multiplex-disable](http://weble.org/2012/06/12/jquery-multiplex-disable)\r\n\r\n```\r\n$('form').submit(function() {\r\n    $(this).submit(function () {\r\n        alert('\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u30c7\u30fc\u30bf\u9001\u4fe1\u306f\u4e00\u5ea6\u305a\u3064\u884c\u306a\u3063\u3066\u4e0b\u3055\u3044\uff0e');\r\n        return false;\r\n    });\r\n});\r\n```\r\n",
    "pub_date": "2015-08-22T08:32:42.107Z",
    "user": 2,
    "tags": [
      1,
      26
    ]
  }
},
{
  "model": "app.memo",
  "pk": 42,
  "fields": {
    "title": "V-Sido OS",
    "content": "# \u30d2\u30e5\u30fc\u30de\u30ce\u30a4\u30c9\u30ed\u30dc\u30c3\u30c8\u7528\u306eOS\r\n\r\nKinect\u3067\u30b7\u30e3\u30a2\u5c02\u7528\u30ba\u30b4\u30c3\u30af\u3092\u52d5\u304b\u3057\u3066\u3044\u305f\u306e\u306f\u3053\u308c\uff0eKinect\u306f\u3072\u3087\u3063\u3068\u3057\u3066SDK\u3067\u306a\u304f\u30cf\u30c3\u30af\uff1f\uff1f\r\n\r\n[https://v-sido-developer.com](https://v-sido-developer.com)\r\n\r\n[http://www.v-sido.com/ja/index.html](http://www.v-sido.com/ja/index.html)\r\n\r\n[https://www.youtube.com/watch?v=Qqz28b6SLzQ](https://www.youtube.com/watch?v=Qqz28b6SLzQ)\r\n\r\n![image](https://www.asratec.co.jp/wp-content/uploads/2015/05/robots.png)",
    "pub_date": "2015-08-23T12:05:32.006Z",
    "user": 2,
    "tags": [
      27
    ]
  }
},
{
  "model": "app.memo",
  "pk": 43,
  "fields": {
    "title": "\u3075\u3089\u308a\u5bff\u53f8",
    "content": "# \u5bff\u53f8\u3068\u5929\u3077\u3089\u306e\u4e21\u65b9\r\n\r\n[http://tabelog.com/aichi/A2301/A230102/23045059/](http://tabelog.com/aichi/A2301/A230102/23045059/)\r\n\r\n![image](https://tblg.k-img.com/restaurant/images/Rvw/63717/320x320_rect_63717697.jpg)",
    "pub_date": "2015-08-26T10:52:05.322Z",
    "user": 2,
    "tags": [
      13,
      30,
      31
    ]
  }
},
{
  "model": "app.memo",
  "pk": 44,
  "fields": {
    "title": "Git\u3067\u66f4\u65b0\u30d5\u30a1\u30a4\u30eb\u3092\u62bd\u51fa",
    "content": "Git\u3067\u958b\u767a\u3057\u3066\u3044\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\uff0c\u7d0d\u54c1\u6642\u306a\u3069\u306b\u66f4\u65b0\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u629c\u304d\u51fa\u3059\u65b9\u6cd5\uff0e\r\n\r\n```\r\n$ git archive --format=zip --prefix=root/ HEAD `git diff --name-only --diff-filter=AMCR tagname HEAD` -o hoge.zip\r\n```\r\n\r\n\u203b`tagname`\u306f\u30b9\u30bf\u30fc\u30c8\u6642\u306e\u30b3\u30df\u30c3\u30c8\u306etag\u540d\uff0e\r\n",
    "pub_date": "2015-08-27T02:29:32.312Z",
    "user": 2,
    "tags": [
      1,
      32
    ]
  }
},
{
  "model": "app.memo",
  "pk": 48,
  "fields": {
    "title": "Heroku\u30b3\u30de\u30f3\u30c9\u899a\u3048\u66f8\u304d",
    "content": "## Heroku\u30a2\u30d7\u30ea\u306e\u65b0\u898f\u4f5c\u6210\r\n\r\n```\r\n$ heroku create \u30a2\u30d7\u30ea\u540d\r\n```\r\n*\u30a2\u30d7\u30ea\u540d\u3092\u7701\u7565\u3059\u308b\u3068\u30e9\u30f3\u30c0\u30e0\u306a\u540d\u524d\u3067\u4f5c\u6210\u3055\u308c\u3066\u3057\u307e\u3046\uff0e*\r\n\r\n## \u30ed\u30b0\u306e\u78ba\u8a8d\r\n\r\n```\r\n$ heroku logs\r\n```\r\n\r\n## DB\u306e\u30af\u30ea\u30a2\r\n\r\n```\r\n$ heroku pg:reset DATABASE\r\n```\r\n\r\n## ssh\u30ed\u30b0\u30a4\u30f3\r\n\r\n```\r\n$ heroku run bash\r\n```\r\n\r\n## python\u306e\u5b9f\u884c\u65b9\u6cd5\r\n\r\n```\r\n$ heroku run python manage.py syncdb\r\n```\r\n\r\n## heroku\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u5207\u308a\u66ff\u3048\r\n\r\n```\r\n$ heroku logout\r\n$ heroku login\r\n```\r\n\r\n*\u4e00\u5ea6\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304b\u3089\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\uff0e*\r\n\r\n## \u305d\u306e\u307b\u304b\u8a73\u3057\u304f\u306f\u672c\u5bb6\u3067\r\n[https://devcenter.heroku.com](https://devcenter.heroku.com)\r\n",
    "pub_date": "2015-09-06T11:34:52.259Z",
    "user": 2,
    "tags": [
      1,
      33
    ]
  }
},
{
  "model": "app.memo",
  "pk": 53,
  "fields": {
    "title": "Heroku + Django\u306eDB\u30d0\u30c3\u30af\u30a2\u30c3\u30d7",
    "content": "# DB\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\r\n\r\n```\r\n$ heroku run python manage.py dumpdata app_name --format=json --indent=2 > app.json\r\n```\r\n\u30ed\u30fc\u30ab\u30eb\u306bapp.json\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e\r\n\r\n# DB\u30ea\u30b9\u30c8\u30a2\r\n\r\n```\r\n$ heroku run python manage.py loaddata app.json\r\n```\r\n\u307e\u305a\u306f\u3058\u3081\u306bgit\u3067json\u3092commit + push\u3057\u3066\u304a\u304f\uff0e\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u306f\u30ea\u30b9\u30c8\u30a2\u3067\u304d\u306a\u3044\u3063\u307d\u3044\uff0e",
    "pub_date": "2015-09-13T18:07:34.030Z",
    "user": 2,
    "tags": [
      1,
      2,
      33,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 54,
  "fields": {
    "title": "Heroku + Django\u306eDB\u521d\u671f\u5316",
    "content": "# manage.py syncdb\u304c\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u306e\u3067\r\n\r\n```\r\n$ heroku run python manage.py migrate auth\r\n$ heroku run python manage.py migrate\r\n$ heroku run python manage.py createsuperuser\r\n```\r\n\r\nHeroku\u74b0\u5883\u3067\u306f`migrate auth`\u3067\u4e00\u90e8\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u304c\uff0c\u3053\u306e\u624b\u9806\u304c\u6210\u529f\u7387\u9ad8\u3044\u3063\u307d\u3044\uff0e",
    "pub_date": "2015-09-14T13:44:19.214Z",
    "user": 2,
    "tags": [
      1,
      2,
      33,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 55,
  "fields": {
    "title": "\u91ce\u83dc\u3092\u98df\u3079\u308b\u30ab\u30ec\u30fccamp",
    "content": "# \u7d20\u63da\u3052\u3057\u305f\u91ce\u83dc\u304c\u30b7\u30e3\u30ad\u30b7\u30e3\u30ad\r\n\r\n[http://tabelog.com/aichi/A2301/A230101/23056147/](http://tabelog.com/aichi/A2301/A230101/23056147/)\r\n\r\n![image](http://tabelog.com/imgview/original?id=r3192739255166)\r\n",
    "pub_date": "2015-10-05T13:36:13.866Z",
    "user": 2,
    "tags": [
      13,
      34
    ]
  }
},
{
  "model": "app.memo",
  "pk": 56,
  "fields": {
    "title": "\u6d77\u306e\u76ee\u7dda\u306e\u9732\u5929\u98a8\u5442",
    "content": "# \u5175\u5eab\u770c\u8d64\u7a42\u5e02\u306e\u6e29\u6cc9\u65c5\u9928\r\n\r\n\u6e29\u6cc9\u304b\u306a\u308a\u6700\u9ad8\u3060\u3063\u305f\uff0e\u6599\u7406\u3082\u3046\u307e\u3044\uff0e\r\n\r\n[http://www.ginpaso.co.jp](http://www.ginpaso.co.jp)\r\n\r\n![image](http://www.ginpaso.co.jp/spa/img/spa_img_iwami_03.png)\r\n",
    "pub_date": "2015-10-13T13:24:45.732Z",
    "user": 2,
    "tags": [
      35
    ]
  }
},
{
  "model": "app.memo",
  "pk": 57,
  "fields": {
    "title": "Python\u3067main\u95a2\u6570\u3063\u307d\u3044\u3084\u3064",
    "content": "# \u76f4\u63a5.py\u30d5\u30a1\u30a4\u30eb\u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306b\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\u3084\u3064\r\n\r\n\u3044\u3064\u3082\u66f8\u304d\u65b9\u5fd8\u308c\u3066\u8abf\u3079\u3066\u3057\u307e\u3046\u306e\u3067\u899a\u66f8\u304d\uff0e  \r\n\u203b\u3064\u3044\u3067\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u306e\u53d6\u308a\u65b9\u3082\uff0e\r\n\r\n```py\r\nimport sys\r\n\r\ndef do_something(value):\r\n    print(value)\r\n\r\nif __name__ == '__main__':\r\n    value = 'spam' if len(sys.argv) <= 1 else sys.argv[1]\r\n    do_something(value)\r\n```",
    "pub_date": "2015-10-26T01:51:23.321Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 58,
  "fields": {
    "title": "Python\u6a19\u6e96\u306eUnit\u30c6\u30b9\u30c8",
    "content": "# \u4e00\u822c\u7684\u306aUnit\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u65b9\u6cd5\uff0e\r\n\r\n```py\r\nimport unittest\r\n\r\nclass MyUnittest(unittest.TestCase):\r\n    def test_01(self):\r\n        a = 1\r\n        b = 1\r\n        self.assertTrue(a == b)\r\n        self.assertTrue(a is b)\r\n\r\n    def test_02(self):\r\n        a = [1, 2, 3]\r\n        b = [1, 2, 3]\r\n        self.assertTrue(a == b)\r\n        self.assertTrue(a is not b)\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n\r\n## Unit\u30c6\u30b9\u30c8\u306e\u4e00\u62ec\u3067\u306e\u5b9f\u884c\u65b9\u6cd5\r\n\r\n\u30ab\u30ec\u30f3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u3042\u308b`test_*.py`\u3092\u518d\u5e30\u7684\u306b\u691c\u7d22\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\uff0e\r\n\r\n```shell\r\n$ python -m unittest discover\r\n```",
    "pub_date": "2015-10-28T11:50:02.945Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 59,
  "fields": {
    "title": "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u751f\u653e\u9001",
    "content": "[http://pronama.azurewebsites.net](http://pronama.azurewebsites.net)\r\n\r\n![image](http://pronama.jp/code/sd.png)\r\n",
    "pub_date": "2015-11-08T07:58:53.702Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 60,
  "fields": {
    "title": "\u6570\u5b66\u53f2\u4e0a\u6700\u3082\u7f8e\u3057\u3044\u5f0f",
    "content": "# \u30aa\u30a4\u30e9\u30fc\u306e\u7b49\u5f0f\r\n\r\n```\r\ne^i\u03c0 + 1 = 0\r\n```\r\n\r\n> \u3068\u306f\u3044\u3048\u79c1\u306a\u3093\u304b\u306f\uff0c\u7b54\u3048\u304c\uff10\u306b\u306a\u308b\u306a\u3089\u53d6\u308a\u7acb\u3066\u3066\u8a08\u7b97\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u3063\u3066\u601d\u3044\u307e\u3059\u3051\u308c\u3069\u306d\uff0e\r\n",
    "pub_date": "2015-11-13T09:34:30.016Z",
    "user": 2,
    "tags": [
      36
    ]
  }
},
{
  "model": "app.memo",
  "pk": 61,
  "fields": {
    "title": "Python\u306eeaster egg",
    "content": "\u7a7a\u3092\u98db\u3073\u305f\u304f\u306a\u3063\u305f\u3089\uff0e\uff0e\uff0e\r\n\r\n```py\r\nimport this\r\nimport __hello__\r\nimport antigravity\r\n```\r\n\r\n![image](http://imgs.xkcd.com/comics/python.png)",
    "pub_date": "2015-11-22T15:45:23.846Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 62,
  "fields": {
    "title": "Alien Language",
    "content": "\u3061\u3087\u3063\u3068\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport re\r\n\r\nwith open('A-large-practice.in') as f:\r\n    L, D, N = [int(x) for x in f.readline()[:-1].split()]\r\n    words = [f.readline()[:-1] for _ in range(D)]\r\n    for i in range(N):\r\n        pattern = f.readline()[:-1].replace('(', '[').replace(')', ']')\r\n        K = len([w for w in words if re.match(pattern, w)])\r\n        print('Case #{0}: {1}'.format(i + 1, K))\r\n```",
    "pub_date": "2015-11-28T10:32:46.038Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 63,
  "fields": {
    "title": "Windows\u74b0\u5883\u3067\u306e\u30b5\u30fc\u30d0\u69cb\u7bc9",
    "content": "# SQL Server\u3068IIS\u306e\u74b0\u5883\u69cb\u7bc9\r\n\r\n\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u305f\u3089\uff0c\u3060\u3044\u305f\u3044\u3084\u308c\u305f\uff0e\r\n\r\n[https://creativeweb.jp](https://creativeweb.jp)\r\n\r\n\u3042\u3068\uff0c\u30dd\u30fc\u30c8\u306e\u6307\u5b9a\u3067\u3061\u3087\u3044\u306f\u307e\u3063\u305f\uff0e\r\n\r\n> 192.168.0.3\\SQLExpress \u3067\u63a5\u7d9a\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u6307\u5b9a\u3057\u3066 192.168.0.3\\SQLExpress,1433 \u3067\u63a5\u7d9a\u3059\u308b\u3068\u3046\u307e\u304f\u63a5\u7d9a\u3067\u304d\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002",
    "pub_date": "2015-12-17T02:00:55.820Z",
    "user": 2,
    "tags": [
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 64,
  "fields": {
    "title": "WPF\u306e\u57fa\u790e\u77e5\u8b58",
    "content": "\u3068\u308a\u3042\u3048\u305a\u4e0b\u8a18\u306e\u306f\u3066\u306a\u30d6\u30ed\u30b0\u3092\u3056\u3063\u3068\u898b\u308b\u3068\u3044\u3044\u304b\u3082\uff0e\r\n\r\n[http://blog.okazuki.jp/entry/2014/12/27/200015](http://blog.okazuki.jp/entry/2014/12/27/200015)\r\n\r\n![image](http://hatenablog.com/images/top/top-logo@2x.png)\r\n",
    "pub_date": "2015-12-17T02:23:27.059Z",
    "user": 2,
    "tags": [
      1,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 65,
  "fields": {
    "title": "Bootstrap Theme for Japanese.",
    "content": "# \u65e5\u672c\u8a9e\u3082\u304d\u308c\u3044\u306b\u8868\u793a\u3055\u308c\u308bBootstrap\u30c6\u30fc\u30de\r\n\r\n[http://honokak.osaka](http://honokak.osaka)\r\n\r\n![image](http://cdn.honokak.osaka/assets/img/umi.png)\r\n",
    "pub_date": "2015-12-17T04:15:35.220Z",
    "user": 2,
    "tags": [
      1,
      25
    ]
  }
},
{
  "model": "app.memo",
  "pk": 66,
  "fields": {
    "title": "PInvoke.net",
    "content": "# A wiki for .NET developers\r\n\r\nPInvoke.net is primarily a wiki, allowing developers to find, edit and add PInvoke* signatures, user-defined types, and any other information related to calling Win32 and other unmanaged APIs from managed code (written in languages such as C# or VB.\r\nNET).\r\n\r\n[http://www.pinvoke.net](http://www.pinvoke.net)\r\n\r\n![image](http://www.pinvoke.net/images/vsaddin1.png)\r\n",
    "pub_date": "2015-12-18T05:33:20.209Z",
    "user": 2,
    "tags": [
      1,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 67,
  "fields": {
    "title": "Python + OpenCV",
    "content": "# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u8868\u793a\uff0e\r\n\r\n```py\r\nimport cv2\r\n\r\ndef main():\r\n    gray = cv2.imread('spam.png', 0)    # \u5165\u529b\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067\u53d6\u5f97\r\n    edge = cv2.Canny(gray, 100, 200)    # Canny\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30a8\u30c3\u30b8\u691c\u51fa\r\n    cv2.imshow('Show Image', edge)      # \u30a8\u30c3\u30b8\u753b\u50cf\u3092\u8868\u793a\r\n    cv2.waitKey(0)                      # \u30ad\u30fc\u5165\u529b\u5f85\u6a5f\r\n    cv2.destroyAllWindows()             # \u30a6\u30a3\u30f3\u30c9\u30a6\u7834\u68c4\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
    "pub_date": "2015-12-26T12:07:32.526Z",
    "user": 2,
    "tags": [
      1,
      2,
      18
    ]
  }
},
{
  "model": "app.memo",
  "pk": 68,
  "fields": {
    "title": "mondja\u958b\u767a\u6642\u306e\u53c2\u8003\u30da\u30fc\u30b8",
    "content": "# Markdown\u5909\u63db\r\n\r\nMarkdown\u304b\u3089html\u3078\u306e\u5909\u63db\u3068\uff0c\u305d\u306e\u95a2\u6570\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u81ea\u4f5c\u30d5\u30a3\u30eb\u30bf\u5316\uff0e\u3042\u3068\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\uff0e\r\n\r\n`markdown2`\r\n\r\n[http://inner2.hatenablog.com/entry/2015/12/02/224831](http://inner2.hatenablog.com/entry/2015/12/02/224831)  \r\n[http://papaeye.tumblr.com/post/27705803009/markdown-\u51e6\u7406\u7cfb\u306e\u6bd4\u8f03](http://papaeye.tumblr.com/post/27705803009/markdown-\u51e6\u7406\u7cfb\u306e\u6bd4\u8f03)  \r\n[http://pistatium.appspot.com/blog/show/103008](http://pistatium.appspot.com/blog/show/103008)  \r\n[https://syncer.jp/how-to-use-highlightjs](https://syncer.jp/how-to-use-highlightjs)\r\n\r\n# \u30bd\u30fc\u30b7\u30e3\u30eb\u30ed\u30b0\u30a4\u30f3\r\n\r\nTwitter\u3084Facebook\u3067\u306e\u8a8d\u8a3c\r\n\r\n`python-social-auth`\r\n\r\n[http://nwpct1.hatenablog.com/entry/django-oauth-twitter-facebook-github](http://nwpct1.hatenablog.com/entry/django-oauth-twitter-facebook-github)  \r\n[http://techbooster.org/android/mashup/4525/](http://techbooster.org/android/mashup/4525/)  \r\n[http://blog.unfindable.net/archives/1891](http://blog.unfindable.net/archives/1891)\r\n\r\n# \u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d5\u30c3\u30af\r\n\r\nDjango\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\r\n\r\n[http://hateda.hatenadiary.jp/entry/2014/01/27/151615](http://hateda.hatenadiary.jp/entry/2014/01/27/151615)  \r\n[http://docs.djangoproject.jp/en/latest/topics/http/middleware.html](http://docs.djangoproject.jp/en/latest/topics/http/middleware.html)\r\n\r\n# paginate\u306bGET\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u6e21\u3057\u6a5f\u80fd\u3092\u8ffd\u52a0\r\n\r\n\u691c\u7d22\u3068\u304b\u30bf\u30b0\u3068\u304b\u306e\u6761\u4ef6\u3092\u5f15\u304d\u7d99\u3044\u3067\u30da\u30fc\u30b8\u60c5\u5831\u3082\u66f4\u65b0\u3059\u308b\u65b9\u6cd5\r\n\r\n[http://hideharaaws.hatenablog.com/entry/2015/01/16/002813](http://hideharaaws.hatenablog.com/entry/2015/01/16/002813)",
    "pub_date": "2015-12-29T00:50:15.489Z",
    "user": 2,
    "tags": [
      1,
      2,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 69,
  "fields": {
    "title": "\u307d\u3088\u307d\u3088GIF\u30a2\u30cb\u30e1\u30fc\u30ab\u30fc",
    "content": "# \u307d\u3088\u307d\u3088\u3059\u308b\u3084\u3064\r\n\r\n> \u597d\u304d\u306a\u753b\u50cf\u3092\u307d\u3088\u307d\u3088\u304b\u308f\u3044\u3044GIF\u30a2\u30cb\u30e1\u306b\u3067\u304d\u308b\u3088\uff01\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u4f5c\u3063\u305f\u30df\u30cb\u30ad\u30e3\u30e9\u306b\u3082\u304a\u3059\u3059\u3081\uff01\r\n\r\n[http://poyopoyo.gifanimaker.com](http://poyopoyo.gifanimaker.com)\r\n\r\n![http://i1.wp.com/pronama.azurewebsites.net/wp-content/uploads/2015/12/poyopoyo.gif?resize=400%2C400](http://i1.wp.com/pronama.azurewebsites.net/wp-content/uploads/2015/12/poyopoyo.gif?resize=400%2C400)\r\n",
    "pub_date": "2016-01-01T01:46:45.035Z",
    "user": 2,
    "tags": [
      25
    ]
  }
},
{
  "model": "app.memo",
  "pk": 70,
  "fields": {
    "title": "Windows\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0",
    "content": "# apt-get\u306eWindows\u7248\u307f\u305f\u3044\u306a\u3084\u3064\r\n\r\n[https://chocolatey.org](https://chocolatey.org)\r\n\r\n```\r\nC:\\> @powershell -NoProfile -ExecutionPolicy Bypass -Command \"iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\r\n```\r\n\r\n![image](https://chocolatey.org/content/images/hero.png)\r\n",
    "pub_date": "2016-01-05T00:22:56.674Z",
    "user": 2,
    "tags": [
      1,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 71,
  "fields": {
    "title": "\u4eca\u65e5\u306e\u307e\u3068\u3081",
    "content": "# \u592a\u967d\r\n\r\n\u592a\u967d\u306f\u30b9\u30b4\u30a4\uff0e  \r\n\u30a8\u30e9\u30a4\r\n\r\n\u30de\u30a6\u30f3\u30c0\u30fc\u3054\u304f\u3057\u3087\u3046\u304d  \r\n\u76f8\u624b\u306f\u6b7b\u306c\r\n\r\n# \u72ac\u307e\u3068\u3081\r\n\r\n1961\u5e74  \r\n\u30bd\u9023  \r\n\u30ba\u30dc\u30b7\u30db\u30b9\u30ab\r\n\r\n# \u30a2\u30a4\u30b9\r\n\r\n\u51b7\u305f\u304f\u3066\u3000\u304a\u3044\u3057\u3044\u3000\u305d\u308c\u304c  \r\n\u30a2\u30a4\u30b9\uff0e\r\n\r\n\u30e1\u30ed\u30ea\u30f3 \u2252 \u30c9\u30f3\u30c9\u30a5\u30eb\u30de\r\n\r\n# \u30af\u30b8\u30e9\u307e\u3068\u3081\r\n\r\n\u3088\u304f  \r\n\u308f\u304b\u3089\u306a\u3044\r\n\r\n# \u66dc\u65e5\u306e\u307e\u3068\u3081\r\n\r\n\u30c4\u30a7\u30e9\u30fc\u306e\u516c\u5f0f\u306b\u3088\u308a  \r\n\u30dd\u30c6\u30c8\u306f\u571f\u66dc\uff08\u7b2c2\u7b2c4\u306f\u6728\u66dc\uff09\u21d2\u6728\u66dc\u306f\u3084\u3063\u3071\u308a\u306a\u3057\u3067\uff0e\r\n",
    "pub_date": "2016-01-16T17:27:33.548Z",
    "user": 2,
    "tags": [
      39
    ]
  }
},
{
  "model": "app.memo",
  "pk": 73,
  "fields": {
    "title": "umaru-chan",
    "content": "![image](http://img.animate.tv/news/visual/2015/1436252237_1_13_af877ff1793c302e6b55f691f7e3a1f9.jpg)\r\n",
    "pub_date": "2016-01-19T12:44:05.085Z",
    "user": 2,
    "tags": [
      41
    ]
  }
},
{
  "model": "app.memo",
  "pk": 74,
  "fields": {
    "title": "Linq\u3067\u64cd\u4f5c\u3057\u3084\u3059\u3044SQL\u5b9f\u884c\u30e9\u30a4\u30d6\u30e9\u30ea",
    "content": "[http://neue.cc/2010/04/07_250.html](http://neue.cc/2010/04/07_250.html)  \r\n[http://neue.cc/2011/04/29_320.html](http://neue.cc/2011/04/29_320.html)\r\n\r\n```cs\r\nvar products = DbExecutor.ExecuteReaderDynamic(new SqlConnection(connStr), @\"\r\n        select ProductName, QuantityPerUnit from Products\r\n        where SupplierID = @SupplierID and UnitPrice > @UnitPrice\r\n        \", new { SupplierID = 1, UnitPrice = 10 })\r\n    .Select(d => new Product\r\n    {\r\n        ProductName = d.ProductName,\r\n        QuantityPerUnit = d.QuantityPerUnit\r\n    })\r\n    .ToArray();\r\n```",
    "pub_date": "2016-01-21T01:56:55.966Z",
    "user": 2,
    "tags": [
      1,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 75,
  "fields": {
    "title": "\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u306e\u751f\u6210",
    "content": "# python\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u306e\u751f\u6210\r\n\r\n```py\r\nimport random, string\r\n''.join([random.choice(string.ascii_letters + string.digits) for i in range(10)])\r\n```",
    "pub_date": "2016-01-21T05:57:59.313Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 76,
  "fields": {
    "title": "Python\u3067SQLite",
    "content": "# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport sqlite3, random, string\r\n\r\ncon = sqlite3.connect('./db.sqlite3')\r\ncur = con.cursor()\r\n\r\ndef create_table():\r\n    cur.execute(''' create table spam(id integer primary key, name text not null, age integer not null, sexid integer not null) ''')\r\n    cur.execute(''' create table ham(id integer primary key, name text not null) ''')\r\n\r\ndef create_view():\r\n    cur.execute(''' create view eggs as select spam.name, spam.age, ham.name as sex\r\n                    from spam, ham\r\n                    where spam.sexid = ham.id\r\n                    order by spam.sexid, spam.age ''')\r\n\r\ndef insert_table():\r\n    cur.execute(''' insert into ham(name) values('male') ''')\r\n    cur.execute(''' insert into ham(name) values('female') ''')\r\n\r\n    for i in range(10000):\r\n        name = ''.join([random.choice(string.ascii_letters + string.digits) for i in range(10)])\r\n        age = random.randint(0, 100)\r\n        sexid = 1 if random.randint(0, 1) else 2\r\n        cur.execute(''' insert into spam(name, age, sexid) values('{0}', {1}, '{2}') '''.format(name, age, sexid))\r\n\r\n    con.commit()\r\n\r\ndef print_table():\r\n    cur.execute(''' select spam.name, spam.age, ham.name as sex\r\n                    from spam, ham\r\n                    where spam.sexid = ham.id\r\n                    order by spam.sexid, spam.age ''')\r\n    for item in [x for x in cur.fetchall() if len(set(string.digits) & set(x[0])) == 0]:\r\n        print('Name {0}, Age {1}, Sex {2}'.format(item[0], item[1], item[2]))\r\n\r\nif __name__ == '__main__':\r\n    create_table()\r\n    create_view()\r\n    insert_table()\r\n    print_table()\r\n```",
    "pub_date": "2016-01-22T08:43:13.348Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 77,
  "fields": {
    "title": "Air Bonsai",
    "content": "# \u5b99\u306b\u6d6e\u304b\u3093\u3067\u56de\u8ee2\u3059\u308b\u76c6\u683d\r\n\r\n[http://ideahack.me/article/1697](http://ideahack.me/article/1697)\r\n\r\n![image](http://ideahack.me/img/1697/2.jpg)\r\n",
    "pub_date": "2016-01-26T01:10:22.988Z",
    "user": 2,
    "tags": [
      42
    ]
  }
},
{
  "model": "app.memo",
  "pk": 78,
  "fields": {
    "title": "Python\u3067TCP",
    "content": "# \u8d85\u7c21\u5358\u306aTCP\u306e\u30b5\u30fc\u30d0\uff06\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\r\n\r\n```py\r\nimport socket, sys\r\nfrom contextlib import closing\r\n\r\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\nep = ('127.0.0.1', 50000)\r\n\r\ndef tcp_server():\r\n    with closing(s):\r\n        s.bind(ep)\r\n        s.listen(1)     # \u6700\u5927\u63a5\u7d9a\u6570\r\n        conn, addr = s.accept()\r\n        recv = conn.recv(1024).decode('utf-8')\r\n        print(addr, 'receive:', recv)\r\n        conn.send(('>> ' + recv).encode('utf-8'))\r\n        conn.close()\r\n\r\ndef tcp_client():\r\n    with closing(s):\r\n        s.connect(ep)\r\n        s.send('Hello, python!'.encode('utf-8'))\r\n        print('reply:', s.recv(1024).decode('utf-8'))\r\n\r\nif __name__ == '__main__':\r\n    if 1 < len(sys.argv) and sys.argv[1] == 'server':\r\n        tcp_server()\r\n    elif 1 < len(sys.argv) and sys.argv[1] == 'client':\r\n        tcp_client()\r\n    else:\r\n        print('option is server or client')\r\n```",
    "pub_date": "2016-01-30T12:51:45.998Z",
    "user": 2,
    "tags": [
      1,
      2,
      44
    ]
  }
},
{
  "model": "app.memo",
  "pk": 79,
  "fields": {
    "title": "Python\u3067UDP",
    "content": "# \u8d85\u7c21\u5358\u306aUDP\u306e\u9001\u4fe1&\u53d7\u4fe1\r\n\r\n```py\r\nimport socket, sys\r\nfrom contextlib import closing\r\n\r\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\r\nep = ('127.0.0.1', 50000)\r\n\r\ndef udp_send():\r\n    with closing(s):\r\n        s.sendto('Hello, python!'.encode('utf-8'), ep)\r\n        print('send: Hello, python!')\r\n\r\ndef udp_recv():\r\n    with closing(s):\r\n        s.bind(ep)\r\n        print('recv:', s.recv(1024).decode('utf-8'))    # recvfrom\u3092\u4f7f\u3048\u3070\u30ea\u30e2\u30fc\u30c8\u306eEP\u3082\u53d7\u3051\u53d6\u308c\u308b\r\n\r\nif __name__ == '__main__':\r\n    if 1 < len(sys.argv) and sys.argv[1] == 'send':\r\n        udp_send()\r\n    elif 1 < len(sys.argv) and sys.argv[1] == 'recv':\r\n        udp_recv()\r\n    else:\r\n        print('option is send or recv')\r\n```",
    "pub_date": "2016-01-30T13:05:51.375Z",
    "user": 2,
    "tags": [
      1,
      2,
      44
    ]
  }
},
{
  "model": "app.memo",
  "pk": 80,
  "fields": {
    "title": "Python\u30672\u6b21\u5143\u30ea\u30b9\u30c8\u30921\u6b21\u5143\u306b",
    "content": "# \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3063\u305f\u3084\u308a\u65b9\r\n\r\n```py\r\n>>> list = [[1, 3, 5], [2, 4]]\r\n>>> [flatten for inner in list for flatten in inner]\r\n[1, 3, 5, 2, 4]\r\n```",
    "pub_date": "2016-02-02T06:30:32.957Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 82,
  "fields": {
    "title": "Web\u6280\u8853\u3067\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u306e\u958b\u767a",
    "content": "# Electron\r\n\r\n> Electron\u306fGitHub\u793e\u304c\u958b\u767a\u3057\u305f\u3001\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u3092\u4f5c\u308c\u308b\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5b9f\u884c\u74b0\u5883\u3067\u3059\u3002\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306eMIT\u30e9\u30a4\u30bb\u30f3\u30b9\u306a\u306e\u3067\u3001\u5546\u7528\u5229\u7528\u3082\u7121\u6599\u3067\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\r\n\r\n[http://electron.atom.io](http://electron.atom.io)\r\n\r\n![image](http://cdn.liginc.co.jp/wp-content/uploads/2015/08/ele.png)",
    "pub_date": "2016-02-12T00:17:29.980Z",
    "user": 2,
    "tags": [
      1,
      47
    ]
  }
},
{
  "model": "app.memo",
  "pk": 83,
  "fields": {
    "title": "Django\u30a2\u30d7\u30ea\u306eHeroku\u30c7\u30d7\u30ed\u30a4\u624b\u9806\uff08\u65e7\uff09",
    "content": "# Django\u95a2\u9023\u30e9\u30a4\u30d6\u30e9\u30ea\r\n\r\n```\r\n$ pip install django-toolbelt\r\n```\r\n\r\n* Django (the web framework)\r\n* Gunicorn (WSGI server)\r\n* dj-database-url (a Django configuration helper)\r\n* dj-static (a Django static file server)\r\n\r\n# Procfile\u30d5\u30a1\u30a4\u30eb\r\n\r\n```\r\nweb: gunicorn myapp.wsgi --log-file -\r\n```\r\n\r\n# settings.py\u306e\u7de8\u96c6\r\n\r\n```py\r\n# Parse database configuration from $DATABASE_URL\r\nimport dj_database_url\r\nDATABASES = {\r\n    'default': dj_database_url.config()\r\n}\r\n\r\n# Honor the 'X-Forwarded-Proto' header for request.is_secure()\r\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\r\n\r\n# Allow all host headers\r\nALLOWED_HOSTS = ('*')\r\n\r\n# Static asset configuration\r\nfrom os import path\r\nPROJECT_ROOT = path.dirname(path.abspath(path.dirname(__file__)))\r\nSTATIC_ROOT = path.join(PROJECT_ROOT, 'staticfiles').replace('\\\\', '/')\r\nSTATIC_URL = '/static/'\r\nSTATICFILES_DIRS = (\r\n    path.join(PROJECT_ROOT, 'static').replace('\\\\', '/'),\r\n)\r\n\r\n# Installed apps\r\nINSTALLED_APPS = (\r\n    ...\r\n    \"gunicorn\",\r\n)\r\n```\r\n\r\n# wsgi.py\u306e\u7de8\u96c6\r\n\r\n```py\r\nfrom dj_static import Cling\r\napplication = Cling(get_wsgi_application())\r\n```\r\n\r\n# \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\uff08\u30ed\u30fc\u30ab\u30eb\u7528\uff09\r\n\r\n.env\r\n\r\n```\r\nDEBUG=1\r\nDATABASE_URL=sqlite:///db.sqlite3\r\n```\r\n\r\nmanage.py\r\n\r\n```py\r\nimport dotenv\r\ndotenv.read_dotenv()\r\n```\r\n\r\nsettings.py\r\n\r\n```py\r\nfrom os import environ\r\nDEBUG = environ.get('DEBUG') == '1'\r\n```",
    "pub_date": "2016-02-13T13:09:07.591Z",
    "user": 2,
    "tags": [
      1,
      2,
      33,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 84,
  "fields": {
    "title": "\u9593\u9055\u3063\u3066\u6d88\u3057\u305fgit stash\u3092\u623b\u3059",
    "content": "`git fsck`\u3067\u3069\u3053\u304b\u3089\u3082\u305f\u3069\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u30b3\u30df\u30c3\u30c8\u3092\u63a2\u3057\uff0c\u305d\u306e\u51fa\u529b\u3092\u7de8\u96c6\u3057\u3066`git log`\u3067\u63a2\u3059\uff0e\r\n\r\n```\r\n$ git fsck --unreachable | grep commit | cut -d\\  -f3 | xargs git log --merges --no-walk --grep=WIP\r\n```\r\n\r\n \u3053\u306e\u4e2d\u3067\u5fc5\u8981\u306a\u30b3\u30df\u30c3\u30c8\u304c\u898b\u3064\u304b\u308c\u3070\uff0c\u305d\u306e`SHA-1`\u3092`git cherry-pick`\u3059\u308b\uff0e\r\n\r\n```\r\n$ git cherry-pick -n -m1 <SHA-1>\r\n```\r\n\r\n\u203b \u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8  \r\n[http://transitive.info/article/git/command/stash/](http://transitive.info/article/git/command/stash/)",
    "pub_date": "2016-03-21T06:29:30.084Z",
    "user": 2,
    "tags": [
      1,
      32
    ]
  }
},
{
  "model": "app.memo",
  "pk": 86,
  "fields": {
    "title": "What's Milkcocoa?",
    "content": "[https://mlkcca.com](https://mlkcca.com)\r\n\r\n> Milkcocoa\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u81ea\u524d\u3067\u30b5\u30fc\u30d0\u3092\u6e96\u5099\u305b\u305a\u306b\u5f0a\u793e\u304c\u63d0\u4f9b\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8SDK\u3092\u4ecb\u3057\u3066\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u3001\u66f4\u65b0\u3001\u53d6\u5f97\u307e\u305fPub/Sub\u901a\u4fe1\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u901a\u4fe1\u306fTLS\u6697\u53f7\u5316\u3055\u308c\u3001\u4fdd\u5b58\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u81ea\u52d5\u7684\u306b\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u901a\u4fe1\u306fErlang\u30b5\u30fc\u30d0\u306b\u3066\u51e6\u7406\u3055\u308c\u3001\u591a\u304f\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\r\n\r\n![image](https://connpass-tokyo.s3.amazonaws.com/thumbs/75/6c/756c6f59d6c3ac254adc17cd086efc5e.png)\r\n\r\n\u203b\u53c2\u8003\u30b5\u30a4\u30c8  \r\n[http://blog.mlkcca.com/frontend/milkcocoa-on-electron/](http://blog.mlkcca.com/frontend/milkcocoa-on-electron/)\r\n",
    "pub_date": "2016-03-30T14:33:58.842Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 87,
  "fields": {
    "title": "Windows\u3067ipython\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",
    "content": "# ipython\u306e\u8b66\u544a\u3092\u89e3\u6d88\r\n\r\n\u3044\u3064\u3082\u5fd8\u308c\u308b\u306e\u3067\u30e1\u30e2\uff0epip\u3067ipython\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\uff0e\r\n\r\n```\r\nReadline services not available or not loaded.\r\n```\r\n\r\npyreadline\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070\u89e3\u6c7a\uff0e\r\n\r\n```\r\n$ pip install pyreadline\r\n```",
    "pub_date": "2016-04-13T13:49:30.911Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 88,
  "fields": {
    "title": "python\u3067\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9",
    "content": "# \u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u306a\u3044\u7c21\u6613\u7684\u306a\u65b9\u6cd5\r\n\r\nthreading.Thread\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u306a\u3044\u65b9\u6cd5\u3068\u5f15\u6570\u306e\u6e21\u3057\u65b9\r\n\r\n```py\r\nimport threading, random\r\n\r\nmy_list = ['a', 'b', 'c', 'd', 'e', 'f', 'g']\r\n\r\nlock = threading.Lock()\r\ndef sub(num, count):\r\n    with lock:\r\n        for _ in range(count):\r\n            print('{0}: {1}'.format(num, my_list[random.randint(0, len(my_list) - 1)]))\r\n\r\nsub1 = threading.Thread(target = sub, args = (1, 10, ))\r\nsub2 = threading.Thread(target = sub, args = (2, 20, ))\r\nsub1.start()\r\nsub2.start()\r\n```",
    "pub_date": "2016-04-15T12:36:35.539Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 90,
  "fields": {
    "title": "Atom\u306e\u30d5\u30a9\u30f3\u30c8\u8a2d\u5b9a",
    "content": "# \u9b31\u9676\u3057\u3044\u4e2d\u83ef\u30d5\u30a9\u30f3\u30c8\u3092\u9632\u3050\u8a2d\u5b9a\r\n\r\n\u300c\u30d5\u30a1\u30a4\u30eb\u300d-\u300c\u30b9\u30bf\u30a4\u30eb\u30b7\u30fc\u30c8\u300d\u3000\u30fb\u30fb\u30fb\u3000styles.less\r\n\r\n```\r\n@font-family: \"Consolas\", \"Meiryo\";\r\natom-workspace {\r\n  font-family: @font-family;\r\n}\r\n\r\natom-text-editor {\r\n  font-family: @font-family;\r\n}\r\n\r\n.tooltip {\r\n  font-family: @font-family;\r\n}\r\n\r\n.markdown-preview{\r\n  font-family: @font-family;\r\n}\r\n```",
    "pub_date": "2016-04-28T01:57:54.650Z",
    "user": 2,
    "tags": [
      1,
      46
    ]
  }
},
{
  "model": "app.memo",
  "pk": 91,
  "fields": {
    "title": "Python\u306e\u30c7\u30b3\u30ec\u30fc\u30bf",
    "content": "# \u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u30a2\u30b9\u30da\u30af\u30c8\u6307\u5411\u98a8\u306b\r\n\r\n```py\r\nimport time\r\n\r\ndef log_deco(func):\r\n    import functools\r\n    @functools.wraps(func)\r\n    def wrapper(*args, **kwargs):\r\n        from datetime import datetime as dt\r\n        print('*** {0}: {1} ***'.format(func.__name__, dt.now().strftime('%Y-%m-%d %H:%M:%S')))\r\n        result = func(*args, **kwargs)\r\n        return result\r\n    return wrapper\r\n\r\n@log_deco\r\ndef spam():\r\n    print('spam!!')\r\n\r\n@log_deco\r\ndef ham():\r\n    print('ham!!')\r\n\r\nif __name__ == '__main__':\r\n    spam()\r\n    time.sleep(1)\r\n    ham()\r\n\r\n    '''\r\n    *** spam: 2016-04-28 12:58:41 ***\r\n    spam!!\r\n    *** ham: 2016-04-28 12:58:42 ***\r\n    ham!!\r\n    '''\r\n```",
    "pub_date": "2016-04-28T04:02:20.277Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 92,
  "fields": {
    "title": "pip\u3067\u4e00\u62ec\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8",
    "content": "# \u4e00\u62ec\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\r\n\r\n\u4e00\u767a\u3067\u884c\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u306a\u3044\u306e\u3067\u3053\u308c\u3067\r\n\r\n```\r\n$ pip freeze --local | grep -v '^\\-e' | cut -d = -f 1 | xargs pip install -U\r\n```\r\n\r\n\u3061\u306a\u307f\u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u53ef\u80fd\u306a\u4e00\u89a7\u306f\u3053\u308c\r\n\r\n```\r\n$ pip list -o\r\n```",
    "pub_date": "2016-04-28T16:45:43.510Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 93,
  "fields": {
    "title": "Atom\u306e\u304a\u3059\u3059\u3081\u30d1\u30c3\u30b1\u30fc\u30b8",
    "content": "# \u304a\u3059\u3059\u3081\u30d1\u30c3\u30b1\u30fc\u30b8\u4e00\u89a7\r\n\r\n```\r\natom-dark-ui-slim\r\natom-monokai\r\natom-runner\r\nauto-encoding\r\nautocomplete-clang\r\nautocomplete-paths\r\nautocomplete-python\r\ncolor-picker\r\nfile-icons\r\ngit-control\r\ngit-diff-details\r\ngit-history\r\ngit-log\r\ngit-plus\r\ngit-time-machine\r\nhighlight-line\r\nhighlight-selected\r\njapanese-menu\r\njumpy\r\nlinter\r\nlinter-gcc\r\nlinter-python\r\nmaximize-panes\r\nmerge-conflicts\r\nminimap\r\nminimap-autohide\r\nminimap-bookmarks\r\nminimap-git-diff\r\nminimap-highlight-selected\r\nminimap-pigments\r\npigments\r\nproject-manager\r\nrailscast-theme\r\nslim-language\r\nsort-lines\r\nsymbols-tree-view\r\ntabs-to-spaces\r\ntree-view-git-status\r\n```\r\n\r\n# \u4e00\u62ec\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ apm install --packages-file packages.txt\r\n```\r\n\r\n# packages.txt\u306e\u51fa\u529b\u65b9\u6cd5\r\n\r\n```\r\n$ apm list --installed --bare > packages.txt\r\n```",
    "pub_date": "2016-05-03T16:08:03.412Z",
    "user": 2,
    "tags": [
      1,
      46
    ]
  }
},
{
  "model": "app.memo",
  "pk": 94,
  "fields": {
    "title": "\u30ea\u30ec\u30fc\u5c0f\u8aac\u306e\u8ab2\u984c",
    "content": "\u7b2c\u4e00\u7ae0 \uff08\u30ec\u30d9\u30c3\u30ab\u4f5c\uff09\r\n\r\n> \u30ed\u30fc\u30ea\u30fc\u306f\u3069\u306e\u9298\u67c4\u306e\u30c6\u30a3\u3092\u98f2\u3080\u304b\u6c7a\u3081\u304b\u306d\u3066\u3044\u305f\u3002\u90e8\u5c4b\u3067\u306e\u3093\u3073\u308a\u904e\u3054\u3057\u305f\u3044\u591c\u306b\u3001\u3088\u304f\u98f2\u3093\u3067\u3044\u305f\u304a\u6c17\u306b\u5165\u308a\u306e\u30ab\u30e2\u30df\u30fc\u30eb\u30fb\u30c6\u30a3\u3002  \r\n\u3067\u3082\u3001\u4eca\u305d\u308c\u3092\u98f2\u3080\u3068\u30ab\u30fc\u30eb\u306e\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u3057\u307e\u3046\u3002\u4e8c\u4eba\u304c\u5e78\u305b\u3060\u3063\u305f\u3042\u306e\u9803\u3001\u5f7c\u306f\u30ab\u30e2\u30df\u30fc\u30eb\u30fb\u30c6\u30a3\u304c\u597d\u304d\u3060\u3068\u8a00\u3063\u3066\u3044\u305f\u308f\u3002\u3051\u308c\u3069\u3001\u5f7c\u306e\u3053\u3068\u3092\u306f\u3082\u3046\u982d\u304b\u3089\u8ffd\u3044\u51fa\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u5f7c\u306e\u3053\u3068\u3092\u8003\u3048\u3059\u304e\u308b\u3068\u80f8\u304c\u82e6\u3057\u304f\u306a\u3063\u3066\u3001\u306a\u3093\u3060\u304b\u5598\u606f\u304c\u3072\u3069\u304f\u306a\u3063\u305f\u3088\u3046\u306a\u6c17\u6301\u3061\u306b\u306a\u308b\u3082\u306e\u3002\u3060\u304b\u3089\u30ab\u30e2\u30df\u30fc\u30eb\u30fb\u30c6\u30a3\u306f\u9078\u629e\u304b\u3089\u5916\u305d\u3046\u3002\r\n\r\n\u7b2c\u4e8c\u7ae0 \uff08\u30d3\u30eb\u4f5c\uff09\r\n\r\n> \u305d\u306e\u9803\u3001\u653b\u6483\u8266\u968a\u3092\u7387\u3044\u308b\u30ab\u30fc\u30eb\u30fb\u30cf\u30ea\u30b9\u8ecd\u66f9\u306f\u30b9\u30ab\u30a4\u30ed\u30f34\u306e\u8ecc\u9053\u4e0a\u306b\u3044\u305f\u3002\u4e00\u5e74\u4ee5\u4e0a\u3082\u524d\u306b\u3001\u305f\u3063\u305f\u4e00\u6669\u3060\u3051\u306e\u71b1\u3044\u591c\u3092\u904e\u3054\u3057\u305f\u30ce\u30a4\u30ed\u30fc\u30bc\u3067\u601d\u616e\u306e\u8db3\u308a\u306a\u3044\u5598\u606f\u6301\u3061\u306e\u30ed\u30fc\u30ea\u30fc\u3068\u304b\u8a00\u3046\u304f\u3060\u3089\u306a\u3044\u5973\u306e\u3053\u3068\u3088\u308a\u3082\u3001\u3082\u3063\u3068\u5927\u4e8b\u306a\u3053\u3068\u3092\u8003\u3048\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u3060\u3002  \r\n\u9280\u6cb3\u901a\u4fe1\u88c5\u7f6e\u306b\u8a71\u3057\u304b\u3051\u308b\u3002  \r\n\u300c\u3053\u3061\u3089\u30cf\u30ea\u30b9\u3001\u9759\u6b62\u885b\u661f17\u3069\u3046\u305e\u300d  \r\n\u300c\u6975\u8ecc\u9053\u306f\u78ba\u7acb\u3057\u307e\u3057\u305f\u3002\u73fe\u5728\u306e\u3068\u3053\u308d\u59a8\u5bb3\u306f\u5165\u3063\u3066\u304a\u308a\u307e\u305b\u3093\u2026\u300d  \r\n\u3057\u304b\u3057\u5f7c\u304c\u901a\u4fe1\u3092\u5207\u65ad\u3059\u308b\u76f4\u524d\u3001\u7c92\u5b50\u7832\u306e\u9752\u3044\u9583\u5149\u304c\u304d\u3089\u3081\u304d\u3001\u3042\u308d\u3046\u4e8b\u304b\u5f7c\u306e\u642d\u4e57\u3059\u308b\u6226\u8266\u306e\u8ca8\u7269\u5ba4\u3092\u3076\u3061\u629c\u3044\u305f\u306e\u3060\u3002\u3053\u306e\u885d\u6483\u306b\u3088\u3063\u3066\u3001\u5f7c\u306f\u5ea7\u5e2d\u304b\u3089\u30b3\u30c3\u30af\u30d4\u30c3\u30c8\u306e\u5411\u3053\u3046\u5074\u3078\u3068\u5439\u304d\u98db\u3070\u3055\u308c\u3066\u3057\u307e\u3063\u305f\u3002\r\n\r\n\u7b2c\u4e09\u7ae0 \uff08\u30ec\u30d9\u30c3\u30ab\u4f5c\uff09\r\n\r\n> \u5f7c\u306f\u982d\u3092\u6253\u3061\u3001\u307b\u307c\u5373\u6b7b\u3067\u3042\u3063\u305f\u3002\u3060\u304c\u6b7b\u306c\u524d\u306b\u5f7c\u304c\u53d7\u3051\u305f\u82e6\u75db\u306f\u3001\u5f7c\u306e\u3053\u3068\u3092\u5fc3\u304b\u3089\u611b\u3057\u3066\u3044\u305f\u552f\u4e00\u306e\u5973\u6027\u3092\u7cbe\u795e\u7684\u306b\u50b7\u3064\u3051\u3066\u3057\u307e\u3063\u305f\u3068\u3044\u3046\u5f8c\u6094\u3060\u3063\u305f\u3002\u305d\u3057\u3066\u3001\u307e\u3082\u306a\u304f\u5730\u7403\u306f\u3053\u306e\u5e73\u548c\u306a\u8fb2\u592b\u305f\u3061\u306e\u4f4f\u3080\u30b9\u30ab\u30a4\u30ed\u30f34\u3068\u306e\u3001\u7121\u70ba\u306a\u6575\u5bfe\u95a2\u4fc2\u306b\u7d42\u6b62\u7b26\u3092\u6253\u3064\u3053\u3068\u306b\u306a\u308b\u3002  \r\n\u3042\u308b\u671d\u3001\u65b0\u805e\u3092\u5e83\u3052\u305f\u30ed\u30fc\u30ea\u30fc\u306f\u300c\u8b70\u4f1a\u306f\u6226\u4e89\u3068\u5b87\u5b99\u65c5\u884c\u3092\u6c38\u9060\u306b\u5ec3\u6b62\u3059\u308b\u6cd5\u6848\u3092\u53ef\u6c7a\u300d\u3068\u3044\u3046\u8a18\u4e8b\u3092\u76ee\u306b\u3057\u305f\u3002\u305d\u306e\u8a18\u4e8b\u306f\u5f7c\u5973\u306b\u3068\u3063\u3066\u5b09\u3057\u304f\u3082\u3042\u308a\u3001\u3069\u3046\u3067\u3082\u3088\u304b\u3063\u305f\u3002\u5f7c\u5973\u306f\u307c\u3093\u3084\u308a\u5916\u3092\u773a\u3081\u3001\u6bce\u65e5\u304c\u3086\u3063\u304f\u308a\u3068\u5c48\u8a17\u306a\u304f\u904e\u304e\u3066\u3044\u305f\u82e5\u304b\u308a\u3057\u9803\u3092\u601d\u3044\u51fa\u3057\u3066\u3044\u305f\u3002\u601d\u3048\u3070\u3042\u306e\u9803\u306f\u3001\u65b0\u805e\u3082\u306a\u3051\u308c\u3070\u3001\u5468\u308a\u306e\u7f8e\u3057\u3044\u3082\u306e\u306b\u62b1\u304f\u7d20\u76f4\u306a\u611f\u52d5\u3092\u90aa\u9b54\u3059\u308b\u30c6\u30ec\u30d3\u3082\u306a\u304b\u3063\u305f\u3002\u300c\u3069\u3046\u3057\u3066\u7121\u90aa\u6c17\u3055\u3092\u6368\u3066\u3066\u3001\u4e00\u4eba\u306e\u5973\u6027\u306b\u306a\u3089\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u304b\u3057\u3089\u300d\u305f\u3060\u5207\u306a\u304f\u8003\u3048\u3092\u5de1\u3089\u305b\u305f\u3002\r\n\r\n\u7b2c\u56db\u7ae0 \uff08\u30d3\u30eb\u4f5c\uff09\r\n\r\n> \u30ed\u30fc\u30ea\u30fc\u304c\u305d\u306e\u3068\u304d\u77e5\u3089\u306a\u304b\u3063\u305f\u306e\u306f\u3001\u5f7c\u5973\u306b\u306f\u3042\u306810\u79d2\u3057\u304b\u547d\u304c\u6b8b\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3060\u3063\u305f\u3002\u9065\u304b\u4f55\u5343\u30de\u30a4\u30eb\u3082\u96e2\u308c\u305f\u90fd\u5e02\u304b\u3089\u3001\u30a2\u30cc\u30fb\u30a6\u30c9\u30ea\u30a2\u30f3\u6bcd\u8266\u304c\u6700\u521d\u306e\u30ea\u30c1\u30a6\u30e0\u6838\u878d\u5408\u30df\u30b5\u30a4\u30eb\u3092\u767a\u5c04\u3057\u305f\u306e\u3060\u3002\u4e00\u65b9\u7684\u306b\u5b87\u5b99\u306b\u304a\u3051\u308b\u6b66\u88c5\u5ec3\u6b62\u6761\u7d04\u3092\u8b70\u4f1a\u306b\u901a\u3057\u3001\u7121\u7406\u3084\u308a\u63a8\u9032\u3057\u3088\u3046\u3068\u3059\u308b\u3001\u3046\u3059\u306e\u308d\u3067\u81c6\u75c5\u306a\u5e73\u548c\u4e3b\u7fa9\u8005\u3069\u3082\u306f\u3001\u5730\u7403\u3092\u3080\u3056\u3080\u3056\u3068\u6575\u5bfe\u3059\u308b\u5b87\u5b99\u4eba\u305f\u3061\u306e\u7121\u9632\u5099\u306a\u6a19\u7684\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u3002  \r\n\u5b87\u5b99\u4eba\u305f\u3061\u306f\u4eba\u985e\u3092\u7834\u6ec5\u3055\u305b\u308b\u3053\u3068\u304c\u72d9\u3044\u306a\u306e\u3060\u3002\u6761\u7d04\u304c\u53ef\u6c7a\u3057\u3066\u304b\u30892\u6642\u9593\u3068\u7d4c\u305f\u305a\u3057\u3066\u3001\u5f7c\u3089\u306e\u6bcd\u8266\u306b\u306f\u60d1\u661f\u3092\u7c89\u3005\u306b\u3057\u3066\u3057\u307e\u3046\u5175\u5668\u304c\u7a4d\u307e\u308c\u3001\u5730\u7403\u3078\u3068\u5411\u304b\u3063\u3066\u3044\u305f\u3002\u6b62\u3081\u308b\u3082\u306e\u306f\u8ab0\u3082\u304a\u3089\u305a\u3001\u5f7c\u3089\u306f\u8fc5\u901f\u306b\u6975\u60aa\u306a\u8a08\u753b\u3092\u958b\u59cb\u3057\u305f\u3002\u30ea\u30c1\u30a6\u30e0\u6838\u878d\u5408\u30df\u30b5\u30a4\u30eb\u306f\u59a8\u5bb3\u3092\u4e00\u5207\u53d7\u3051\u305a\u306b\u5927\u6c17\u570f\u3078\u3068\u7a81\u5165\u3059\u308b\u2026\u3002  \r\n\u30b0\u30a2\u30e0\u6c96\u306e\u6d77\u5e95\u306b\u505c\u6cca\u3057\u3066\u3044\u305f\u30c8\u30c3\u30d7\u30fb\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u79fb\u52d5\u6f5c\u6c34\u8266\u306e\u4e2d\u3067\u3001\u5927\u7d71\u9818\u306f\u60f3\u50cf\u3082\u53ca\u3070\u306c\u307b\u3069\u306e\u5de8\u5927\u306a\u7206\u767a\u3092\u611f\u3058\u305f\u3002\u305d\u308c\u306f\u3064\u307e\u3089\u306a\u3044\u99ac\u9e7f\u5973\u306e\u30ed\u30fc\u30ea\u30fc\u3055\u3048\u3082\u4e00\u77ac\u306b\u3057\u3066\u6c17\u5316\u3055\u305b\u305f\u3002\r\n\r\n\uff08\u30ec\u30d9\u30c3\u30ab\uff09\r\n\r\n> \u3070\u304b\u3070\u304b\u3057\u3059\u304e\u308b\u308f\u3002\u3082\u3046\u3053\u308c\u4ee5\u4e0a\u3053\u306e\u6587\u5b66\u306e\u307e\u304c\u3044\u3082\u306e\u3092\u7d9a\u3051\u308b\u306e\u306f\u771f\u3063\u5e73\u3088\u3002\u79c1\u306e\u8ab2\u984c\u306e\u30d1\u30fc\u30c8\u30ca\u30fc\u306f\u3001\u66b4\u529b\u7684\u3067\u7537\u6027\u512a\u4f4d\u4e3b\u7fa9\u3067\u3001\u6559\u990a\u304c\u534a\u5206\u306e\u672a\u719f\u306a\u5974\u3060\u308f\u3002\r\n\r\n\uff08\u30d3\u30eb\uff09\r\n\r\n> \u305d\u3046\u304b\u3044\uff1f\u305d\u308c\u3092\u8a00\u3046\u306a\u3089\u4ffa\u306e\u8ab2\u984c\u306e\u30d1\u30fc\u30c8\u30ca\u30fc\u306f\u3001\u81ea\u5df1\u4e2d\u5fc3\u7684\u3067\u9000\u5c48\u3067\u795e\u7d4c\u8cea\u3067\u3001\u66f8\u304f\u5185\u5bb9\u306f\u6587\u5b57\u901a\u308a\u7cbe\u795e\u5b89\u5b9a\u5264\u3068\u540c\u7b49\u3060\u3002\r\n\u300c\u3042\u3042\u3001\u30ab\u30e2\u30df\u30fc\u30eb\u30fb\u30c6\u30a3\u3092\u98f2\u3080\u3079\u304d\u304b\u3057\u3089\u300d\u300c\u3042\u3042\u3001\u305d\u308c\u3068\u3082\u5225\u306e\u7a2e\u985e\u306e\u304f\u305d\u3063\u305f\u308c\u306a\u30c6\u30a3\u304c\u3044\u3044\u304b\u3057\u3089\u300d\u300c\u3060\u3081\u3060\u308f\u3001\u79c1\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u3057\u3089\u300d\u300c\u79c1\u306f\u672c\u5f53\u306b\u304a\u3064\u3080\u306e\u8db3\u308a\u306a\u3044\u9593\u629c\u3051\u3060\u308f\u3002\u304d\u3063\u3068\u30c0\u30cb\u30a8\u30eb\u30fb\u30b9\u30c6\u30a3\u30fc\u30eb\u306e\u5c0f\u8aac\u3092\u8aad\u307f\u3059\u304e\u305f\u3093\u3060\u308f\uff01\u300d\r\n\r\n\uff08\u30ec\u30d9\u30c3\u30ab\uff09\r\n\r\n> \u30e0\u30ab\u3064\u304f\uff01\r\n\r\n\uff08\u30d3\u30eb\uff09\r\n\r\n> \u30d3\u30c3\u30c1\uff01\r\n\r\n\uff08\u30ec\u30d9\u30c3\u30ab\uff09\r\n\r\n> \u3075\u3041\u3063\u304f\u3086\u30fc\uff01\u3053\u306e\u539f\u59cb\u4eba\u3002\r\n\r\n\uff08\u30d3\u30eb\uff09\r\n\r\n> \u5922\u3067\u3082\u898b\u3066\u304a\u306d\u3093\u306d\u3057\u3066\u306a\u3001\u305d\u3057\u3066\u30c6\u30a3\u3067\u3082\u98f2\u3093\u3067\u6765\u3044\u3002\r\n\r\n\uff08\u6559\u6388\uff09\r\n\r\n> **\u8a55\u4fa1\uff1aA+**\u3000\u3068\u3066\u3082\u6c17\u306b\u5165\u308a\u307e\u3057\u305f\u3002",
    "pub_date": "2016-05-04T09:42:37.631Z",
    "user": 2,
    "tags": [
      39
    ]
  }
},
{
  "model": "app.memo",
  "pk": 95,
  "fields": {
    "title": "Electron\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0",
    "content": "# electron-packager\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\r\n\r\n```\r\n$ npm i electron-packager -g\r\n$ electron-packager ./sample sample --platform=win32 --arch=x64 --version=1.4.12 --asar=true\r\n```\r\n\r\n* platform \u30fb\u30fb\u30fb all\uff0clinux\uff0cwin32\uff0cdarwin\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\uff0e\r\n* arch \u30fb\u30fb\u30fb all\uff0cia32\uff0cx64\u306e\u3044\u305a\u308c\u304b\u3092\u9078\u629e\uff0e\r\n* version \u30fb\u30fb\u30fb Electron\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\uff0e\r\n\r\n# \u3061\u306a\u307f\u306bElectron\u672c\u4f53\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3053\u3061\u3089\r\n\r\n```\r\n$ npm i electron-prebuilt -g\r\n```\r\n\r\n![image](http://codezine.jp/static/images/article/8782/8782_t.gif)",
    "pub_date": "2016-05-08T00:34:42.151Z",
    "user": 2,
    "tags": [
      1,
      47
    ]
  }
},
{
  "model": "app.memo",
  "pk": 96,
  "fields": {
    "title": "Atom\u306eproxy\u8a2d\u5b9a",
    "content": "proxy\u4e0b\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306a\u3069\u3092\u3059\u308b\u5834\u5408\r\n\r\n```\r\napm config set http-proxy http://proxy-server.example.com:8080\r\napm config set https-proxy http://proxy-server.example.com:8080\r\n```\r\n\r\n\u30e6\u30fc\u30b6\uff08\u30d1\u30b9\u30ef\u30fc\u30c9\uff09\u304c\u5fc5\u8981\u306a\u5834\u5408\r\n\r\n```\r\napm config set http-proxy http://username:password@proxy-server.example.com:8080\r\napm config set https-proxy http://username:password@proxy-server.example.com:8080\r\n```\r\n\r\nLinux\u306e\u3068\u304d\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\uff0e`~/.bash_profile`\u3068\u304b`~/.zshenv`\r\n\r\n```\r\nexport ATOM_NODE_URL=http://gh-contractor-zcbenz.s3.amazonaws.com/atom-shell/dist\r\n```",
    "pub_date": "2016-05-10T04:08:17.785Z",
    "user": 2,
    "tags": [
      1,
      46
    ]
  }
},
{
  "model": "app.memo",
  "pk": 97,
  "fields": {
    "title": "Django\u30a2\u30d7\u30ea\u306eHeroku\u30c7\u30d7\u30ed\u30a4\u624b\u9806",
    "content": "# \u6700\u65b0\u306eHeroku\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\r\n\u4ee5\u524d\u3067\u306fstatic\u30d5\u30a1\u30a4\u30eb\u30b5\u30fc\u30d0\u306b\u306f`dj-static`\u304c\u4f7f\u308f\u308c\u3066\u3044\u305f\u304c\uff0c\u4eca\u306fWhitenoise\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u3063\u307d\u3044\uff0e\r\n\r\n# Django\u95a2\u9023\u30e9\u30a4\u30d6\u30e9\u30ea\r\n\r\n```\r\n$ pip install django gunicorn dj-database-url whitenoise\r\n```\r\n\r\n* Django (the web framework)\r\n* Gunicorn (WSGI server)\r\n* dj-database-url (a Django configuration helper)\r\n* Whitenoise (Static file server)\r\n\r\n# Procfile\u30d5\u30a1\u30a4\u30eb\r\n\r\n```\r\nweb: gunicorn myapp.wsgi --log-file -\r\n```\r\n\r\n# settings.py\u306e\u7de8\u96c6\r\n\r\n```py\r\n# Parse database configuration from $DATABASE_URL\r\nimport dj_database_url\r\nDATABASES = {\r\n    'default': dj_database_url.config()\r\n}\r\n\r\n# Honor the 'X-Forwarded-Proto' header for request.is_secure()\r\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\r\n\r\n# Allow all host headers\r\nALLOWED_HOSTS = ['*']\r\n\r\n# Static asset configuration\r\nimport os\r\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\nSTATIC_URL = '/static/'\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles').replace('\\\\', '/')\r\nSTATICFILES_DIRS = [\r\n    os.path.join(BASE_DIR, 'static').replace('\\\\', '/')\r\n]\r\n\r\n# Installed apps\r\nINSTALLED_APPS = (\r\n    ...\r\n    \"gunicorn\",\r\n)\r\n```\r\n\r\n\u3064\u3044\u3067\u306bDjango1.9\u65b9\u5f0f\u3067\u306etemplates\u3084media\u306e\u8a2d\u5b9a\u65b9\u6cd5\r\n\r\n```\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [os.path.join(BASE_DIR, 'templates').replace('\\\\', '/')],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n                \"django.template.context_processors.media\",\r\n                \"django.template.context_processors.static\",\r\n                'social.apps.django_app.context_processors.backends',\r\n                'social.apps.django_app.context_processors.login_redirect',\r\n            ],\r\n            'debug': DEBUG,\r\n        },\r\n    },\r\n]\r\n\r\nMEDIA_URL = '/media/'\r\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\\\', '/')\r\n```\r\n\r\n# wsgi.py\u306e\u7de8\u96c6\r\n\r\n```\r\nfrom django.core.wsgi import get_wsgi_application\r\nfrom whitenoise.django import DjangoWhiteNoise\r\napplication = DjangoWhiteNoise(get_wsgi_application())\r\n```\r\n\r\n# \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\uff08\u30ed\u30fc\u30ab\u30eb\u7528\uff09\r\n\r\n.env\r\n\r\n```\r\nDEBUG=1\r\nDATABASE_URL=sqlite:///db.sqlite3\r\n```\r\n\r\nmanage.py\r\n\r\n```\r\nimport dotenv\r\ndotenv.read_dotenv()\r\n```\r\n\r\nsettings.py\r\n\r\n```\r\nfrom os import environ\r\nDEBUG = environ.get('DEBUG') == '1'\r\n```",
    "pub_date": "2016-05-10T12:01:36.621Z",
    "user": 2,
    "tags": [
      1,
      2,
      33,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 98,
  "fields": {
    "title": "Material Design for Bootstrap",
    "content": "# Bootstrap\u3092Material Design\u306b\r\n\r\n[http://mdbootstrap.com](http://mdbootstrap.com)\r\n\r\n![image](https://mdbootstrap.com/wp-content/uploads/2016/05/bootstrap-tutorial-2.jpg)\r\n\r\n```\r\n<!-- Bootstrap core CSS -->\r\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n<!-- MDB core CSS -->\r\n<link href=\"http://mdbootstrap.com/mdbcdn/mdb.min.css\" rel=\"stylesheet\">\r\n\r\n<!-- JQuery -->\r\n<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.1.4.min.js\"></script>\r\n<!-- Bootstrap core JavaScript -->\r\n<script type=\"text/javascript\" src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\r\n<!-- MDB core JavaScript -->\r\n<script type=\"text/javascript\" src=\"http://mdbootstrap.com/mdbcdn/mdb.min.js\"></script>\r\n```",
    "pub_date": "2016-05-10T12:26:12.802Z",
    "user": 2,
    "tags": [
      1,
      25
    ]
  }
},
{
  "model": "app.memo",
  "pk": 99,
  "fields": {
    "title": "Cloud9",
    "content": "# \u30af\u30e9\u30a6\u30c9\u4e0a\u306b\u74b0\u5883\u69cb\u7bc9\r\n\r\n\u304b\u306a\u308a\u304a\u624b\u8efd\u306a\u306e\u3067\u304a\u8a66\u3057\u74b0\u5883\u3084\u6559\u80b2\u7528\u306a\u3069\u306b\u3074\u3063\u305f\u308a\uff0e\r\n\r\n[https://c9.io](https://c9.io)\r\n\r\n![image](http://nelog.jp/wp-content/uploads/2016/01/Cloud9-3.png)",
    "pub_date": "2016-05-10T12:45:12.192Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 100,
  "fields": {
    "title": "\u306f\u306a\u3084 \u5800\u8535",
    "content": "# \u6398\u308a\u3054\u305f\u3064\u3067\u5b8c\u5168\u500b\u5ba4\r\n\r\n[http://www.hotpepper.jp/strJ000989712/](http://www.hotpepper.jp/strJ000989712/)\r\n\r\n![image](http://imgfp.hotp.jp/IMGH/81/88/P023058188/P023058188_480.jpg)",
    "pub_date": "2016-05-22T11:38:32.556Z",
    "user": 2,
    "tags": [
      13,
      49
    ]
  }
},
{
  "model": "app.memo",
  "pk": 101,
  "fields": {
    "title": "Knot",
    "content": "# \u56fd\u7523\u306e\u8155\u6642\u8a08\r\n\r\n[http://knot-designs.com](http://knot-designs.com)\r\n\r\n![image](https://s3-ap-northeast-1.amazonaws.com/static.makuake-ca.com/upload/project/527/main_527_690_388.jpg)",
    "pub_date": "2016-05-31T13:53:49.194Z",
    "user": 2,
    "tags": [
      50
    ]
  }
},
{
  "model": "app.memo",
  "pk": 102,
  "fields": {
    "title": "Python\u304b\u3089\u30a8\u30af\u30bb\u30eb\u64cd\u4f5c",
    "content": "# \u30a8\u30af\u30bb\u30eb\u4f7f\u3063\u3066\u30a2\u30fc\u30c8\r\n\r\n[https://pasokonga.com](https://pasokonga.com)\r\n\r\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ pip install openpyxl\r\n```\r\n\r\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport cv2\r\nfrom openpyxl import Workbook\r\nfrom openpyxl.styles import PatternFill\r\nfrom string import ascii_uppercase as AtoZ\r\n\r\nimage = cv2.imread('spam.jpg')\r\n\r\nwb = Workbook()\r\nws = wb.active\r\n\r\nlenAtoZ = len(AtoZ)\r\ncol_name = list(AtoZ)\r\ncol_name += [AtoZ[i // lenAtoZ] + AtoZ[i % lenAtoZ] for i in range(len(image[0]) - lenAtoZ)]\r\n\r\nfor col in range(len(col_name)):\r\n    ws.column_dimensions[col_name[col]].width = 0.3\r\n\r\nfor row in range(len(image)):\r\n    ws.row_dimensions[row + 1].height = 1.5\r\n\r\n    for col in range(len(image[row])):\r\n        b, g, r = image[row][col]\r\n        color = '{0:>02X}{1:>02X}{2:>02X}'.format(r, g, b)\r\n\r\n        cell_name = col_name[col] + str(row + 1)\r\n        cell = ws[cell_name]\r\n        cell.fill = PatternFill('solid', color)\r\n\r\nwb.save('spam.xlsx')\r\n```",
    "pub_date": "2016-06-02T16:28:18.862Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 103,
  "fields": {
    "title": "Django REST framework",
    "content": "# Django\u3092\u4f7f\u3063\u3066RESTful\r\n\r\n[http://www.django-rest-framework.org](http://www.django-rest-framework.org)\r\n\r\n![image](http://www.django-rest-framework.org/img/logo.png)\r\n\r\n\u53c2\u8003\uff1a  \r\n[http://qiita.com/kimihiro_n/items/86e0a9e619720e57ecd8](http://qiita.com/kimihiro_n/items/86e0a9e619720e57ecd8)",
    "pub_date": "2016-06-09T13:53:23.238Z",
    "user": 2,
    "tags": [
      1,
      2,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 104,
  "fields": {
    "title": "3\u884c\u3067\u3067\u304d\u308b\u6a5f\u68b0\u5b66\u7fd2",
    "content": "# 3\u884c\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3060\u3051\u3067\u3067\u304d\u308b\u300cindico\u300d\r\n\r\n[https://indico.io](https://indico.io)\r\n\r\n```py\r\nimport indicoio\r\nindicoio.config.api_key = 'YOUR_API_KEY'\r\nprint(indicoio.sentiment_hq('indico is so easy to use!'))\r\n```\r\n\r\n\u53c2\u8003\uff1a  \r\n[http://qiita.com/n0bisuke/items/868b43411078bc2018fb](http://qiita.com/n0bisuke/items/868b43411078bc2018fb)  \r\n[http://liginc.co.jp/275684](http://liginc.co.jp/275684)",
    "pub_date": "2016-06-09T14:02:15.183Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 105,
  "fields": {
    "title": "Django\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8",
    "content": "urls.py\u306b\u8a18\u8ff0\u3059\u308b\u65b9\u6cd5\r\n\r\n```py\r\nfrom django.views.generic import RedirectView\r\n\r\nurlpatterns = [\r\n    url(r'^spam/', RedirectView.as_view(url = '/ham/')),\r\n]\r\n```\r\n\r\nviews.py\u306b\u8a18\u8ff0\u3059\u308b\u65b9\u6cd5\r\n\r\n```py\r\nfrom django.shortcuts import redirect\r\n\r\ndef spam(request):\r\n    return redirect('/ham/')\r\n```",
    "pub_date": "2016-06-11T09:47:51.885Z",
    "user": 2,
    "tags": [
      1,
      2,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 106,
  "fields": {
    "title": "umaru-chan2",
    "content": "![image](http://ringosya.jp/wp-content/uploads/2015/09/umaru-tanjou-1.jpg)",
    "pub_date": "2016-06-12T09:47:28.427Z",
    "user": 2,
    "tags": [
      41
    ]
  }
},
{
  "model": "app.memo",
  "pk": 107,
  "fields": {
    "title": "python\u3067\u753b\u50cf\u691c\u7d22",
    "content": "# python\u3067\u753b\u50cf\u306e\u691c\u7d22&\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\r\n\r\nGoogle Image API\u304c\u4f7f\u3048\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u305d\u306e\u4ee3\u7528\uff0e\r\n\r\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ pip install beautifulsoup4\r\n```\r\n\r\n## \u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport os, sys, time, shutil\r\nimport bs4, urllib.request\r\n\r\ndef download_image(keyword, download_num, dirname):\r\n    if os.path.exists(dirname):\r\n        shutil.rmtree(dirname)\r\n        time.sleep(1)\r\n    os.mkdir(dirname)\r\n\r\n    extensions = ['.jpg', '.jpeg', '.gif', '.png']\r\n    count = 0\r\n    num = 0\r\n    ONE_PAGE_NUM = 20\r\n    while num < download_num:\r\n        count += 1\r\n        url = 'http://image.search.yahoo.co.jp/search?p={0}&ktot=30&dtot=0&ei=UTF-8&xargs={1}&b={2}'.format(urllib.request.quote(keyword), count, ONE_PAGE_NUM * count + 1)\r\n        num += crawring(url, extensions, dirname, download_num - num)\r\n        if download_num * 2 < count * ONE_PAGE_NUM:\r\n            break\r\n\r\ndef crawring(url, extensions, dirname, download_num):\r\n    # \u6307\u5b9a\u3057\u305fURL\u306eHTML\u3092\u53d6\u5f97\r\n    html = get_html_string(url)\r\n    if len(html) < 1:\r\n        print('damepo!!')\r\n        sys.exit(1)\r\n\r\n    # \u30ea\u30bd\u30fc\u30b9\u53d6\u5f97\r\n    return get_resource(html, extensions, dirname, download_num)\r\n\r\ndef get_html_string(url):\r\n    decoded_html = ''\r\n\r\n    # HTML\u3092\u53d6\u5f97\r\n    try:\r\n        request = urllib.request.urlopen(url)\r\n        html = request.read()\r\n    except:\r\n        return decoded_html\r\n\r\n    # HTML\u3092\u30c7\u30b3\u30fc\u30c9\r\n    decoded_html = html.decode('utf_8')\r\n\r\n    return decoded_html\r\n\r\ndef get_resource(html, extensions, dirname, download_num):\r\n    resource_list = []\r\n\r\n    soup = bs4.BeautifulSoup(html)\r\n    for a_tag in soup.find_all('a'):\r\n        href_str = a_tag.get('href')\r\n        try:\r\n            (path, ext) = os.path.splitext(href_str)\r\n            if ext in extensions:\r\n                resource_list.append(href_str)\r\n        except:\r\n            pass\r\n\r\n    resource_list = sorted(set(resource_list), key = resource_list.index)\r\n    count = 0\r\n    for resource in resource_list:\r\n        try:\r\n            filename = os.path.basename(resource)\r\n            savename = '{0}\\\\{1}'.format(dirname, filename)\r\n            if os.path.exists(savename):\r\n                continue\r\n            print('download ---> [{0}]'.format(filename))\r\n            request = urllib.request.urlopen(resource)\r\n            with open(savename, 'wb') as f:\r\n                f.write(request.read())\r\n            count += 1\r\n            if download_num <= count:\r\n                break\r\n        except Exception as e:\r\n            print(e)\r\n            print('download failed ... [{0}]'.format(filename))\r\n\r\n    return count\r\n\r\nif __name__ == '__main__':\r\n    keyword = '\u4f50\u3005\u6728\u5e0c'\r\n    dirname  = 'image'\r\n    download_image(keyword, 100, dirname)\r\n```",
    "pub_date": "2016-06-12T10:00:43.912Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 108,
  "fields": {
    "title": "\u30ab\u30e9\u30fc\u30bb\u30ec\u30af\u30bf\u306e\u30b5\u30f3\u30d7\u30eb",
    "content": "# PyQt5\u3067\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\r\n\r\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ pip install pyqt5 numpy matplotlib opencv_python\r\n```\r\n\r\n## \u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport sys\r\nimport numpy as np\r\nimport cv2\r\n\r\nfrom PyQt5.QtCore import *\r\nfrom PyQt5.QtGui import *\r\nfrom PyQt5.QtWidgets import *\r\n\r\ndef hsv_to_rgb(h, s, v):\r\n    bgr = cv2.cvtColor(np.array([[[h, s, v]]], dtype=np.uint8), cv2.COLOR_HSV2BGR)[0][0]\r\n    return (bgr[2], bgr[1], bgr[0])\r\n\r\ndef rgb_to_hsv(r, g, b):\r\n    hsv = cv2.cvtColor(np.array([[[b, g, r]]], dtype=np.uint8), cv2.COLOR_BGR2HSV)[0][0]\r\n    return (hsv[0], hsv[1], hsv[2])\r\n\r\nclass MainWindow(QWidget):\r\n    color_base = (0, 0, 255)\r\n    color_table = [(0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)]\r\n\r\n    changedValueRgb = pyqtSignal(int, int, int)\r\n\r\n    def __init__(self, parent = None):\r\n        super(MainWindow, self).__init__(parent)\r\n\r\n        r, g, b = self.color_base\r\n\r\n        self.rsld = QSlider(Qt.Horizontal, self)\r\n        self.rsld.setFocusPolicy(Qt.NoFocus)\r\n        self.rsld.setGeometry(30, 200, 500, 30)\r\n        self.rsld.setMaximum(255)\r\n        self.rsld.setValue(r)\r\n        self.rsld.valueChanged[int].connect(\r\n            lambda x: self.emitChangedValueRgb(x, self.color_base[1], self.color_base[2]))\r\n\r\n        self.gsld = QSlider(Qt.Horizontal, self)\r\n        self.gsld.setFocusPolicy(Qt.NoFocus)\r\n        self.gsld.setGeometry(30, 250, 500, 30)\r\n        self.gsld.setMaximum(255)\r\n        self.gsld.setValue(g)\r\n        self.gsld.valueChanged[int].connect(\r\n            lambda x: self.emitChangedValueRgb(self.color_base[0], x, self.color_base[2]))\r\n\r\n        self.bsld = QSlider(Qt.Horizontal, self)\r\n        self.bsld.setFocusPolicy(Qt.NoFocus)\r\n        self.bsld.setGeometry(30, 300, 500, 30)\r\n        self.bsld.setMaximum(255)\r\n        self.bsld.setValue(b)\r\n        self.bsld.valueChanged[int].connect(\r\n            lambda x: self.emitChangedValueRgb(self.color_base[0], self.color_base[1], x))\r\n\r\n        self.changedValueRgb.connect(self.refresh)\r\n        self.setWindowTitle(\"Color selector!\")\r\n        self.make_color()\r\n\r\n    def emitChangedValueRgb(self, r, g, b):\r\n        self.changedValueRgb.emit(r, g, b)\r\n\r\n    def refresh(self, r, g, b):\r\n        print('r:{0} g:{1} b:{2}'.format(r, g, b))\r\n        self.color_base = (r, g, b)\r\n        self.make_color()\r\n        self.repaint()\r\n\r\n    def paintEvent(self, event):\r\n        painter = QPainter(self)\r\n        size = 100\r\n        xpos = 30\r\n        ypos = 30\r\n        for i in range(5):\r\n            painter.setPen(QColor(*self.color_table[i]))\r\n            painter.setBrush(QColor(*self.color_table[i]))\r\n            painter.drawRect(xpos, ypos, size, size)\r\n            xpos += size\r\n\r\n    def make_color(self):\r\n        base_hsv = rgb_to_hsv(*self.color_base)\r\n        self.color_table[2] = self.color_base\r\n        spam = ((0, 16), (1, 8), (3, -8), (4, -16))\r\n        for item in spam:\r\n            self.make_color2(item[0], item[1], base_hsv)\r\n\r\n    def make_color2(self, index, def_val, base_hsv):\r\n        h, s, v = base_hsv\r\n        h += def_val\r\n        if h < 0:\r\n            h += 180\r\n        self.color_table[index] = hsv_to_rgb(h, s, v)\r\n\r\nif __name__ == '__main__':\r\n    app = QApplication(sys.argv)\r\n    main_window = MainWindow()\r\n    main_window.show()\r\n    sys.exit(app.exec_())\r\n```",
    "pub_date": "2016-06-12T10:56:53.752Z",
    "user": 2,
    "tags": [
      1,
      2,
      57
    ]
  }
},
{
  "model": "app.memo",
  "pk": 109,
  "fields": {
    "title": "Python\u3067\u5947\u9e97\u306a\u30b0\u30e9\u30d5\u8868\u793a",
    "content": "# Seaborn\u3067\u5947\u9e97\u306a\u30b0\u30e9\u30d5\u63cf\u753b\r\n\r\n![image](http://seaborn.pydata.org/_images/anscombes_quartet.png)\r\n\r\n## requirements.txt\r\n\r\n```\r\ncycler==0.10.0\r\nmatplotlib==1.5.1\r\nnumpy==1.11.0\r\npandas==0.18.1\r\npyparsing==2.1.4\r\npython-dateutil==2.5.3\r\npytz==2016.4\r\nscipy==0.17.1\r\nseaborn==0.7.1\r\nsix==1.10.0\r\n```\r\n\r\n\u203bnumpy\u306f `numpy+mkl` \u304c\u5fc5\u8981\r\n\r\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nimport pandas as pd\r\n\r\nflip=1\r\nx = np.linspace(0, 14, 100)\r\nfor i in range(1, 7):\r\n    plt.plot(x, np.sin(x + i * .5) * (7 - i) * flip)\r\nplt.show()\r\n\r\n# \u5404\u7a2e\u30b9\u30bf\u30a4\u30eb\u306e\u5909\u66f4\r\n# \u4e00\u6b21\u5143\u5206\u5e03\u30c7\u30fc\u30bf\u306e\u63cf\u753b\r\nsns.set_style(\"whitegrid\")\r\nx = np.random.normal(size=100)\r\nsns.distplot(x)\r\nplt.show()\r\n\r\nsns.set_style(\"dark\")\r\nsns.distplot(x)\r\nplt.show()\r\n\r\nsns.set_style(\"white\")\r\nsns.distplot(x)\r\nplt.show()\r\n\r\nsns.set_style(\"ticks\")\r\nsns.distplot(x)\r\nplt.show()\r\n\r\nsns.set_style(\"ticks\")\r\nsns.distplot(x)\r\nsns.despine()\r\nplt.show()\r\n\r\nsns.set_style(\"darkgrid\")\r\nsns.distplot(x, kde=False, rug=True)\r\nplt.show()\r\n\r\nsns.set_style(\"darkgrid\")\r\nsns.distplot(x, kde=False, rug=True, bins=5)\r\nplt.show()\r\n\r\n# \u6298\u308c\u7dda\u30b0\u30e9\u30d5\r\ntitanic = sns.load_dataset(\"titanic\")\r\nsns.pointplot(x=\"class\", y=\"survived\", hue=\"sex\", data=titanic,\r\n              palette={\"male\": \"g\", \"female\": \"m\"},\r\n              markers=[\"^\", \"o\"], linestyles=[\"-\", \"--\"]);\r\nsns.plt.show()\r\n\r\n# \u68d2\u30b0\u30e9\u30d5\r\ntitanic = sns.load_dataset(\"titanic\")\r\nsns.barplot(x=\"sex\", y=\"survived\", hue=\"class\", data=titanic);\r\nsns.plt.show()\r\n\r\n# \u4e8c\u6b21\u5143\u306e\u5206\u5e03\u30c7\u30fc\u30bf\u306e\u63cf\u753b\r\nmean, cov = [0, 1], [(1, .5), (.5, 1)]\r\ndata = np.random.multivariate_normal(mean, cov, 200)\r\ndf = pd.DataFrame(data, columns=[\"x\", \"y\"])\r\nsns.jointplot(x=\"x\", y=\"y\", data=df);\r\nsns.plt.show()\r\n\r\nsns.jointplot(x=\"x\", y=\"y\", kind=\"hex\", data=df);\r\nsns.plt.show()\r\n\r\nsns.jointplot(x=\"x\", y=\"y\", kind=\"kde\", data=df);\r\nsns.plt.show()\r\n\r\n# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u76f8\u95a2\u5206\u6790\r\niris = sns.load_dataset(\"iris\")\r\nsns.pairplot(iris);\r\nsns.plt.show()\r\n\r\nsns.pairplot(iris, hue=\"species\");\r\nsns.plt.show()\r\n```",
    "pub_date": "2016-06-13T05:05:17.896Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 110,
  "fields": {
    "title": "\u30d1\u30fc\u30ad\u30f3\u30bd\u30f3\u306e\u6cd5\u5247",
    "content": "\u5e74\u672b\u306b\u5de5\u4e8b\u304c\u591a\u304f\u306a\u308b\u3042\u308c\uff0e\u4eba\u9593\u306f\u4e88\u7b97\u3068\u6642\u9593\u306f\u3042\u308b\u3060\u3051\u4f7f\u3044\u304d\u3063\u3066\u3057\u307e\u3046\u751f\u304d\u7269\uff0e\r\n\r\n# \u7b2c1\u6cd5\u5247\r\n\r\n\u4ed5\u4e8b\u306e\u91cf\u306f\uff0c\u5b8c\u6210\u306e\u305f\u3081\u306b\u4e0e\u3048\u3089\u308c\u305f\u6642\u9593\u3092\u3059\u3079\u3066\u6e80\u305f\u3059\u307e\u3067\u81a8\u5f35\u3059\u308b\r\n\r\n# \u7b2c2\u6cd5\u5247\r\n\r\n\u652f\u51fa\u306e\u984d\u306f\uff0c\u53ce\u5165\u306e\u984d\u306b\u9054\u3059\u308b\u307e\u3067\u81a8\u5f35\u3059\u308b",
    "pub_date": "2016-06-13T05:55:27.169Z",
    "user": 2,
    "tags": [
      51
    ]
  }
},
{
  "model": "app.memo",
  "pk": 111,
  "fields": {
    "title": "\u8a18\u9332\u306e\u53d6\u308a\u65b9",
    "content": "# \u8a00\u308f\u308c\u305f\u3053\u3068\u3092\u305d\u306e\u307e\u307e\u66f8\u304f\r\n\r\n> \u7279\u306b\u82e5\u624b\u306e\u610f\u898b\u3092\u9032\u884c\u5f79\u304c\u8981\u7d04\u3057\u3066\u8b70\u4e8b\u9332\u306b\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\uff0c\u767a\u8a00\u8005\u306e\u610f\u898b\u3058\u3083\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3088\u3046\u3067\uff0c\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u306e\u4f4e\u4e0b\u306b\u3064\u306a\u304c\u3063\u3066\u3057\u307e\u3046\uff0e\r\n\r\n\u306a\u308b\u307b\u3069\uff0e\uff0e\uff0e\uff01",
    "pub_date": "2016-06-13T07:30:34.060Z",
    "user": 2,
    "tags": [
      51
    ]
  }
},
{
  "model": "app.memo",
  "pk": 112,
  "fields": {
    "title": "\u30ab\u30e9\u30fc\u30bb\u30ec\u30af\u30bf\u306e\u30b5\u30f3\u30d7\u30eb\uff08OpenCV\u672a\u4f7f\u7528\u7248\uff09",
    "content": "# PyQt5\u3067\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\r\n\r\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ pip install pyqt5\r\n```\r\n\r\n## \u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport sys, math\r\n\r\nfrom PyQt5.QtCore import *\r\nfrom PyQt5.QtGui import *\r\nfrom PyQt5.QtWidgets import *\r\n\r\ndef hsv_to_rgb(h, s, v):\r\n    i = int(math.floor(h / 60)) % 6\r\n    f = float(h / 60) - float(math.floor(h / 60))\r\n    p = int(round(v * (1.0 - (s / 255))))\r\n    q = int(round(v * (1.0 - (s / 255) * f)))\r\n    t = int(round(v * (1.0 - (s / 255) * (1.0 - f))))\r\n\r\n    r, g, b = 0, 0, 0\r\n    if i == 0:\r\n        r = v; g = t; b = p\r\n    elif i == 1:\r\n        r = q; g = v; b = p\r\n    elif i == 2:\r\n        r = p; g = v; b = t\r\n    elif i == 3:\r\n        r = p; g = q; b = v\r\n    elif i == 4:\r\n        r = t; g = p; b = v\r\n    else:\r\n        r = v; g = p; b = q\r\n\r\n    return (r, g, b);\r\n\r\ndef rgb_to_hsv(r, g, b):\r\n    mx = max((r, g, b))\r\n    mn = min((r, g, b))\r\n    \r\n    if mx == mn:\r\n        h = 0\r\n    elif mx == r:\r\n        h = (60 * (g - b) / (mx - mn) + 360) % 360\r\n    elif mx == g:\r\n        h = (60 * (b - r) / (mx - mn)) + 120\r\n    else:\r\n        h = (60 * (r - g) / (mx - mn)) + 240;   \r\n\r\n    if mx == 0:\r\n        s = 0\r\n    else:\r\n        s = 255 * ((mx - mn) / mx)\r\n\r\n    v = mx\r\n\r\n    return (h, s, v)\r\n\r\nclass MainWindow(QWidget):\r\n    color_base = (0, 0, 255)\r\n    color_table = [(0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)]\r\n\r\n    changedValueRgb = pyqtSignal(int, int, int)\r\n\r\n    def __init__(self, parent = None):\r\n        super(MainWindow, self).__init__(parent)\r\n\r\n        r, g, b = self.color_base\r\n\r\n        self.rsld = QSlider(Qt.Horizontal, self)\r\n        self.rsld.setFocusPolicy(Qt.NoFocus)\r\n        self.rsld.setGeometry(30, 200, 500, 30)\r\n        self.rsld.setMaximum(255)\r\n        self.rsld.setValue(r)\r\n        self.rsld.valueChanged[int].connect(\r\n            lambda x: self.emitChangedValueRgb(x, self.color_base[1], self.color_base[2]))\r\n\r\n        self.gsld = QSlider(Qt.Horizontal, self)\r\n        self.gsld.setFocusPolicy(Qt.NoFocus)\r\n        self.gsld.setGeometry(30, 250, 500, 30)\r\n        self.gsld.setMaximum(255)\r\n        self.gsld.setValue(g)\r\n        self.gsld.valueChanged[int].connect(\r\n            lambda x: self.emitChangedValueRgb(self.color_base[0], x, self.color_base[2]))\r\n\r\n        self.bsld = QSlider(Qt.Horizontal, self)\r\n        self.bsld.setFocusPolicy(Qt.NoFocus)\r\n        self.bsld.setGeometry(30, 300, 500, 30)\r\n        self.bsld.setMaximum(255)\r\n        self.bsld.setValue(b)\r\n        self.bsld.valueChanged[int].connect(\r\n            lambda x: self.emitChangedValueRgb(self.color_base[0], self.color_base[1], x))\r\n\r\n        self.changedValueRgb.connect(self.refresh)\r\n        self.setWindowTitle(\"Color selector!\")\r\n        self.make_color()\r\n\r\n    def emitChangedValueRgb(self, r, g, b):\r\n        self.changedValueRgb.emit(r, g, b)\r\n\r\n    def refresh(self, r, g, b):\r\n        print('r:{0} g:{1} b:{2}'.format(r, g, b))\r\n        self.color_base = (r, g, b)\r\n        self.make_color()\r\n        self.repaint()\r\n\r\n    def paintEvent(self, event):\r\n        painter = QPainter(self)\r\n        size = 100\r\n        xpos = 30\r\n        ypos = 30\r\n        for i in range(5):\r\n            painter.setPen(QColor(*self.color_table[i]))\r\n            painter.setBrush(QColor(*self.color_table[i]))\r\n            painter.drawRect(xpos, ypos, size, size)\r\n            xpos += size\r\n\r\n    def make_color(self):\r\n        base_hsv = rgb_to_hsv(*self.color_base)\r\n        self.color_table[2] = self.color_base\r\n        spam = ((0, 30), (1, 15), (3, -15), (4, -30))\r\n        for item in spam:\r\n            self.make_color2(item[0], item[1], base_hsv)\r\n\r\n    def make_color2(self, index, def_val, base_hsv):\r\n        h, s, v = base_hsv\r\n        h += def_val\r\n        if h < 0:\r\n            h += 360\r\n        self.color_table[index] = hsv_to_rgb(h, s, v)\r\n\r\nif __name__ == '__main__':\r\n    app = QApplication(sys.argv)\r\n    main_window = MainWindow()\r\n    main_window.show()\r\n    sys.exit(app.exec_())\r\n```",
    "pub_date": "2016-06-15T10:12:15.032Z",
    "user": 2,
    "tags": [
      1,
      2,
      57
    ]
  }
},
{
  "model": "app.memo",
  "pk": 113,
  "fields": {
    "title": "Win32\u30a2\u30d7\u30ea\u3067\u306e\u30ea\u30e0\u30fc\u30d0\u30d6\u30eb\u30c7\u30a3\u30b9\u30af\u306e\u53d6\u5f97\u65b9\u6cd5",
    "content": "# \u30c9\u30e9\u30a4\u30d6\u540d\u3068\u7a2e\u985e\u306e\u53d6\u5f97\r\n\r\n```cpp\r\n#include <stdio.h>\r\n#include <windows.h>\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n    WCHAR buff[1024] = { '\\0' };\r\n    DWORD buffSize = ::GetLogicalDriveStrings(sizeof(buff), static_cast<LPWSTR>(buff));\r\n\r\n    DWORD index = 0;\r\n    while (index < buffSize)\r\n    {\r\n        const DWORD type = ::GetDriveType(&buff[index]);\r\n        if (type == DRIVE_REMOVABLE)\r\n        {\r\n            ::wprintf(L\"%s\\n\", &buff[index]);\r\n        }\r\n\r\n        index += ::wcslen(&buff[index]) + 1;\r\n    }\r\n\r\n    return 0;\r\n}\r\n```",
    "pub_date": "2016-06-27T02:40:29.368Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 114,
  "fields": {
    "title": "Visual C++\u3067Debug\u30d7\u30ea\u30f3\u30c8",
    "content": "# Visual Studio\u306e\u51fa\u529b\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\r\n\r\nOutputDebugString API\u3092\u4f7f\u7528\u3059\u308b\u3068\u8868\u793a\u3055\u308c\u308b\uff0e\r\n\r\nprintf\u306e\u3088\u3046\u306b\u66f8\u5f0f\u4ed8\u304d\u6587\u5b57\u5217\u3067\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff0e\r\n\r\n```cpp\r\n#include \"stdafx.h\"\r\n#include <windows.h>\r\n\r\nvoid PrintDebugLine(LPCTSTR format, ...)\r\n{\r\n    va_list argp;\r\n    wchar_t buff[1024];\r\n    va_start(argp, format);\r\n    _vstprintf(buff, sizeof(buff), format, argp);\r\n    va_end(argp);\r\n    ::OutputDebugString(buff);\r\n    ::OutputDebugString(_T(\"\\n\"));\r\n}\r\n\r\nint _tmain(int argc, _TCHAR* argv[])\r\n{\r\n    PrintDebugLine(_T(\"Hello, world!\"));\r\n    PrintDebugLine(_T(\"%3d %3d\"), 23, 42);\r\n    PrintDebugLine(_T(\"-- %s --\"), _T(\"\u306b\u3083\u3093\u3071\u3059\u30fc\"));\r\n    return 0;\r\n}\r\n```",
    "pub_date": "2016-07-27T07:04:04.169Z",
    "user": 2,
    "tags": [
      1,
      16,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 115,
  "fields": {
    "title": "pyvenv\u306e\u4f7f\u3044\u65b9",
    "content": "# Windows\u3067\u306epyvenv\u306e\u4f7f\u3044\u65b9\r\n\r\n\u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u308b\u306b\u306f\u4e0b\u8a18\u3067\r\n\r\n```\r\n> C:\\Users\\username\\AppData\\Local\\Programs\\Python\\Python35\\Tools\\scripts\\pyvenv.py envname\r\n```\r\n\r\n\u3067\u3082\u3053\u308c\u3060\u3068\u9762\u5012\u306a\u306e\u3067\uff0c\u4e0b\u8a18\u3067\u3082\u540c\u3058\r\n\r\n```\r\n> python -m venv envname\r\n```\r\n\r\n\u3042\u3068\u306f\u4eee\u60f3\u74b0\u5883\u306b\u5165\u308b\u3060\u3051\r\n\r\n```\r\n> envname\\Scripts\\activate.bat\r\n```\r\n\r\n\u4eee\u60f3\u74b0\u5883\u304b\u3089\u629c\u3051\u308b\u306e\u306f\u3053\u308c\r\n\r\n```\r\n> deactivate.bat\r\n```",
    "pub_date": "2016-08-06T12:14:44.463Z",
    "user": 2,
    "tags": [
      1,
      2,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 116,
  "fields": {
    "title": "Python\u3067\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u5165\u51fa\u529b",
    "content": "# \u30d0\u30a4\u30ca\u30ea\u30e2\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u306eRead/Write\r\n\r\n`bytearray`\u3092\u4f7f\u3046\u3068\u7c21\u5358\uff0e\r\n\r\n```py\r\nimport random\r\n\r\ndef create_file(filename):\r\n    with open(filename, 'wb') as f:\r\n        f.write(bytearray(range(42)))\r\n        f.write(bytearray([0xAA if random.randint(0, 32) == 32 else 0x00 for _ in range(1000)]))\r\n\r\ndef convert_file(infile, outfile):\r\n    with open(infile, 'rb') as f:\r\n        idata = f.read()\r\n\r\n    odata = [x for x in idata[:42]] + [0x55 if x == 0xAA else x for x in idata[42:]]\r\n\r\n    with open(outfile, 'wb') as f:\r\n        f.write(bytearray(odata))\r\n\r\nif __name__ == '__main__':\r\n    create_file('spam.dat')\r\n    convert_file('spam.dat', 'ham.dat')\r\n```\r\n\r\nbytearray\u3092\u4f7f\u308f\u306a\u3044\u306a\u3089\uff0c`0x31.to_bytes(1, 'big')`\u3067bytes\u306b\u5909\u63db\uff0e",
    "pub_date": "2016-08-09T16:01:25.425Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 117,
  "fields": {
    "title": "Debian\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08VMware\uff09",
    "content": "# sudo\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n`sudo`\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u6a29\u9650\u306e\u8ffd\u52a0\r\n\r\n```\r\n$ su -\r\n$ aptitude update\r\n$ aptitude install sudo\r\n$ visudo\r\n---\r\nroot      ALL=(ALL:ALL) ALL\r\nusername  ALL=(ALL:ALL) ALL\r\n---\r\n```\r\n\r\n# build-essential\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n`open-vm-tools`\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u524d\u306b\u5165\u308c\u3066\u304a\u304f\u3068\u3044\u3044\u3063\u307d\u3044\r\n\r\n```\r\n$ sudo aptitude install build-essential\r\n```\r\n\r\n# open-vm-tools\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\nVMware\u3067\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u8868\u793a\u3059\u308b\u305f\u3081\u306b\r\n\r\n```\r\n$ sudo aptitude install open-vm-tools\r\n$ sudo aptitude install open-vm-tools-desktop\r\n```\r\n\r\n# Terminator\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n\u534a\u900f\u660e\u306b\u3067\u304d\u308b\u30bf\u30fc\u30df\u30ca\u30eb\r\n\r\n```\r\n$ sudo aptitude install terminator\r\n```\r\n\r\n# Git\u3068Subversion\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ sudo aptitude install git\r\n$ git config --global alias.mylog 'log --graph --name-status --pretty=format:\"%C(red)%h %C(green)%an %Creset%s %C(yellow)%d%Creset\"'\r\n$ sudo aptitude install subversion subversion-tools\r\n```\r\n\r\n# Zsh\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n`Zsh`\u3068`oh-my-zsh`\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0ealias\u306e\u8a2d\u5b9a\u3082\uff0e  \r\n[https://github.com/robbyrussell/oh-my-zsh/wiki/Themes](https://github.com/robbyrussell/oh-my-zsh/wiki/Themes)\r\n\r\n```\r\n$ sudo aptitude install zsh\r\n$ git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\r\n$ cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\r\n---\r\nZSH_THEME=\"candy\"\r\n---\r\n```\r\n\r\n# tmux\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n\u4f7f\u7528\u3059\u308b\u30b7\u30a7\u30eb\u3092Zsh\u306b\r\n\r\n```\r\n$ sudo aptitude install tmux\r\n$ sudo aptitude install xsel\r\n---\r\n# .tmux.conf\r\nset-option -g default-shell /bin/zsh\r\n---\r\n```\r\n\r\n# Python\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n\u307e\u305a\u95a2\u9023\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ sudo aptitude install libsqlite3-dev\r\n$ sudo aptitude install libreadline6-dev\r\n$ sudo aptitude install libgdbm-dev\r\n$ sudo aptitude install zlib1g-dev\r\n$ sudo aptitude install libbz2-dev\r\n$ sudo aptitude install sqlite3\r\n$ sudo aptitude install tk-dev\r\n$ sudo aptitude install zip\r\n$ sudo aptitude install libssl-dev\r\n```\r\n\r\n`pyenv`\u3067python\u74b0\u5883\u3092\u7ba1\u7406\u3059\u308b\r\n\r\n```\r\n$ git clone https://github.com/yyuu/pyenv.git ~/.pyenv\r\n---\r\n# .zshenv\r\nexport PYENV_ROOT=$HOME/.pyenv\r\nexport PATH=$PYENV_ROOT/bin:$PATH\r\neval \"$(pyenv init -)\"\r\n---\r\n$ pyenv install 3.5.2\r\n$ pyenv install 2.7.9\r\n$ pyenv global 3.5.2\r\n\r\n$ pyenv version    # \u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\r\n$ pyenv versions   # \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u306e\u5168\u30d0\u30fc\u30b8\u30e7\u30f3\r\n$ pyenv install -l # \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u53ef\u80fd\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\r\n```\r\n\r\n# Emacs\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n[https://github.com/clear-code/emacs.d](https://github.com/clear-code/emacs.d)\r\n\r\n```\r\n$ sudo aptitude install emacs\r\n$ git clone https://github.com/clear-code/emacs.d.git ~/.emacs.d\r\n---\r\n;; .emacs,d/init.el\r\n;; shut up, emacs!\r\n(setq display-warning-minimum-level :error))\r\n---\r\n---\r\n;; .emacs.d/config/builtins/local.el\r\n(custom-set-faces\r\n(hl-line ((t (:background \"color-236\"))))\r\n)\r\n---\r\n```\r\n\r\n# Atom\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n[https://atom.io](https://atom.io)\u304b\u3089deb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\r\n\r\n```\r\n$ sudo aptitude install git gvfs-bin\r\n$ sudo aptitude -f install\r\n$ sudo dpkg -i atom-amd64.deb\r\n$ apm install --packages-file packages.txt\r\n```\r\n\r\n# Rtags\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n\u95a2\u9023\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ sudo aptitude install clang libclang-dev cmake\r\n```\r\n\r\nRtags\u306e\u30d3\u30eb\u30c9\r\n\r\n```\r\n$ git clone https://github.com/Andersbakken/rtags\r\n$ cd rtags\r\n$ git submodule init\r\n$ git submodule update\r\n$ mkdir build\r\n$ cd build\r\n$ cmake ..\r\n$ make\r\n$ sudo make install\r\n```\r\n\r\nRtags\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\r\n\r\n```\r\n$ git clone https://github.com/rizsotto/Bear\r\n$ cd Bear\r\n$ mkdir build && cd build\r\n$ cmake ..\r\n$ make && sudo make install\r\n```\r\n\r\n\u4f7f\u3044\u65b9\r\n\r\n```\r\n$ bear make\r\n$ rdm --daemon\r\n$ rc -J .\r\n```\r\n\r\n# \u305d\u306e\u4ed6\r\n\r\n* pyonpyon\r\n\r\n [https://github.com/sgymtic/sl](https://github.com/sgymtic/sl)\r\n\r\n```\r\n$ sudo aptitude install libncurses5-dev\r\n$ git clone git@github.com:sgymtic/sl.git\r\n$ git checkout pyonpyon\r\n$ make\r\n```\r\n\r\n* vim\r\n* nodejs\r\n* npm\r\n* tig\r\n* git-cola",
    "pub_date": "2016-08-11T08:11:30.693Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 118,
  "fields": {
    "title": "C# + OpenCV",
    "content": "# \u524d\u6e96\u5099\r\n\r\nNuGet\u3067`OpenCvSharp3`\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0e\r\n\r\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u8868\u793a\uff0e\r\n\r\n```cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing OpenCvSharp;\r\n\r\nnamespace opencv\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var gray = new Mat(\"sample.png\", ImreadModes.GrayScale))\r\n            using (var edge = new Mat())\r\n            {\r\n                Cv2.Canny(gray, edge, 100, 200);\r\n                using (new Window(\"Show Image\", edge))\r\n                {\r\n                    Cv2.WaitKey();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
    "pub_date": "2016-08-16T00:42:41.838Z",
    "user": 2,
    "tags": [
      1,
      10,
      18
    ]
  }
},
{
  "model": "app.memo",
  "pk": 119,
  "fields": {
    "title": "Python\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u89e3\u6790",
    "content": "# \u4e3b\u306a\u9078\u629e\u80a2\r\n\r\n* sys.argv\r\n* argparser\r\n* docopt\r\n\r\n`argparser`\u304c\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u7d50\u69cb\u4f7f\u3048\u305d\u3046\uff0e\r\n\r\n# argparser\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\r\n\r\n## \u6e96\u5099\r\n\r\n```py\r\nimport argparse\r\nparser = argparse.ArgumentParser(description = 'spam')\r\n```\r\n\r\n## \u4f4d\u7f6e\u5f15\u6570\r\n\r\n```py\r\nparser.add_argument('foo', help = 'foo...')\r\nargs = parser.parse_args()\r\nfoo = args.foo\r\n```\r\n\r\n## \u4f4d\u7f6e\u5f15\u6570\u3092\u7701\u7565\u53ef\u306b\r\n\r\n```py\r\nparser.add_argument('foo', nargs = '?', default = '', help = 'foo...')\r\n```\r\n\r\n## \u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\r\n\r\n```py\r\nparser.add_argument('-f', help = 'foo...')\r\nparser.add_argument('-b', '--bar', default = 42, type = int, help = 'bar...')\r\nargs = parser.parse_args()\r\nfoo = args.f\r\nbar = args.bar\r\n```\r\n\r\n## \u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3092\u30d5\u30e9\u30b0\u3068\u3057\u3066\r\n\r\n```py\r\nparser.add_argument('-f', '--foo', action = 'store_true', help = 'foo...')\r\n```\r\n\r\n## \u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3092\u30d5\u30e9\u30b0\u3068\u3057\u3066\r\n\r\n```py\r\nparser.add_argument('-f', '--foo', action = 'store_true', help = 'foo...')\r\n```",
    "pub_date": "2016-09-19T02:04:45.953Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 120,
  "fields": {
    "title": "3\u884c\u3067\u6a5f\u68b0\u5b66\u7fd2",
    "content": "# 3\u884c\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3060\u3051\u3067\u3067\u304d\u308b\u300cindico\u300d\r\n\r\nPython\uff0cRuby\uff0cJava\uff0cPHP\uff0cnode.js\uff0cR\u8a00\u8a9e\u306b\u5bfe\u5fdc\uff0e\r\n\r\n![image](https://cdn.liginc.co.jp/wp-content/uploads/2016/05/23.18.png)\r\n\r\n```\r\nimport indicoio\r\nindicoio.config.api_key = 'YOUR_API_KEY'\r\nprint(indicoio.sentiment_hq('indico is so easy to use!'))\r\n```",
    "pub_date": "2016-09-19T02:19:41.537Z",
    "user": 2,
    "tags": [
      1,
      53
    ]
  }
},
{
  "model": "app.memo",
  "pk": 121,
  "fields": {
    "title": "OpenCV\u3067\u30e2\u30b6\u30a4\u30af\u51e6\u7406",
    "content": "# OpenCV\uff08Python\uff09\u3067\u306e\u30e2\u30b6\u30a4\u30af\u51e6\u7406\r\n\r\n\u3044\u3063\u305f\u3093\u753b\u50cf\u3092\u5c0f\u3055\u304f\u30ea\u30b5\u30a4\u30ba\u3057\u3066\u304b\u3089\u5143\u306e\u30b5\u30a4\u30ba\u306b\u623b\u3059\u3060\u3051\uff0e\r\n\r\n```py\r\nimport numpy as np\r\nimport cv2\r\n\r\nimg = cv2.imread('spam.png')\r\n\r\nfor x, y, w, h in [(12, 99, 244, 162), (343, 17, 168, 244), (598, 17, 244, 244)]:\r\n    cut_img = img[y:y + h, x:x + w]\r\n    cut_size = cut_img.shape[:2][::-1]\r\n    cut_img = cv2.resize(cut_img, (cut_size[0] // 10, cut_size[0] // 10))\r\n    cut_img = cv2.resize(cut_img,cut_size, interpolation = cv2.INTER_NEAREST)\r\n    img[y:y + h, x:x + w] = cut_img\r\n\r\ncv2.imshow('mosaic', img)\r\ncv2.imwrite('ham.png', img)\r\ncv2.waitKey(0)\r\ncv2.destroyAllWindows()\r\n```",
    "pub_date": "2016-09-22T07:07:08.275Z",
    "user": 2,
    "tags": [
      1,
      2,
      18
    ]
  }
},
{
  "model": "app.memo",
  "pk": 122,
  "fields": {
    "title": "Vivaldi\u3067\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u5b58\u3057\u306a\u3044\uff0c\u306b\u8a2d\u5b9a\u3057\u305f\u30da\u30fc\u30b8\u3067\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3059\u308b",
    "content": "\u30a2\u30c9\u30ec\u30b9\u30d0\u30fc\u306b [vivaldi://settings/search#a](vivaldi://settings/search#a) \u3092\u5165\u529b\r\n\r\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7ba1\u7406\u304b\u3089\u8a72\u5f53\u7b87\u6240\u3092\u524a\u9664\r\n\r\n![image](http://mkb.salchu.net/wp/wp-content/uploads/2016/05/icon-vivaldi-1-650x320.png)\r\n\r\n\u203b\u30c6\u30ad\u30b9\u30c8\u306e\u5c65\u6b74\u306e\u524a\u9664\u306f\u9078\u629e\u3057\u3066shift\uff0bdelete",
    "pub_date": "2016-09-30T14:05:25.008Z",
    "user": 2,
    "tags": [
      54
    ]
  }
},
{
  "model": "app.memo",
  "pk": 123,
  "fields": {
    "title": "electron-packager\u3067\u306ecannot find module\u89e3\u6c7a",
    "content": "# package.json\u306e\u4e2d\u306bdependencies\u5fc5\u8981\r\n\r\nnpm\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u304d\u306b\uff0c`npm install <module_name> --save`\u3068\u3059\u308c\u3070OK\uff01\r\n\r\n![image](http://codezine.jp/static/images/article/8782/8782_t.gif)",
    "pub_date": "2016-10-09T04:31:41.339Z",
    "user": 2,
    "tags": [
      1,
      47
    ]
  }
},
{
  "model": "app.memo",
  "pk": 124,
  "fields": {
    "title": "Python\u3067\u30ea\u30b9\u30c8\u306eReverse",
    "content": "# \u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u305f\u30ea\u30d0\u30fc\u30b9\r\n\r\n```py\r\nspam = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nspam[::-1]\r\n```\r\n\r\n# \u666e\u901a\u306e\u3084\u308a\u65b9\r\n\r\n```py\r\nspam = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nlist(reversed(spam))\r\n```\r\n\r\n\u3068\u304f\u306b\u6587\u5b57\u5217\u306e\u53cd\u8ee2\u306a\u3093\u304b\u306f\u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u7c21\u5358\uff0e\uff08reversed\u3092\u4f7f\u3046\u3068''.join()\u3057\u306a\u3044\u3068\u6587\u5b57\u306e\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\uff09\r\n\r\n```py\r\nspam = 'Hello, world!'\r\nprint(spam[::-1])\r\nprint(''.join(reversed(spam)))\r\n```",
    "pub_date": "2016-10-28T04:47:25.465Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 125,
  "fields": {
    "title": "Heroku\u306e\u74b0\u5883\u5909\u6570\u306e\u64cd\u4f5c",
    "content": "# \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\r\n\r\n```\r\n# \u74b0\u5883\u5909\u6570\u4e00\u89a7\r\n$ heroku config\r\n\r\n# \u74b0\u5883\u5909\u6570\u540d\u3092\u6307\u5b9a\u3057\u3066\u53c2\u7167\r\n$ heroku config:get ENV_VAR_NAME\r\n\r\n# \u8ffd\u52a0 (\u4e00\u5fdcadd\u3082\u4f7f\u3048\u307e\u3059)\r\n$ heroku config:set ENV_VAR_NAME=\"value\"\r\n\r\n# \u524a\u9664 (\u4e00\u5fdcremove\u3082\u4f7f\u3048\u307e\u3059)\r\n$ heroku config:unset ENV_VAR_NAME\r\n\r\n# \u30a2\u30d7\u30ea\u304c\u8907\u6570\u3042\u308b\u5834\u5408\r\n$ heroku config --app \u30a2\u30d7\u30ea\u540d\r\n```",
    "pub_date": "2016-11-01T13:59:41.933Z",
    "user": 2,
    "tags": [
      1,
      33
    ]
  }
},
{
  "model": "app.memo",
  "pk": 126,
  "fields": {
    "title": "CMakeLists.txt\u306e\u6700\u4f4e\u9650\u306e\u8a18\u8ff0",
    "content": "# CMakeLists.txt\u306e\u5185\u5bb9\r\n\r\n```\r\ncmake_minimum_required(VERSION 2.8)\r\nadd_definitions(\"-Wall -std=c++11\")\r\nset(CMAKE_BUILD_TYPE Debug)\r\nadd_executable(project_name\r\n    main.cpp\r\n    hoge.cpp\r\n    piyo.cpp\r\n)\r\n```\r\n\r\n# \u5b9f\u884c\uff08Windows MSYS\uff09\r\n\r\n```\r\n> cmake . -G \"MSYS Makefiles\"\r\n```\r\n\r\n# \u5b9f\u884c\uff08Linux\uff09\r\n\r\n```\r\n$ cmake .\r\n```",
    "pub_date": "2016-11-25T07:19:26.922Z",
    "user": 2,
    "tags": [
      1,
      8,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 127,
  "fields": {
    "title": "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u7528\u30d5\u30a9\u30f3\u30c8",
    "content": "# \u304a\u3059\u3059\u3081\u30d5\u30a9\u30f3\u30c8\r\n\r\n* CamingoCode\r\n* Source Code Pro\r\n* Ricty / Inconsolata\r\n* Consolas\r\n* Monaco / Osaka-Mono\r\n* Menlo\r\n\r\n# Debian\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\r\n\r\n```\r\n$ fc-list  # \u30d5\u30a9\u30f3\u30c8\u4e00\u89a7\r\n$ sudo mv CamingoCode /usr/share/fonts/truetype/  # \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30f3\u30c8\u3092\u30b3\u30d4\u30fc\uff08\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff09\r\n$ fc-cache  # \u30d5\u30a9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\r\n$ fc-list  # \u30d5\u30a9\u30f3\u30c8\u4e00\u89a7\uff08\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30d5\u30a9\u30f3\u30c8\u304c\u8ffd\u52a0\uff09\r\n```",
    "pub_date": "2016-11-28T12:09:27.187Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 128,
  "fields": {
    "title": "EditorConfig\u306e\u30b5\u30f3\u30d7\u30eb",
    "content": "# \u3069\u3093\u306a\u30a8\u30c7\u30a3\u30bf\u3067\u3082\u30b3\u30fc\u30c9\u306e\u7d71\u4e00\u6027\u3092\u9ad8\u3081\u308b\r\n\r\n[http://editorconfig.org/](http://editorconfig.org/)\r\n\r\n![image](http://editorconfig.org/logo.png)\r\n\r\n## .editorconfig\r\n\r\n```\r\n# EditorConfig helps developers define and maintain consistent\r\n# coding styles between different editors and IDEs\r\n# editorconfig.org\r\n\r\nroot = true\r\n\r\n[*]\r\n\r\n# Change these settings to your own preference\r\nindent_style = space    # tab or space\r\nindent_size = 4\r\n\r\n# We recommend you to keep these unchanged\r\nend_of_line = lf        # lf or cr or crls\r\ncharset = utf-8\r\ntrim_trailing_whitespace = true\r\ninsert_final_newline = true\r\n\r\n[*.md]\r\ntrim_trailing_whitespace = false\r\n```",
    "pub_date": "2016-12-01T06:02:40.343Z",
    "user": 2,
    "tags": [
      1,
      55
    ]
  }
},
{
  "model": "app.memo",
  "pk": 129,
  "fields": {
    "title": "Vivaldi\u306e\u30b9\u30bf\u30fc\u30c8\u30da\u30fc\u30b8URL",
    "content": "# Vivaldi\u306e\u30b9\u30bf\u30fc\u30c8\u30da\u30fc\u30b8URL\r\n\r\n[vivaldi://startpage](vivaldi://startpage)\r\n\r\n![image](https://i.ytimg.com/vi/HPjJszHidhI/hqdefault.jpg)\r\n\r\n\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u3051\u3070\u30a2\u30a4\u30b3\u30f3\u30af\u30ea\u30c3\u30af\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u30da\u30fc\u30b8\u304c\u8868\u793a\u3067\u304d\u308b\uff0e",
    "pub_date": "2016-12-02T11:06:57.319Z",
    "user": 2,
    "tags": [
      54
    ]
  }
},
{
  "model": "app.memo",
  "pk": 130,
  "fields": {
    "title": "TypeScript\u3067Electron",
    "content": "# TypeScript\u3092\u4f7f\u3063\u3066Electron\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\r\n\r\nTypeScript\u3068\u578b\u5b9a\u7fa9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08\u3053\u3053\u3067\u306f\u30ed\u30fc\u30ab\u30eb\u306b\uff09\r\n\r\n```\r\n$ npm init\r\n$ npm install typescript --save-dev\r\n$ npm install @types/electron --save-dev\r\n$ npm install @types/node --save-dev\r\n```\r\n\r\nTypeScript\u306e\u8a2d\u5b9a\uff08tsconfig.json\uff09\r\n\r\n```\r\n{\r\n    \"compilerOptions\": {\r\n        \"target\": \"es6\",\r\n        \"module\": \"commonjs\",\r\n        \"sourceMap\": false\r\n    },\r\n    \"exclude\": [\r\n        \"node_modules\"\r\n    ]\r\n}\r\n```\r\n\r\npackage.json\u3092\u4f7f\u3063\u3066\u8d77\u52d5\uff0e `npm run build` \u3067\u30d3\u30eb\u30c9\uff0c `npm start` \u3067\u30d3\u30eb\u30c9\u3092\u3057\u3066\u304b\u3089Electron\u3067\u8d77\u52d5\uff0e\r\n\r\n```\r\n  \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n    \"build\": \"node_modules\\\\.bin\\\\tsc\",\r\n    \"prestart\": \"npm run build\",\r\n    \"start\": \"electron .\"\r\n  },\r\n```\r\n\r\nmain.js\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\r\n\r\n```\r\nconst electron = require('electron');\r\nconst app = electron.app;\r\nconst BrowserWindow = electron.BrowserWindow;\r\nclass MyApplication {\r\n    constructor() {\r\n        this.mainWindow = null;\r\n        app.on('window-all-closed', this.onWindowAllClosed);\r\n        app.on('ready', this.onReady);\r\n    }\r\n    onWindowAllClosed() {\r\n        if (process.platform != 'darwin') {\r\n            app.quit();\r\n        }\r\n    }\r\n    onReady() {\r\n        this.mainWindow = new BrowserWindow({\r\n            width: 800,\r\n            height: 400,\r\n            minWidth: 500,\r\n            minHeight: 200,\r\n            acceptFirstMouse: true,\r\n            titleBarStyle: 'hidden'\r\n        });\r\n        this.mainWindow.loadURL('file://' + __dirname + `/index.html`);\r\n        this.mainWindow.on('closed', () => {\r\n            this.mainWindow = null;\r\n        });\r\n    }\r\n}\r\nconst myapp = new MyApplication();\r\n```",
    "pub_date": "2016-12-18T09:49:44.228Z",
    "user": 2,
    "tags": [
      1,
      47,
      56
    ]
  }
},
{
  "model": "app.memo",
  "pk": 131,
  "fields": {
    "title": "NEW GAME!",
    "content": "![image](http://img.gifmagazine.net/gifmagazine/images/974202/original.gif?1477770671)\r\n\r\n![image](http://img.gifmagazine.net/gifmagazine/images/974092/original.gif?1477758607)",
    "pub_date": "2017-01-08T15:26:11.379Z",
    "user": 2,
    "tags": [
      41
    ]
  }
},
{
  "model": "app.memo",
  "pk": 132,
  "fields": {
    "title": "Excel\u3092\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u958b\u304f\u65b9\u6cd5",
    "content": "# \u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u306e\u300c\u9001\u308b\u300d\u3067\u5bfe\u5fdc\r\n\r\n1. EXCEL.EXE\u306e\u5834\u6240\u3092\u8abf\u3079\u308b\r\n1. \u300cShell:SendTo\u300d\u3068\u5165\u529b\u3057\u3066\u300c\u9001\u308b\u300d\u30d5\u30a9\u30eb\u30c0\u3092\u8868\u793a\u3059\u308b\r\n1. EXCEL.EXE\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3092\u300c\u9001\u308b\u300d\u306b\u4f5c\u6210\u3059\u308b\r\n1. Excel\u3092\u958b\u304f\u3068\u304d\u306b\u4e0a\u8a18\u306e\u9001\u308b\u3067\u958b\u304f\u3068\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u7acb\u3061\u4e0a\u304c\u308b\r\n\r\n\u203bExcel 2013\uff0f2016\u3067\u306f\u6a19\u6e96\u3067\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u8868\u793a\u3055\u308c\u308b\uff0e\r\n\r\n![image](https://cdn-img.easyicon.net/png/11211/1121167.gif)",
    "pub_date": "2017-01-16T01:40:29.107Z",
    "user": 2,
    "tags": [
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 133,
  "fields": {
    "title": "\u5404\u7a2eproxy\u306e\u8a2d\u5b9a",
    "content": "# Linux\uff08Debian\uff09\r\n\r\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a2d\u5b9a\u753b\u9762\u304b\u3089\u8a2d\u5b9a\r\n\r\n# \u74b0\u5883\u5909\u6570\r\n\r\n```shell\r\n$ export http_proxy=http://proxy.example.com:8080\r\n$ export https_proxy=https://proxy.example.com:8080\r\n$ export ftp_proxy=ftp://proxy.example.com:8080\r\n```\r\n\r\n# Git\r\n\r\n```shell\r\n$ git config --global http.proxy http://proxy.example.com:8080\r\n$ git config --global https.proxy https://proxy.example.com:8080\r\n```\r\n\r\n# Emacs\r\n\r\n~/.emacs.d/init.el\r\n\r\n```\r\n;; proxy\r\n(setq url-proxy-services\r\n      '((\"http\" . \"proxy.example.com:8080\")\r\n        (\"https\" . \"proxy.example.com:8080\")))\r\n(setq url-http-proxy-basic-auth-storage\r\n      '((\"proxy.example.com:8080\" (\"Proxy\" . \"base64string\"))))\r\n```\r\n\r\n# subversion\r\n\r\n~/.subversion/servers\r\n\r\n```\r\n[global]\r\nhttp-proxy-host = proxy.example.com\r\nhttp-proxy-port = 8080\r\n```\r\n\r\n# apt-get\r\n\r\n/etc/apt/apt.conf\r\n\r\n```\r\nAcquire::ftp::proxy \"ftp://proxy.example.com:8080\";\r\nAcquire::http::proxy \"http://proxy.example.com:8080\";\r\nAcquire::https::proxy \"https://proxy.example.com:8080\";\r\n```\r\n\r\n# wget\r\n\r\n/etc/wgetrc\r\n\r\n```\r\nhttps_proxy = https://proxy.example.com:8080/\r\nhttp_proxy = http://proxy.example.com:8080/\r\nftp_proxy = ftp://proxy.example.com:8080/\r\n```\r\n\r\n# curl\r\n\r\n~/.curlrc\r\n\r\n```\r\nproxy = \"http://proxy.example.com:8080/\"\r\n```\r\n\r\n# pyenv\r\n\r\nproxy\u306e\u8a2d\u5b9a\u306b\u52a0\u3048\u3066pip\u306e\u8a3c\u660e\u66f8\u30a8\u30e9\u30fc\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b2\u3064\u306e\u8ffd\u52a0\u306e\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u304c\u5fc5\u8981\r\n\r\n```shell\r\n$ export PIP_INDEX_URL=\"https://pypi.python.org/simple/\"\r\n$ export PIP_TRUSTED_HOST=\"pypi.python.org\"\r\n```\r\n\r\n# docker\r\n\r\n/etc/systemd/system/docker.service.d/http-proxy.conf\r\n\r\n```shell\r\n$ sudo mkdir -p /etc/systemd/system/docker.service.d\r\n$ sudo touch /etc/systemd/system/docker.service.d/http-proxy.conf\r\n```\r\n```\r\n[Service]\r\nEnvironment=\"HTTP_PROXY=http://proxy.example.com:8080/\"\r\n```",
    "pub_date": "2017-01-26T09:12:41.798Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 134,
  "fields": {
    "title": "VSCode\u306eRunner\u8a2d\u5b9a\uff08Windows\uff09",
    "content": "# User Settings\r\n\r\n```\r\n// Specify language name as key, specify execuable as value\r\n\"runner.languageMap\": {\r\n    \"c\": \"C:/VisualCodeRunner/crun.bat\",\r\n    \"cpp\": \"C:/VisualCodeRunner/cpprun.bat\"\r\n},\r\n```\r\n\r\n# C\u8a00\u8a9e\u7528bat\uff08crun.bat\uff09\r\n\r\n```\r\n@echo off\r\n \r\nREM --------------------------------------------\r\nREM \u5f15\u6570\u304c\u5fc5\u8981\r\nREM \u5f15\u6570\u304c\u76f8\u5bfe\u30d1\u30b9\u3067\u3082\u30d5\u30eb\u30d1\u30b9\u306b\u5909\u63db\r\nREM %~d1 - %1 \u3092\u30c9\u30e9\u30a4\u30d6\u6587\u5b57\u3060\u3051\u306b\u5c55\u958b\r\nREM %~p1 - %1 \u3092\u30d1\u30b9\u3060\u3051\u306b\u5c55\u958b\r\nREM %~n1 - %1 \u3092\u30d5\u30a1\u30a4\u30eb\u540d\u3060\u3051\u306b\u5c55\u958b\r\nREM %~x1 - %1 \u3092\u30d5\u30a1\u30a4\u30eb\u62e1\u5f35\u5b50\u3060\u3051\u306b\u5c55\u958b\r\nREM --------------------------------------------\r\nif \"%~dpnx1\" equ \"\" goto :eof\r\n \r\nREM --------------------------------------------\r\nREM \u74b0\u5883\u5909\u6570\u306e\u30ed\u30fc\u30ab\u30eb\u5316\u958b\u59cb\r\nREM --------------------------------------------\r\nsetlocal\r\n \r\nREM --------------------------------------------\r\nREM \u4e00\u6642\u7684\u306b\u4f7f\u3046exe\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u308b\r\nREM --------------------------------------------\r\nREM \u65e5\u4ed8\u3068\u6642\u9593\u3092\u4f7f\u3046\u3001date\u306e\u524d4\u6841\uff08YYYY\uff09\u3092\u524a\u9664\u3001time\u306e:\u3092\u524a\u9664\r\nset tempfile=%date:~4%%time::=%\r\nREM / \u3092\u524a\u9664\r\nset tempfile=%tempfile:/=%\r\nREM . \u3092\u524a\u9664\r\nset tempfile=%tempfile:.=%\r\nREM \u7a7a\u767d\u3092\u524a\u9664\r\nset tempfile=%tempfile: =%\r\n \r\n \r\nREM --------------------------------------------\r\nREM \u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\uff08gcc\uff09\r\nREM --------------------------------------------\r\ngcc -o %tempfile%.exe \"%~dpnx1\"\r\n \r\nREM --------------------------------------------\r\nREM EXE\u30d5\u30a1\u30a4\u30eb\u5b9f\u884c\r\nREM --------------------------------------------\r\n%tempfile%.exe\r\n \r\n \r\nREM --------------------------------------------\r\nREM EXE\u30d5\u30a1\u30a4\u30eb\u524a\u9664\r\nREM --------------------------------------------\r\ndel %tempfile%.exe\r\n \r\nREM --------------------------------------------\r\nREM \u74b0\u5883\u5909\u6570\u306e\u30ed\u30fc\u30ab\u30eb\u5316\u7d42\u4e86\r\nREM --------------------------------------------\r\nendlocal\r\n```\r\n\r\n# C++\u7528bat\uff08cpprun.bat\uff09\r\n\r\n```\r\n@echo off\r\n \r\nREM --------------------------------------------\r\nREM \u5f15\u6570\u304c\u5fc5\u8981\r\nREM \u5f15\u6570\u304c\u76f8\u5bfe\u30d1\u30b9\u3067\u3082\u30d5\u30eb\u30d1\u30b9\u306b\u5909\u63db\r\nREM %~d1 - %1 \u3092\u30c9\u30e9\u30a4\u30d6\u6587\u5b57\u3060\u3051\u306b\u5c55\u958b\r\nREM %~p1 - %1 \u3092\u30d1\u30b9\u3060\u3051\u306b\u5c55\u958b\r\nREM %~n1 - %1 \u3092\u30d5\u30a1\u30a4\u30eb\u540d\u3060\u3051\u306b\u5c55\u958b\r\nREM %~x1 - %1 \u3092\u30d5\u30a1\u30a4\u30eb\u62e1\u5f35\u5b50\u3060\u3051\u306b\u5c55\u958b\r\nREM --------------------------------------------\r\nif \"%~dpnx1\" equ \"\" goto :eof\r\n \r\nREM --------------------------------------------\r\nREM \u74b0\u5883\u5909\u6570\u306e\u30ed\u30fc\u30ab\u30eb\u5316\u958b\u59cb\r\nREM --------------------------------------------\r\nsetlocal\r\n \r\nREM --------------------------------------------\r\nREM \u4e00\u6642\u7684\u306b\u4f7f\u3046exe\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u308b\r\nREM --------------------------------------------\r\nREM \u65e5\u4ed8\u3068\u6642\u9593\u3092\u4f7f\u3046\u3001date\u306e\u524d4\u6841\uff08YYYY\uff09\u3092\u524a\u9664\u3001time\u306e:\u3092\u524a\u9664\r\nset tempfile=%date:~4%%time::=%\r\nREM / \u3092\u524a\u9664\r\nset tempfile=%tempfile:/=%\r\nREM . \u3092\u524a\u9664\r\nset tempfile=%tempfile:.=%\r\nREM \u7a7a\u767d\u3092\u524a\u9664\r\nset tempfile=%tempfile: =%\r\n \r\n \r\nREM --------------------------------------------\r\nREM \u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\uff08gcc\uff09\r\nREM --------------------------------------------\r\ng++ -std=c++11 -o %tempfile%.exe \"%~dpnx1\"\r\n \r\nREM --------------------------------------------\r\nREM EXE\u30d5\u30a1\u30a4\u30eb\u5b9f\u884c\r\nREM --------------------------------------------\r\n%tempfile%.exe\r\n \r\n \r\nREM --------------------------------------------\r\nREM EXE\u30d5\u30a1\u30a4\u30eb\u524a\u9664\r\nREM --------------------------------------------\r\ndel %tempfile%.exe\r\n \r\nREM --------------------------------------------\r\nREM \u74b0\u5883\u5909\u6570\u306e\u30ed\u30fc\u30ab\u30eb\u5316\u7d42\u4e86\r\nREM --------------------------------------------\r\nendlocal\r\n```",
    "pub_date": "2017-01-29T10:28:51.983Z",
    "user": 2,
    "tags": [
      1,
      37,
      55
    ]
  }
},
{
  "model": "app.memo",
  "pk": 135,
  "fields": {
    "title": "\u30ad\u30fc\u30bf\u30a4\u30d7\u77ef\u6b63\u30bd\u30d5\u30c8",
    "content": "# \u3053\u3053\u308d\u3074\u3087\u3093\u3074\u3087\u3093\u5f85\u3061\uff1f\r\n\r\n[https://github.com/sgymtic/sl.git](https://github.com/sgymtic/sl.git)\r\n\r\n![image](http://game.matomame.jp/assets/images/matome/7e7194d92cd92263ca9a/853f6f68646cdc9fcfe94aff187c16e8.jpg)",
    "pub_date": "2017-01-31T13:51:34.922Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 136,
  "fields": {
    "title": "VSCode\u306eRunner\u8a2d\u5b9a\uff08Linux\uff09",
    "content": "# User Settings\r\n\r\n```\r\n// Specify language name as key, specify execuable as value\r\n\"runner.languageMap\": {\r\n    \"c\": \"~/vscrunner/crun_gcc.sh\",\r\n    \"cpp\": \"~/vscrunner/cpprun_gcc.sh\"\r\n},\r\n```\r\n\r\n# C\u8a00\u8a9e\u7528\u30b9\u30af\u30ea\u30d7\u30c8\uff08crun_gcc.sh\uff09\r\n\r\n```\r\n#!/bin/sh\r\n\r\nif [ -z \"$1\" ]\r\nthen\r\n    echo \"need argument\"\r\n    exit\r\nfi\r\n\r\n#-------------------------------\r\n# \u4e00\u6642\u7684\u306b\u4f7f\u3046\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u308b\r\n#-------------------------------\r\ntempfile=`date '+%m%d%H%M%S'`\r\n\r\n#-------------------------------\r\n# \u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\r\n#-------------------------------\r\ngcc -o $tempfile $1\r\n\r\n#-------------------------------\r\n# \u5b9f\u884c\r\n#-------------------------------\r\n./$tempfile\r\n\r\n#-------------------------------\r\n# \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u524a\u9664\r\n#-------------------------------\r\nrm $tempfile\r\n```\r\n\r\n# C++\u7528\u30b9\u30af\u30ea\u30d7\u30c8\uff08cpprun_gcc.sh\uff09\r\n\r\n```\r\n#!/bin/sh\r\n\r\nif [ -z \"$1\" ]\r\nthen\r\n    echo \"need argument\"\r\n    exit\r\nfi\r\n\r\n#-------------------------------\r\n# \u4e00\u6642\u7684\u306b\u4f7f\u3046\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u308b\r\n#-------------------------------\r\ntempfile=`date '+%m%d%H%M%S'`\r\n\r\n#-------------------------------\r\n# \u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\r\n#-------------------------------\r\ng++ -std=c++11 -o $tempfile $1\r\n\r\n#-------------------------------\r\n# \u5b9f\u884c\r\n#-------------------------------\r\n./$tempfile\r\n\r\n#-------------------------------\r\n# \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u524a\u9664\r\n#-------------------------------\r\nrm $tempfile\r\n```",
    "pub_date": "2017-02-01T00:20:10.211Z",
    "user": 2,
    "tags": [
      1,
      52,
      55
    ]
  }
},
{
  "model": "app.memo",
  "pk": 137,
  "fields": {
    "title": "Qt5\u30a2\u30d7\u30ea\u306e\u30b3\u30f3\u30d1\u30a4\u30eb",
    "content": "# Qt\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```shell\r\n$ sudo aptitude install qt5-default\r\n```\r\n\r\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```cpp\r\n#include <QApplication>\r\n#include <QHBoxLayout>\r\n#include <QSlider>\r\n#include <QSpinBox>\r\n#include <stdio.h>\r\n\r\nstatic void prtage(int age)\r\n{\r\n    printf(\"Age = %d\\n\", age);\r\n}\r\n\r\nint main(int argc, char **argv)\r\n{\r\n    QApplication app(argc, argv);\r\n    QWidget window;\r\n    window.setWindowTitle(\"Enter Your Age\");\r\n\r\n    QSpinBox spinBox;\r\n    QSlider slider(Qt::Horizontal);\r\n    spinBox.setRange(0, 130);\r\n    slider.setRange(0, 130);\r\n\r\n    QObject::connect(&spinBox, static_cast<void (QSpinBox::*)(int)>(&QSpinBox::valueChanged), &slider, &QSlider::setValue);\r\n    QObject::connect(&slider, &QSlider::valueChanged, &spinBox, &QSpinBox::setValue);\r\n    QObject::connect(&slider, &QSlider::valueChanged, &prtage);\r\n\r\n    spinBox.setValue(35);\r\n\r\n    QHBoxLayout layout;\r\n    layout.addWidget(&spinBox);\r\n    layout.addWidget(&slider);\r\n    window.setLayout(&layout);\r\n    window.show();\r\n    return app.exec();\r\n}\r\n```\r\n\r\n# \u30d3\u30eb\u30c9\r\n\r\n```\r\n$ qmake -project -o qtsample.pro\r\n$ echo \"QT += widgets\" >> qtsample.pro\r\n$ qmake\r\n$ make\r\n```",
    "pub_date": "2017-02-04T12:02:22.523Z",
    "user": 2,
    "tags": [
      1,
      16,
      52,
      57
    ]
  }
},
{
  "model": "app.memo",
  "pk": 138,
  "fields": {
    "title": "Visual Studio C/C++\u3067\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u691c\u51fa",
    "content": "# \u8abf\u67fb\u7528\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n`crtdbg.h`\u306einclude\u3068`_CrtSetDbgFlag`\u3092\u5148\u982d\u3067\u547c\u3073\u51fa\u3057\r\n\r\n```cpp\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <crtdbg.h>\r\n#define malloc(X) _malloc_dbg(X, _NORMAL_BLOCK, __FILE__, __LINE__)\r\n#define new ::new(_NORMAL_BLOCK, __FILE__, __LINE__)\r\n\r\nint main()\r\n{\r\n    _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_DELAY_FREE_MEM_DF | _CRTDBG_CHECK_ALWAYS_DF | _CRTDBG_LEAK_CHECK_DF);\r\n\r\n    int* hoge = reinterpret_cast<int*>(malloc(sizeof(int) * 16));\r\n    //free(hoge);\r\n\r\n    int* piyo = new int[32];\r\n    //delete[] piyo;\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n# \u51fa\u529b\u7d50\u679c\r\n```\r\nDetected memory leaks!\r\nDumping objects ->\r\nc:\\users\\tsutsu\\desktop\\sample\\sample\\sample.cpp(14) : {70} normal block at 0x00E7E238, 128 bytes long.\r\n Data: <                > CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD \r\nc:\\users\\tsutsu\\desktop\\sample\\sample\\sample.cpp(11) : {69} normal block at 0x00E74EE8, 64 bytes long.\r\n Data: <                > CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD \r\nObject dump complete.\r\n```",
    "pub_date": "2017-02-05T04:51:11.175Z",
    "user": 2,
    "tags": [
      1,
      8,
      16,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 139,
  "fields": {
    "title": "valgrind\u3067C/C++\u306e\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u691c\u51fa",
    "content": "# \u8abf\u67fb\u7528\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```cpp\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int* hoge = reinterpret_cast<int*>(malloc(sizeof(int) * 16));\r\n    //free(hoge);\r\n\r\n    int* piyo = new int[32];\r\n    //delete[] piyo;\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ sudo aptitude valgrind\r\n```\r\n\r\n# \u5b9f\u884c\r\n\r\n```\r\n$ valgrind --leak-check=full ./sample\r\n```\r\n\r\n# \u51fa\u529b\u7d50\u679c\r\n\r\n```\r\n==7234== HEAP SUMMARY:\r\n==7234==     in use at exit: 192 bytes in 2 blocks\r\n==7234==   total heap usage: 2 allocs, 0 frees, 192 bytes allocated\r\n==7234==\r\n==7234== 64 bytes in 1 blocks are definitely lost in loss record 1 of 2\r\n==7234==    at 0x4C28C20: malloc (vg_replace_malloc.c:296)\r\n==7234==    by 0x40081A: main (sample.cpp:6)\r\n==7234==\r\n==7234== 128 bytes in 1 blocks are definitely lost in loss record 2 of 2\r\n==7234==    at 0x4C298A0: operator new[](unsigned long) (vg_replace_malloc.c:389)\r\n==7234==    by 0x400828: main (sample.cpp:9)\r\n==7234==\r\n==7234== LEAK SUMMARY:\r\n==7234==    definitely lost: 192 bytes in 2 blocks\r\n==7234==    indirectly lost: 0 bytes in 0 blocks\r\n==7234==      possibly lost: 0 bytes in 0 blocks\r\n==7234==    still reachable: 0 bytes in 0 blocks\r\n==7234==         suppressed: 0 bytes in 0 blocks\r\n==7234==\r\n==7234== For counts of detected and suppressed errors, rerun with: -v\r\n==7234== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)\r\n```",
    "pub_date": "2017-02-05T08:04:13.558Z",
    "user": 2,
    "tags": [
      1,
      8,
      16,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 140,
  "fields": {
    "title": "C++11\u306e\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf",
    "content": "# std::unique_ptr\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <memory>\r\n\r\nclass MyClass\r\n{\r\nprivate:\r\n    int val_;\r\npublic:\r\n    MyClass() : val_(42) {}\r\n    void Print() { std::cout << this->val_ << std::endl; }\r\n};\r\n\r\nint main()\r\n{\r\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u3068\u3057\u3066\uff0c\u52d5\u7684\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\r\n    std::unique_ptr<MyClass> ptr(new MyClass());\r\n    ptr->Print();\r\n\r\n    // reset\u95a2\u6570\u3092\u4f7f\u3063\u3066\uff0c\u5f8c\u304b\u3089\u4ee3\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\r\n    std::unique_ptr<MyClass> ptr2;\r\n    ptr2.reset(new MyClass());\r\n\r\n    // C++14\u4ee5\u964d\u3067\u3042\u308c\u3070\uff0cmake_unique\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u308b\r\n    std::unique_ptr<MyClass> ptr3 = std::make_unique<MyClass>();\r\n\r\n    // ptr3\u306e\u6240\u6709\u6a29\u304cptr4\u306b\u79fb\u52d5\u3059\u308b\r\n    std::unique_ptr<MyClass> ptr4(std::move(ptr3));\r\n    if (!ptr3)\r\n    {\r\n        std::cout << \"prt3 NG\" << std::endl;\r\n    }\r\n    if (ptr4)\r\n    {\r\n        std::cout << \"prt4 OK\" << std::endl;\r\n    }\r\n\r\n    // \u751f\u30dd\u30a4\u30f3\u30bf\u306e\u53d6\u5f97\uff08\u6240\u6709\u6a29\u306f\u305d\u306e\u307e\u307e\uff09\r\n    auto p = ptr4.get();\r\n    p->Print();\r\n    // \u751f\u30dd\u30a4\u30f3\u30bf\u306e\u53d6\u5f97\uff08\u6240\u6709\u6a29\u3092\u7834\u68c4\uff09\r\n    auto p2 = ptr4.release();\r\n    p2->Print();\r\n\r\n    // reset\u95a2\u6570\u3092\u4f7f\u3063\u3066\uff0cptr3\u3067\u7ba1\u7406\r\n    ptr3.reset(p2);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n# std::shared_ptr\r\n\r\n```\r\n#include <iostream>\r\n#include <memory>\r\n\r\nclass MyClass\r\n{\r\nprivate:\r\n    int val_;\r\npublic:\r\n    MyClass() : val_(42) {}\r\n    void Print() { std::cout << this->val_ << std::endl; }\r\n};\r\n\r\nint main()\r\n{\r\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3084\uff0creset\u95a2\u6570\u3092\u4f7f\u3063\u3066\u306e\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\u304c\u53ef\u80fd\r\n    std::shared_ptr<MyClass> ptr(new MyClass());\r\n    std::shared_ptr<MyClass> ptr2;\r\n    ptr2.reset(new MyClass());\r\n\r\n    // make_shared\u95a2\u6570\u3092\u4f7f\u3046\u3068\uff0c\u52b9\u7387\u3088\u304f\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3067\u304d\u308b\uff08C++11\u304b\u3089\u4f7f\u3048\u308b\uff09\r\n    auto ptr3 = std::make_shared<MyClass>();\r\n\r\n    auto ptr4 = ptr3;\r\n    ptr4->Print();\r\n\r\n    // \u3042\u3068\u306fstd::unique_ptr\u3068\u540c\u3058\u3088\u3046\u306a\u611f\u3058\r\n\r\n    return 0;\r\n}\r\n```",
    "pub_date": "2017-02-05T10:54:59.568Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 141,
  "fields": {
    "title": "VSCode\u306eExtension\u4e00\u89a7",
    "content": "# Extension\u4e00\u89a7\r\n\r\n* Ayu\r\n* Bash beautify\r\n* Beautify css/sass/scss/less\r\n* Better TOML\r\n* Bookmarks\r\n* C/C++\r\n* C#\r\n* CMake\r\n* Code Runner\r\n* Docker\r\n* EditorConfig for VS Code\r\n* Git Graph\r\n* GitExtensions\r\n* gitignore\r\n* GitLens\r\n* GlassIt-VSC\r\n* Go\r\n* Japanese Language Pack for Visual Studio Code\r\n* jumpy\r\n* Path Autocomplete\r\n* PlantUML\r\n* Python\r\n* QML\r\n* Rainbow CSV\r\n* Remote Development\r\n* SSH FS\r\n* Table Formatter\r\n* Vetur\r\n\r\n```shell\r\n$ code --list-extensions\r\nalefragnani.Bookmarks\r\nbbenoist.QML\r\nbungcip.better-toml\r\ncodezombiech.gitignore\r\neamodio.gitlens\r\nEditorConfig.EditorConfig\r\nformulahendry.code-runner\r\nionutvmi.path-autocomplete\r\njebbs.plantuml\r\nKelvin.vscode-sshfs\r\nmechatroner.rainbow-csv\r\nmhutchie.git-graph\r\nmichelemelluso.code-beautifier\r\nms-azuretools.vscode-docker\r\nMS-CEINTL.vscode-language-pack-ja\r\nms-dotnettools.csharp\r\nms-python.python\r\nms-vscode-remote.remote-containers\r\nms-vscode-remote.remote-ssh\r\nms-vscode-remote.remote-ssh-edit\r\nms-vscode-remote.remote-wsl\r\nms-vscode-remote.vscode-remote-extensionpack\r\nms-vscode.cpptools\r\nms-vscode.Go\r\noctref.vetur\r\npmiossec.vscode-gitextensions\r\ns-nlf-fh.glassit\r\nshakram02.bash-beautify\r\nshuworks.vscode-table-formatter\r\nteabyii.ayu\r\ntwxs.cmake\r\nwmaurer.vscode-jumpy\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/49339/32078127-102bbcfe-baa6-11e7-8ab9-b04dcad2035e.png)",
    "pub_date": "2017-02-08T16:18:28.917Z",
    "user": 2,
    "tags": [
      1,
      55
    ]
  }
},
{
  "model": "app.memo",
  "pk": 142,
  "fields": {
    "title": "CMakeLists.txt\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8ffd\u52a0\uff09",
    "content": "# OpenGl ES\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u30d3\u30eb\u30c9\u3057\u305f\u3068\u304d\u306eCMakeLists.txt\r\n\r\n```\r\ncmake_minimum_required(VERSION 2.8)\r\nadd_definitions(\"-Wall -std=c++11\")\r\nset(CMAKE_BUILD_TYPE Debug)\r\nadd_executable(eglsample\r\n    eglsample.cpp\r\n    myegl.cpp\r\n    mygles.cpp\r\n)\r\nfind_package(X11 REQUIRED)\r\nfind_library(EGL_LIBRARY NAMES EGL)\r\nfind_library(GLES2_LIBRARY NAMES GLESv2)\r\ntarget_link_libraries(eglsample\r\n    ${X11_LIBRARIES}\r\n    ${EGL_LIBRARY}\r\n    ${GLES2_LIBRARY}\r\n)\r\n```\r\n\r\ntarget_link_libraries\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6307\u5b9a\u3059\u308b\uff0e\u4f7f\u7528\u53ef\u80fd\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u306f`find_package`\u3092\u4f7f\u3046\uff0e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306a\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306f`find_library`\u3092\u4f7f\u3046\uff0e\r\n\r\n# \u4f7f\u7528\u53ef\u80fd\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e00\u89a7\r\n\r\n```\r\n$ cmake --help-module-list | grep -e '^Find'\r\n```\r\n\r\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8a73\u7d30\r\n\r\n```\r\n$ cmake --help-module FindX11\r\n```",
    "pub_date": "2017-02-10T04:03:34.364Z",
    "user": 2,
    "tags": [
      1,
      8,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 143,
  "fields": {
    "title": "Elixir\u306e\u74b0\u5883\u69cb\u7bc9",
    "content": "# Erlang\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n[https://packages.erlang-solutions.com/erlang/](https://packages.erlang-solutions.com/erlang/)\r\n\r\n```\r\n$ sudo aptitude install libwxbase3.0-0\r\n$ sudo aptitude install libwxgtk3.0-0\r\n$ sudo dpkg -i esl-erlang_19.3-1-debian-jessie_amd64.deb\r\n```\r\n\r\n# Elixir\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ git clone https://github.com/mururu/exenv.git $HOME/.exenv\r\n\r\n$ exec $SHELL -l\r\n$ git clone https://github.com/mururu/elixir-build.git ~/.exenv/plugins/elixir-build\r\n$ echo 'export PATH=\"$HOME/.exenv/bin:$PATH\"' >> ~/.bash_profile\r\n$ echo 'eval \"$(exenv init -)\"' >> ~/.bash_profile\r\n$ exec $SHELL -l\r\n\r\n$ exenv install -list\r\n$ exenv install 1.4.4\r\n$ exenv global 1.4.4\r\n```\r\n\r\n# \u78ba\u8a8d\r\n\r\n```\r\n$ elixir -v\r\n$ iex\r\n```",
    "pub_date": "2017-02-11T05:16:19.528Z",
    "user": 2,
    "tags": [
      1,
      58
    ]
  }
},
{
  "model": "app.memo",
  "pk": 144,
  "fields": {
    "title": "C++\u306e\u30ad\u30e3\u30b9\u30c8",
    "content": "# C++\u306e\u65b0\u3057\u3044\u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50\r\n\r\n```cpp\r\nint hgoe = static_cast<int>(piyo);               // \u4e00\u822c\u7684\u306a\u30ad\u30e3\u30b9\u30c8\r\nint* hoge = const_cast<int*>(piyo);              // const\u3092\u9664\u53bb\u3059\u308b\u30ad\u30e3\u30b9\u30c8\r\nint* hoge = reinterpret_cast<int*>(piyo);        // \u5185\u5bb9\u7121\u8996\u306e\u5f37\u5236\u30ad\u30e3\u30b9\u30c8\r\nMyClass* hoge = dynamic_cast<MyClass*>(piyo);    // \u5b9f\u884c\u6642\u306b\u5224\u65ad\u3059\u308b\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\r\n```\r\n\r\n`reinterpret_cast`\u3092\u3044\u3064\u3082\u5fd8\u308c\u3066\u3057\u307e\u3046\uff0e",
    "pub_date": "2017-02-19T09:14:14.430Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 145,
  "fields": {
    "title": "Google Test\u306e\u4f7f\u3044\u65b9",
    "content": "# Google Test\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ git clone https://github.com/google/googletest.git\r\n$ cd googletest\r\n$ git checkout release-1.8.0\r\n$ cd googletest\r\n$ mkdir build && cd build\r\n$ cmake ..\r\n$ make\r\n$ sudo make install\r\n```\r\n\r\n## Windows\uff08MinGW64 + msys\uff09\u3067\u30d3\u30eb\u30c9\u3059\u308b\u5834\u5408\r\n\r\n\u203bpthread\u95a2\u9023\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u3063\u305f\u306e\u3067\u7121\u52b9\u5316\u3059\u308b\uff0e\r\n\r\n```\r\n> cmake -G \"MSYS Makefiles\" ..\r\n> make CXX_FLAGS=\"-DGTEST_HAS_PTHREAD=0\"\r\n```\r\n\r\n# \u30c6\u30b9\u30c8\u306e\u30d3\u30eb\u30c9\r\n\r\nWindows\u306e\u5834\u5408\u306fgtest\u306einclude\u30d1\u30b9\u3084lib\u30d1\u30b9\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\uff0e\r\n\r\n```\r\n> g++ test.cpp test_target.cpp -I../googletest/googletest/include -I../target -L../googletest/googletest/build -lgtest_main -lgtest -o test\r\n```",
    "pub_date": "2017-02-19T09:46:13.410Z",
    "user": 2,
    "tags": [
      1,
      16,
      37,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 146,
  "fields": {
    "title": "\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3067\u9577\u30441\u884c\u306e\u51e6\u7406\u3092\u6539\u884c",
    "content": "# C\u8a00\u8a9e\u306e\u30de\u30af\u30ed\u3067\u306e\u300c\\\u300d\u307f\u305f\u3044\u306a\u3053\u3068\r\n\r\n\u6539\u884c\u3092\u5165\u308c\u3066\u8907\u6570\u306e\u884c\u306b\u5206\u3051\u308b\u306b\u306f`^`\u3092\u6700\u5f8c\u306b\u4ed8\u3051\u308b\uff0e\r\n\r\n## 1\u884c\u306e\u5834\u5408\r\n\r\n```\r\ncall g++ %test_file% %target_file% -I..\\googletest\\googletest\\include -I..\\target -L..\\googletest\\googletest\\build -lgtest_main -lgtest -otest.exe\r\n```\r\n\r\n## \u8907\u6570\u884c\u306e\u5834\u5408\r\n\r\n```\r\ncall g++ %test_file% %target_file% ^\r\n-I..\\googletest\\googletest\\include ^\r\n-I..\\target ^\r\n-L..\\googletest\\googletest\\build ^\r\n-lgtest_main ^\r\n-lgtest ^\r\n-otest.exe\r\n```",
    "pub_date": "2017-02-20T14:52:19.006Z",
    "user": 2,
    "tags": [
      1,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 147,
  "fields": {
    "title": "CMake\u3067pkg-config\u3092\u4f7f\u3046",
    "content": "# CMake\u3067pkg-config\u3092\u4f7f\u3063\u3066\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u307e\u308f\u308a\u3092\u8a18\u8ff0\r\n\r\n```\r\nfind_package(PkgConfig)\r\n\r\npkg_check_modules(LIBSAMPLE REQUIRED libsample)\r\n\r\ninclude_directories(${LIBSAMPLE_INCLUDE_DIRS})\r\nlink_directories(${LIBSAMPLE_LIBRARY_DIRS})\r\n\r\nadd_executable(sample sample.cpp)\r\ntarget_link_libraries(sample ${LIBSAMPLE_LIBRARIES})\r\n```\r\n\r\n# pkg-config\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4e00\u89a7\u8868\u793a\r\n\r\n```\r\n$ pkg-config --list-all\r\n```",
    "pub_date": "2017-02-21T01:33:41.963Z",
    "user": 2,
    "tags": [
      1,
      8,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 148,
  "fields": {
    "title": "Linux\u306e\u30d5\u30a1\u30a4\u30eb\u5727\u7e2e / \u89e3\u51cd",
    "content": "# tar.gz\r\n\u5727\u7e2e / \u89e3\u51cd\r\n```\r\n$ tar -zcvf xxxx.tar.gz directory\r\n$ tar -zxvf xxxx.tar.gz\r\n```\r\n\r\n# tar.bz2\r\n\u5727\u7e2e / \u89e3\u51cd\r\n```\r\n$ tar -jcvf xxxx.tar.bz2 directory\r\n$ tar -jxvf xxxx.tar.bz2\r\n```\r\n\r\n# tar.xz\r\n\u5727\u7e2e / \u89e3\u51cd\r\n```\r\n$ tar -Jcvf xxxx.tar.xz directory\r\n$ tar -Jxvf xxxx.tar.xz\r\n```\r\n\r\n# tar\r\n\u5727\u7e2e / \u89e3\u51cd\r\n```\r\n$ tar -cvf xxxx.tar directory\r\n$ tar -xvf xxxx.tar\r\n```\r\n\r\n# zip\r\n\u5727\u7e2e / \u89e3\u51cd\r\n```\r\n$ zip -r xxxx.zip directory\r\n$ unzip xxxx.zip\r\n```",
    "pub_date": "2017-02-25T14:55:55.167Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 149,
  "fields": {
    "title": "Git\u306e\u30d1\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u3068\u9069\u7528",
    "content": "# \u30d1\u30c3\u30c1\u306e\u4f5c\u6210\r\n\r\n```\r\n$ git format-patch -o patches fec09ab        # fec09ab \u304b\u3089\u306e HEAD \u307e\u3067\u306e\u30b3\u30df\u30c3\u30c8\r\n$ git format-patch -o patches fec09ab..      # \u540c\u4e0a\r\n$ git format-patch -o patches fec09ab..HEAD  # \u540c\u4e0a\r\n```\r\n\r\n# \u30d1\u30c3\u30c1\u306e\u9069\u7528\r\n\r\n```\r\n$ git am patches/*\r\n```\r\n\r\n# \u30a8\u30e9\u30fc\u304c\u51fa\u305f\u6642\u306e\u53d6\u308a\u6d88\u3057\r\n\r\n```\r\n$ git am --abort\r\n```",
    "pub_date": "2017-02-26T16:09:45.752Z",
    "user": 2,
    "tags": [
      1,
      32
    ]
  }
},
{
  "model": "app.memo",
  "pk": 150,
  "fields": {
    "title": "OneDrive\u306e\u30c1\u30a7\u30c3\u30af\u30a2\u30a4\u30b3\u30f3",
    "content": "# \u30a2\u30a4\u30b3\u30f3\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\u306e\u8a2d\u5b9a\r\n\r\nWindows\u306e\u30a2\u30a4\u30b3\u30f3\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\u306f\u300e15\u300f\u304c\u4e0a\u9650\u3089\u3057\u3044\uff0e\u4e0b\u8a18\u306e\u30ec\u30b8\u30b9\u30c8\u30ea\u3092\u78ba\u8a8d / \u4fee\u6b63\uff0e\r\n\r\n```\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers\r\n```\r\n\r\n\u203b \u4e26\u3073\u9806\u306b\u512a\u5148\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\uff0c\u512a\u5148\u3055\u305b\u305f\u3044\u30ad\u30fc\u306e\u540d\u524d\u306e\u5148\u982d\u306b\u30b9\u30da\u30fc\u30b9\u3092\u5165\u308c\u308b\u3068\u6b21\u56de\u8d77\u52d5\u6642\u306b\u30bd\u30fc\u30c8\u3055\u308c\u3066\u512a\u5148\u3055\u308c\u308b\uff0e",
    "pub_date": "2017-02-27T00:42:57.354Z",
    "user": 2,
    "tags": [
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 151,
  "fields": {
    "title": "\u30b3\u30e1\u30f3\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8",
    "content": "# \u30b3\u30e1\u30f3\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u610f\u5473\r\n\r\n* XXX: \u305d\u306e\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u304c\u6b63\u3057\u304f\u306a\u3044\u304c\u591a\u304f\u306e\u5834\u5408\u52d5\u3044\u3066\u3057\u307e\u3046\r\n* FIXME: \u30b3\u30fc\u30c9\u304c\u9593\u9055\u3063\u3066\u3044\u3066\u4fee\u6b63\u3092\u8981\u3059\u308b\r\n* TODO: \u5c06\u6765\u5f37\u5316\u3059\u3079\u304d\u7b87\u6240\u306e\u8868\u793a",
    "pub_date": "2017-03-03T03:58:54.731Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 152,
  "fields": {
    "title": "C++11\u306e\u751f\u6587\u5b57\u30ea\u30c6\u30e9\u30eb",
    "content": "# \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\r\n\r\n`R`\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u5185\u3067\u4e38\u30ab\u30c3\u30b3( )\u3067\u56f2\u3080\uff0e\r\n\r\n```cpp\r\n// \u901a\u5e38\r\nstd::string json = \"{\\\"user_id\\\": 123, \\\"name\\\": \\\"Alice\\\"}\";\r\n// \u751f\u6587\u5b57\u30ea\u30c6\u30e9\u30eb\r\nstd::string json = R\"({\"user_id\": 123, \"name\": \"Alice\"})\";\r\n```\r\n\r\n# \u6539\u884c\u3082OK\r\n\r\n```cpp\r\nstd::string text = R\"(begin\r\na,\r\nb,\r\nc\r\nend)\";\r\n```\r\n\r\n# \u7bc4\u56f2\u3092\u6307\u5b9a\u3059\u308b\u4e38\u30ab\u30c3\u30b3( )\u3092\u30e6\u30fc\u30b6\u6307\u5b9a\u5f62\u5f0f\u306b\r\n\r\n\u6587\u5b57\u306e\u4e2d\u306b\u4e38\u30ab\u30c3\u30b3( )\u304c\u4f7f\u3048\u308b\uff0e\r\n\r\n```cpp\r\nstd::string text = R\"***\"(\u6587\u5b57\u5217\u4e2d\u306b\u751f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u9589\u3058\u30ab\u30c3\u30b3\u3068\u9589\u3058\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u66f8\u304f)\")***\";\r\n```",
    "pub_date": "2017-03-03T04:07:51.323Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 153,
  "fields": {
    "title": "C++\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf",
    "content": "# C++\u306e\u5404\u7a2e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\r\n\r\n```cpp\r\nclass X\r\n{\r\npublic:\r\n    X() {}\r\n    ~X() = default;\r\n\r\nprivate:\r\n    X(const X&) = delete;\r\n    X(X&&) = delete;\r\n    X& operator=(const X&) = delete;\r\n    X& operator=(X&&) = delete;\r\n};\r\n```",
    "pub_date": "2017-03-03T09:37:06.599Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 154,
  "fields": {
    "title": "Python\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3067functools.wraps()\u3092\u4f7f\u3046\u7406\u7531",
    "content": "# \u4f7f\u308f\u306a\u304b\u3063\u305f\u5834\u5408\r\n\r\n```py\r\ndef my_decorator(f):\r\n    def wrapper(*args, **kwds):\r\n        print('deco!!')\r\n        return f(*args, **kwds)\r\n    return wrapper\r\n\r\n@my_decorator\r\ndef spam():\r\n    '''spam doc.'''\r\n    print('spam!!')\r\n\r\nif __name__ == '__main__':\r\n    spam()\r\n    print(spam.__name__)\r\n    print(spam.__doc__)\r\n```\r\n\r\n\u7d50\u679c\uff0cspam\u306e\u60c5\u5831\u304c\u5931\u308f\u308c\u3066\u3044\u308b\uff0e\r\n\r\n```\r\ndeco!!\r\nspam!!\r\nwrapper\r\nNone\r\n```\r\n\r\n# functools.wraps()\u3092\u4f7f\u3063\u305f\u5834\u5408\r\n\r\n```py\r\ndef my_decorator(f):\r\n    import functools\r\n    @functools.wraps(f)\r\n    def wrapper(*args, **kwds):\r\n        print('deco!!')\r\n        return f(*args, **kwds)\r\n    return wrapper\r\n\r\n@my_decorator\r\ndef spam():\r\n    '''spam doc.'''\r\n    print('spam!!')\r\n\r\nif __name__ == '__main__':\r\n    spam()\r\n    print(spam.__name__)\r\n    print(spam.__doc__)\r\n```\r\n\r\n\u7d50\u679c\uff0c\u671f\u5f85\u901a\u308a\u306b\u52d5\u304f\uff0e\r\n\r\n```\r\ndeco!!\r\nspam!!\r\nspam\r\nspam doc.\r\n```\r\n\r\n\u5b9f\u969b\u7684\u306b\u306f\uff0c`help()`\u3068\u304b`doctest`\u3068\u304b\u3067\u554f\u984c\u306b\u308a\u305d\u3046\uff0e",
    "pub_date": "2017-03-05T00:47:10.075Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 155,
  "fields": {
    "title": "Python\u306edoctest\u306e\u4f7f\u3044\u65b9",
    "content": "# docstring\u306b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u3044\u3066\u5b9f\u884c\r\n\r\n\u5bfe\u8a71\u74b0\u5883\u3067\u5b9f\u884c\u3057\u305f\u3068\u304d\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u8a18\u8ff0\u3059\u308b\uff0e\r\n\r\n```py\r\ndef fizz_buzz(n):\r\n    '''\r\n    FizzBuzz\u3067\u3059\r\n\r\n    >>> from spam import fizz_buzz\r\n    >>> fizz_buzz(1)\r\n    1\r\n    >>> fizz_buzz(3)\r\n    Fizz\r\n    >>> fizz_buzz(5)\r\n    Buzz\r\n    >>> fizz_buzz(15)\r\n    FizzBuzz\r\n    '''\r\n\r\n    if n % 3 == 0 and n % 5 == 0:\r\n        print('FizzBuzz')\r\n    elif n % 3 == 0:\r\n        print('Fizz')\r\n    elif n % 5 == 0:\r\n        print('Buzz')\r\n    else:\r\n        print(n)\r\n\r\nif __name__ == '__main__':\r\n    import doctest\r\n    doctest.testmod()\r\n```\r\n\r\n\u5b9f\u884c\u3057\u3059\u308b\u3068\u554f\u984c\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u51fa\u529b\u3055\u308c\u306a\u3044\uff0eFail\u304c\u3042\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\uff0e\r\n\r\n```\r\n**********************************************************************\r\nFile \"spam.py\", line 8, in __main__.fizz_buzz\r\nFailed example:\r\n    fizz_buzz(3)\r\nExpected:\r\n    Fizz\r\nGot:\r\n    Fiz\r\n**********************************************************************\r\n1 items had failures:\r\n   1 of   5 in __main__.fizz_buzz\r\n***Test Failed*** 1 failures.\r\n```\r\n\r\nPass\u3057\u3066\u3044\u3066\u3082\u51fa\u529b\u3059\u308b\u5834\u5408\u306f`-v`\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5b9f\u884c\uff0e\r\n\r\n```\r\n> python spam.py -v\r\n```\r\n\r\n\u51fa\u529b\u5185\u5bb9\r\n\r\n```\r\nTrying:\r\n    from spam import fizz_buzz\r\nExpecting nothing\r\nok\r\nTrying:\r\n    fizz_buzz(1)\r\nExpecting:\r\n    1\r\nok\r\nTrying:\r\n    fizz_buzz(3)\r\nExpecting:\r\n    Fizz\r\nok\r\nTrying:\r\n    fizz_buzz(5)\r\nExpecting:\r\n    Buzz\r\nok\r\nTrying:\r\n    fizz_buzz(15)\r\nExpecting:\r\n    FizzBuzz\r\nok\r\n1 items had no tests:\r\n    __main__\r\n1 items passed all tests:\r\n   5 tests in __main__.fizz_buzz\r\n5 tests in 2 items.\r\n5 passed and 0 failed.\r\nTest passed.\r\n```",
    "pub_date": "2017-03-05T01:07:08.868Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 156,
  "fields": {
    "title": "\u30ed\u30b0\u306e\u8868\u793a\u3092\u6d88\u3059\u65b9\u6cd5",
    "content": "# \u30ed\u30b0\u306e\u8868\u793a\u3092\u6d88\u3059\u65b9\u6cd5\r\n\r\n```\r\n$ ./sample > /dev/null 2>&1\r\n```\r\n`2>&1`\u3067\u30a8\u30e9\u30fc\u51fa\u529b\u3092\u6a19\u6e96\u51fa\u529b\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u3044\u308b\uff0e\u3053\u308c\u3067\u30a8\u30e9\u30fc\u30ed\u30b0\u3082\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308b\uff0e\uff08\u53f3\u5074\u306b\u66f8\u304f\u306e\u304c\u30dd\u30a4\u30f3\u30c8\uff09",
    "pub_date": "2017-03-06T09:07:19.386Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 157,
  "fields": {
    "title": "Python\u306e\u30d7\u30ed\u30d1\u30c6\u30a3",
    "content": "# \u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u305f\u4e00\u822c\u7684\u306a\u66f8\u304d\u65b9\r\n\r\n`@property`\u3067getter\u3092\u4f5c\u3063\u3066\uff0c\u8ffd\u52a0\u3067setter\u3068deleter\u3092\u5b9a\u7fa9\u3067\u304d\u308b\uff0e\r\n\r\n```py\r\nclass Spam:\r\n    def __init__(self, x):\r\n        self.__x = x\r\n\r\n    @property\r\n    def x(self):\r\n        return self.__x\r\n\r\n    @x.setter\r\n    def x(self, value):\r\n        self.__x = value\r\n\r\n    @x.deleter\r\n    def x(self):\r\n        del self.__x\r\n\r\ndef main():\r\n    spam = Spam(42)\r\n    print(spam.x)\r\n\r\n    spam.x = 23\r\n    print(spam.x)\r\n\r\n    del spam.x\r\n    print(spam.x)   # AttributeError: 'Spam' object has no attribute '_Spam__x'\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
    "pub_date": "2017-03-11T08:09:57.308Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 158,
  "fields": {
    "title": "Python\u3067\u30e1\u30e2\u5316",
    "content": "# \u30c7\u30b3\u30ec\u30fc\u30bflru_cache\u306b\u3088\u308b\u30e1\u30e2\u5316\u518d\u5e30\r\n\r\nmaxsize\u306b\u306f\u76f4\u8fd1\u306e\u4f55\u56de\u5206\u3092\u8a18\u61b6\u3057\u3066\u304a\u304f\u304b\u3092\u6307\u5b9a\u3059\u308b\r\n\r\n```py\r\nfrom functools import lru_cache\r\n\r\n@lru_cache(maxsize = None)\r\ndef fibo(n):\r\n    if n <= 0:\r\n        return 0\r\n    elif n == 1:\r\n        return 1\r\n    else:\r\n        return fibo(n - 1) + fibo(n - 2)\r\n\r\nif __name__== '__main__':\r\n    from datetime import datetime as dt\r\n    start = dt.now()\r\n    print('*** {0} : {1} ***'.format(fibo(35), dt.now() - start))\r\n```\r\n\r\n\u7d50\u679c\r\n\r\n```\r\n*** 9227465 : 0:00:00 ***           # \u30e1\u30e2\u5316\u6709\u52b9\u6642\r\n*** 9227465 : 0:00:03.859904 ***    # \u30e1\u30e2\u5316\u7121\u52b9\u6642\r\n```\r\n\r\n\u203b\u526f\u4f5c\u7528\u306e\u3042\u308b\u95a2\u6570\u3092\u8003\u616e\u305b\u305a\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u306e\u3067\u6ce8\u610f",
    "pub_date": "2017-03-11T13:32:16.785Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 159,
  "fields": {
    "title": "MinGW (64bit) + MSYS \u74b0\u5883\u306e\u69cb\u7bc9",
    "content": "# MinGW-w64 - for 32 and 64 bit Windows\r\n\r\n[https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/](https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/)\r\n\r\n# MSYS\r\n\r\n[https://sourceforge.net/projects/mingwbuilds/files/external-binary-packages/](https://sourceforge.net/projects/mingwbuilds/files/external-binary-packages/)\r\n\r\n# \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\r\n\r\n1. MinGW\u3092\u5c55\u958b\uff0e`C:\\mingw64`\r\n1. MSYS\u3092\u5c55\u958b\uff0e`C:\\mingw64\\msys`\r\n1. `C:\\mingw64\\msys\\etc\\fstab.sample`\u3092`fstab`\u306e\u540d\u524d\u3067\u30b3\u30d4\u30fc  \u3057\u3066\u4ee5\u4e0b\u3092\u4fee\u6b63\uff0e\r\n    * \u30d1\u30b9\u3092\u4fee\u6b63\uff0e`c:/mingw64    /mingw`\r\n    * \u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\uff0e`c:/ActiveState/perl    /perl`\r\n1. \u74b0\u5883\u5909\u6570path\u3092\u8a2d\u5b9a\uff0e\r\n`C:\\mingw64\\bin`\u3068`C:\\mingw64\\msys\\bin`",
    "pub_date": "2017-03-18T18:53:40.065Z",
    "user": 2,
    "tags": [
      1,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 160,
  "fields": {
    "title": "Linux\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1",
    "content": "# screen\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ sudo aptitude install screen\r\n```\r\n\r\n# screen\u306e\u4f7f\u7528\u65b9\u6cd5\r\n\r\n* parenb/-parenb  \r\n\u30d1\u30ea\u30c6\u30a3\u30d3\u30c3\u30c8\u3042\u308a/\u306a\u3057\r\n* parodd/-parodd  \r\n\u30d1\u30ea\u30c6\u30a3\u30d3\u30c3\u30c8ODD/EVEN\r\n* cs<\u6570\u5b57>  \r\n\u6587\u5b57\u30b5\u30a4\u30ba\r\n* cstopb/-cstopb  \r\n\u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c82\u30d3\u30c3\u30c8/1\u30d3\u30c3\u30c8\r\n\r\n```\r\n$ screen /dev/ttyS1 115200,cs8,-parenb,-cstopb\r\n```",
    "pub_date": "2017-03-23T02:49:31.883Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 161,
  "fields": {
    "title": "GNOME 3\u306e\u304a\u3059\u3059\u3081\u30c6\u30fc\u30de",
    "content": "# Arc Theme\r\n\r\n[https://github.com/horst3180/arc-theme](https://github.com/horst3180/arc-theme)\r\n\r\n![image](https://camo.githubusercontent.com/ec3edb8af6e682676cef3ae8f71da60f70a72819/687474703a2f2f692e696d6775722e636f6d2f4e43366471796c2e706e67)\r\n\r\n\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8`gtk2-engines-murrine`\u3092\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\uff0e\r\n\r\n```\r\n$ sudo aptitude install gtk2-engines-murrine\r\n$ sudo sudo dpkg -i arc-theme_1488477732.766ae1a-0_all.deb\r\n```",
    "pub_date": "2017-03-27T00:23:07.747Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 162,
  "fields": {
    "title": "settings.py\u306e\u5b9a\u6570\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5",
    "content": "# settings.py\u306b\u5b9a\u6570\u3092\u5b9a\u7fa9\u3059\u308b\r\n\r\n```\r\nSPAM_TEXT = 'spam text'\r\n```\r\n\r\n# python\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\r\n\r\n```\r\nfrom django.conf import settings\r\nspam = settings.SPAM_TEXT\r\n```\r\n\r\n# settings.py\u306e\u5b9a\u6570\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u4f7f\u7528\u3059\u308b\r\n\r\ncontext_processors.py\u3092\u4f5c\u6210\r\n\r\n```py\r\nfrom django.conf import settings\r\n\r\ndef enabled_social_auth(request):\r\n    return {'SPAM_TEXT': settings.SPAM_TEXT}\r\n```\r\n\r\nsettings.py\u306bcontext_processors\u3092\u8a18\u8ff0\r\n\r\n```\r\nTEMPLATES = [\r\n    {\r\n        \uff1a\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                \uff1a\r\n                'mondja.context_processors.enabled_social_auth',\r\n                \uff1a\r\n            ],\r\n        },\r\n    },\r\n]\r\n```\r\n\r\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3067\u4f7f\u7528\r\n\r\n```\r\n{% if ENABLED_SOCIAL_AUTH %}\r\n    \uff1a\r\n{% endif %}\r\n```",
    "pub_date": "2017-04-02T03:20:50.213Z",
    "user": 2,
    "tags": [
      1,
      2,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 163,
  "fields": {
    "title": "Deep\u30b3\u30d4\u30fc\u3059\u308b\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9",
    "content": "# Deep\u30b3\u30d4\u30fc\u3059\u308b\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\uff08\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\uff09\r\n\r\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30b9\u3067\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u304c\u66f8\u3051\u308b\u306e\u3067\u3001\u660e\u793a\u7684\u306b\u7d99\u627f\u3057\u306a\u304f\u3066\u3082\u81ea\u52d5\u3067Mix-in\u7684\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3002\r\n\r\n```cs\r\nstatic class MyExtension\r\n{\r\n    public static Type DeepClone<Type>(this Type self)\r\n    {\r\n        using (var ms = new System.IO.MemoryStream())\r\n        {\r\n            var bf = new System.Runtime.Serialization.Formatters.Binary.BinaryFormatter();\r\n            bf.Serialize(ms, self);\r\n            ms.Seek(0, System.IO.SeekOrigin.Begin);\r\n            return (Type)bf.Deserialize(ms);\r\n        }\r\n    }\r\n}\r\n```",
    "pub_date": "2017-05-25T07:01:08.559Z",
    "user": 2,
    "tags": [
      1,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 164,
  "fields": {
    "title": "Django\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8",
    "content": "`settings.py`\u3067`SESSION_COOKIE_AGE`\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\uff0e\r\n\r\n[https://docs.djangoproject.com/en/1.10/ref/settings/#std:setting-SESSION_COOKIE_AGE](https://docs.djangoproject.com/en/1.10/ref/settings/#std:setting-SESSION_COOKIE_AGE)\r\n\r\n```\r\nSESSION_COOKIE_AGE = 3600  # on hour in seconds\r\n```\r\n\r\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024: 1209600 (2 \u9031\u9593\u306e\u79d2\u8868\u8a18)",
    "pub_date": "2017-05-27T00:39:44.915Z",
    "user": 2,
    "tags": [
      1,
      2,
      48
    ]
  }
},
{
  "model": "app.memo",
  "pk": 165,
  "fields": {
    "title": "VSCode\u3067\u306eC++\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u65b9\u6cd5",
    "content": "# tasks.json\u306e\u8a2d\u5b9a\u5185\u5bb9\r\n\r\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u306b`build`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u7528\u610f\u3057\u3066\uff0c\u305d\u3053\u306b`Makefile`\u3092\u914d\u7f6e\u3057\u3066\u3044\u308b\u5834\u5408\uff0e\r\n\r\n```\r\n{\r\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\r\n    // for the documentation about the tasks.json format\r\n    \"version\": \"0.1.0\",\r\n    \"command\": \"make\",\r\n    \"isShellCommand\": true,\r\n    \"args\": [\r\n        \"-C./build\",\r\n        \"-j4\"\r\n    ],\r\n    \"showOutput\": \"always\",\r\n    \"problemMatcher\": {\r\n        \"owner\": \"cpp\",\r\n        \"fileLocation\": [\r\n            \"absolute\"\r\n        ],\r\n        \"pattern\": {\r\n            \"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\",\r\n            \"file\": 1,\r\n            \"line\": 2,\r\n            \"column\": 3,\r\n            \"severity\": 4,\r\n            \"message\": 5\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# \u8907\u6570\u306e\u30bf\u30b9\u30af\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\r\n\r\n`tasks`\u306e\u4e2d\u306b`taskName`\u3092\u6307\u5b9a\u3057\u3066\u5b9a\u7fa9\u3059\u308b\uff0e\r\n\r\n```\r\n{\r\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\r\n    // for the documentation about the tasks.json format\r\n    \"version\": \"0.1.0\",\r\n    \"tasks\": [\r\n        {\r\n            \"taskName\": \"build\",\r\n            \"command\": \"make\",\r\n            \"isShellCommand\": true,\r\n            \"args\": [\r\n                \"-C./build\",\r\n                \"-j4\"\r\n            ],\r\n            \"showOutput\": \"always\",\r\n            \"problemMatcher\": {\r\n                \"owner\": \"cpp\",\r\n                \"fileLocation\": [\r\n                    \"absolute\"\r\n                ],\r\n                \"pattern\": {\r\n                    \"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\",\r\n                    \"file\": 1,\r\n                    \"line\": 2,\r\n                    \"column\": 3,\r\n                    \"severity\": 4,\r\n                    \"message\": 5\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"taskName\": \"clean\",\r\n            \"command\": \"make\",\r\n            \"isShellCommand\": true,\r\n            \"args\": [\r\n                \"clean\",\r\n                \"-C./build\"\r\n            ],\r\n            \"showOutput\": \"always\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n# \u30d3\u30eb\u30c9\u51fa\u529b\u304c\u76f8\u5bfe\u30d1\u30b9\u306e\u5834\u5408\r\n\r\n`fileLocation`\u3092\u76f8\u5bfe\u30d1\u30b9\u3067\u8a2d\u5b9a\u3059\u308b\uff0e\r\n\r\n```\r\n\"fileLocation\": [\r\n    \"relative\",\r\n    \"${workspaceRoot}\"\r\n],\r\n```",
    "pub_date": "2017-05-27T03:00:54.324Z",
    "user": 2,
    "tags": [
      1,
      8,
      16,
      55
    ]
  }
},
{
  "model": "app.memo",
  "pk": 166,
  "fields": {
    "title": "Python \u3067\u4e26\u884c\u51e6\u7406\uff08\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9 / \u30de\u30eb\u30c1\u30b3\u30a2\uff09",
    "content": "# \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\r\n\r\nPython\u306ethread\u306f\u30b7\u30f3\u30b0\u30eb\u30b3\u30a2\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u306e\u3067CPU\u8ca0\u8377\u306f\u4e0a\u304c\u3089\u306a\u3044\r\n\r\n```py\r\nimport threading\r\n\r\ndef foo():\r\n    while True:\r\n        pass\r\n\r\ndef main():\r\n    threads = []\r\n    for _ in range(4):\r\n        th = threading.Thread(target=foo, daemon=True)\r\n        th.start()\r\n        threads += [th]\r\n    for th in threads:\r\n        th.join()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n# \u30de\u30eb\u30c1\u30b3\u30a2\r\n\r\nPool\u3092\u4f7f\u3046\u3068\u8907\u6570\u30d7\u30ed\u30bb\u30b9\u3092\u7acb\u3061\u4e0a\u3052\u30de\u30eb\u30c1\u30b3\u30a2\u3067\u52d5\u304f\uff0epool.Pool\u306e\u5f15\u6570\u304c\u6700\u5927\u30d7\u30ed\u30bb\u30b9\u6570\u306e\u6307\u5b9a\r\n\r\n```py\r\nfrom multiprocessing import pool\r\n\r\ndef foo(n):\r\n    while True:\r\n        pass\r\n\r\ndef main():\r\n    p = pool.Pool(4)\r\n    p.map(foo, range(4))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
    "pub_date": "2017-06-11T13:33:47.440Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 167,
  "fields": {
    "title": ".NET Core\u3067C#\u3092\u30d3\u30eb\u30c9",
    "content": "# 1. Install .NET SDK\r\n\r\n[https://www.microsoft.com/net/core#windowscmd](https://www.microsoft.com/net/core#windowscmd)\r\n\r\n# 2. Initialize some code\r\n\r\n```\r\n> dotnet new console -o samplecs\r\n> cd samplecs\r\n```\r\n\r\n```cs\r\nusing System;\r\n\r\nnamespace samplecs\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# 3. Run the app\r\n\r\n```\r\n> dotnet restore\r\n> dotnet run\r\n> dotnet run --configuration Release    # \u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\r\n```",
    "pub_date": "2017-08-11T16:35:06.403Z",
    "user": 2,
    "tags": [
      1,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 168,
  "fields": {
    "title": "Heroku\u306e\u30a2\u30d7\u30ea\u3092\u5e38\u6642\u8d77\u52d5",
    "content": "# Heroku\u3067\u306e\u5e38\u6642\u8d77\u52d5\u65b9\u6cd5\r\n\r\n\u901a\u5e38\u306fHeroku\u306e\u30a2\u30c9\u30aa\u30f3\u306eHeroku Scheduler\u3067\u5bfe\u5fdc\u53ef\u80fd\u3060\u304c\uff0c\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\u306e\u767b\u9332\u304c\u5fc5\u8981\u306a\u306e\u3067\u5225\u65b9\u6cd5\u3067\u5b9f\u73fe\uff0e\r\n\r\n\u4ee3\u66ff\u306e\u624b\u6bb5\u3068\u3057\u3066APScheduler\u3092\u4f7f\u3063\u3066\u5bfe\u5fdc\u3059\u308b\uff0e\r\n\r\n[https://devcenter.heroku.com/articles/clock-processes-python](https://devcenter.heroku.com/articles/clock-processes-python)\r\n\r\n# HTTP\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b5\u30f3\u30d7\u30eb\r\n\r\nPython\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n\r\n```py\r\nimport urllib.request\r\nurllib.request.urlopen('https://mondja.herokuapp.com')\r\n```\r\n\r\n# Heroku\u306e\u8d77\u52d5\u6642\u9593\r\n\r\nHeroku\u306e\u6b8b\u308a\u7121\u6599\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6642\u9593\u306f\u3053\u3061\u3089\u3067\u78ba\u8a8d\u53ef\u80fd\uff0e\r\n\r\n[https://dashboard.heroku.com/account/billing](https://dashboard.heroku.com/account/billing)",
    "pub_date": "2017-08-16T05:50:01.814Z",
    "user": 2,
    "tags": [
      1,
      2,
      33
    ]
  }
},
{
  "model": "app.memo",
  "pk": 169,
  "fields": {
    "title": "Python\u306e\u4f8b\u5916\u3067stack trace\u3092\u8868\u793a\u3059\u308b",
    "content": "# traceback\u3092\u4f7f\u3063\u3066\u8868\u793a\r\n\r\n```py\r\ntry:\r\n    x = 1 / 0\r\nexcept:\r\n    import traceback\r\n    traceback.print_exc()\r\n```\r\n\r\n## \u51fa\u529b\u7d50\u679c\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"Main.py\", line 2, in <module>\r\n    x = 1 / 0\r\nZeroDivisionError: division by zero\r\n```",
    "pub_date": "2017-08-18T11:47:44.303Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 170,
  "fields": {
    "title": "Jupyter\u3092\u30ea\u30e2\u30fc\u30c8\u304b\u3089\u4f7f\u3046\u65b9\u6cd5",
    "content": "# 1. notebook_config.py\u306e\u751f\u6210\r\n\r\n\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\r\n\r\n```\r\n$ jupyter notebook --generate-config\r\n```\r\n\r\n`~/.jupyter/jupyter_notebook_config.py`\u304c\u751f\u6210\u3055\u308c\u308b\r\n\r\n# 2. \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u751f\u6210\r\n\r\nipython\u304b\u3089\u4e0b\u8a18\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\r\n\r\n```\r\nIn [1]: from IPython.lib import passwd\r\nIn [2]: passwd()\r\n```\r\n\r\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u51fa\u529b\u3055\u308c\u305f\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u30b3\u30d4\u30fc\u3059\u308b\r\n\r\n# 3. jupyter_notebook_config.py\u3092\u66f4\u65b0\r\n\r\n\u30d5\u30a1\u30a4\u30eb\u306e\u672b\u5c3e\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\r\n\r\n```\r\nc.IPKernelApp.pylab = 'inline'\r\nc.NotebookApp.ip = '*'\r\nc.NotebookApp.open_browser = False\r\nc.NotebookApp.port = 9999\r\nc.NotebookApp.password = 'sha1:XXXXXXX\uff08#\u5148\u307b\u3069\u4fdd\u5b58\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8a18\u8f09\uff09'\r\n```\r\n\r\n# 4. \u8d77\u52d5\r\n\r\nJupyter notebook\u3092\u8d77\u52d5\r\n\r\n```\r\n$ jupyter notebook\r\n```\r\n\r\n# 5. \u30a2\u30af\u30bb\u30b9\r\n\r\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089`http://<jupyter\u5b9f\u884c\u30db\u30b9\u30c8\u306eIP Address>:9999`\u306b\u30a2\u30af\u30bb\u30b9",
    "pub_date": "2017-08-19T03:13:33.960Z",
    "user": 2,
    "tags": [
      1,
      2,
      59
    ]
  }
},
{
  "model": "app.memo",
  "pk": 171,
  "fields": {
    "title": "make\u5b9f\u884c\u6642\u306e\u8a73\u7d30\u8868\u793a",
    "content": "# CMake\u3067\u751f\u6210\u3057\u305fMakefile\u306e\u8a73\u7d30\u8868\u793a\r\n\r\n```\r\n$ make VERBOSE=1\r\n```\r\n\r\n\u5fd8\u308c\u305f\u3089Makefile\u306e\u4e2d\u3067\u6b21\u306e\u8a18\u8ff0\u3092\u78ba\u8a8d\uff0e\r\n\r\n```\r\n# Suppress display of executed commands.\r\n$(VERBOSE).SILENT:\r\n```",
    "pub_date": "2017-08-27T01:25:17.412Z",
    "user": 2,
    "tags": [
      1,
      8,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 172,
  "fields": {
    "title": "VMware\u306e\u4e00\u89a7\u304b\u3089\u524a\u9664",
    "content": "# ini\u30d5\u30a1\u30a4\u30eb\u3092\u76f4\u63a5\u4fee\u6b63\r\n\r\n\u6d88\u305b\u306a\u3044\u5834\u5408\u306f\uff0c`C:\\Users\\username\\AppData\\Roaming\\VMware\\preferences.ini`\u304b\u3089\u524a\u9664\u3059\u308c\u3070OK\uff0e\r\n\r\n```\r\npref.mruVM0.filename = \"C:\\VMware\\Debian9.x64bit\\Debian 9.x 64 \u30d3\u30c3\u30c8.vmx\"\r\npref.mruVM0.displayName = \"Debian 9.x 64 \u30d3\u30c3\u30c8\"\r\npref.mruVM0.index = \"0\"\r\n```",
    "pub_date": "2017-08-28T06:20:22.762Z",
    "user": 2,
    "tags": [
      1,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 173,
  "fields": {
    "title": "LD_PRELOAD\u3067\u65e2\u5b58\u306e\u95a2\u6570\u3092\u30e9\u30c3\u30d7",
    "content": "# \u30e9\u30c3\u30d7\u5bfe\u8c61\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\r\n\r\n\u30b3\u30fc\u30c9\uff08print.c\uff09\r\n```cpp\r\n#include <stdio.h>\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n    puts(\"hoge\");\r\n    return 0;\r\n}\r\n```\r\n\r\n\u5b9f\u884c\u7d50\u679c\r\n```\r\n$ gcc print.c \r\n$ ./a.out \r\nhoge\r\n```\r\n\r\n# \u30e9\u30c3\u30d7\u95a2\u6570\r\n\r\n\u30b3\u30fc\u30c9\uff08override.c\uff09\r\n```cpp\r\n#include <stdio.h>\r\n#include <assert.h>\r\n#define __USE_GNU\r\n#include <dlfcn.h>\r\n\r\nint puts(const char *__s)\r\n{\r\n    fprintf(stdout, \"before\\n\");\r\n\r\n    void *handle = dlsym(RTLD_NEXT, \"puts\");\r\n    assert(handle);\r\n    int (*func)(const char *) = (int (*)(const char*))handle;\r\n    int ret = func(__s);\r\n\r\n    fprintf(stdout, \"after\\n\");\r\n\r\n    return ret;\r\n}\r\n```\r\n\r\n\u5b9f\u884c\u7d50\u679c\r\n```\r\n$ gcc -shared -fPIC override.c -ldl -o liboverride.so\r\n$ LD_PRELOAD=./liboverride.so ./a.out \r\nbefore\r\nhoge\r\nafter\r\n```\r\n\r\n\u203b\u8a73\u7d30\u306fBINARY HACKS\u306e\u300c#61 LD_PRELOAD \u3067\u65e2\u5b58\u306e\u95a2\u6570\u3092\u30e9\u30c3\u30d7\u3059\u308b\u300d",
    "pub_date": "2017-08-29T00:46:20.979Z",
    "user": 2,
    "tags": [
      1,
      8,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 174,
  "fields": {
    "title": "Jupyter\u306e\u30c6\u30fc\u30de\u3092\u5909\u66f4",
    "content": "# jupyterthemes\u3067\u30c6\u30fc\u30de\u3092\u5909\u66f4\r\n\r\n```\r\n$ pip install jupyterthemes    # \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n$ jt -l                        # \u30c6\u30fc\u30de\u306e\u4e00\u89a7\u3092\u8868\u793a\r\nAvailable Themes:\r\n   chesterish\r\n   grade3\r\n   monokai\r\n   oceans16\r\n   onedork\r\n   solarizedd\r\n   solarizedl\r\n$ jt -t onedork -T             # \u30c6\u30fc\u30de\u3092\u9069\u7528\uff0e-T\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u306e\u8868\u793a\r\n$ jt -r                        # \u9069\u7528\u3057\u305f\u30c6\u30fc\u30de\u3092\u623b\u3059\r\n```\r\n\r\n![image](https://github.com/dunovank/jupyter-themes/raw/master/screens/onedork_code_headers.png)",
    "pub_date": "2017-08-29T04:22:48.354Z",
    "user": 2,
    "tags": [
      1,
      2,
      59
    ]
  }
},
{
  "model": "app.memo",
  "pk": 175,
  "fields": {
    "title": "VSCode\u304b\u3089ssh\u7d4c\u7531\u3067\u30ea\u30e2\u30fc\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6",
    "content": "# \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n`Remote VSCode`\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\next install remote-vscode\r\n```\r\n\r\n# VSCode\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\r\n\r\n```\r\nRemote: Start server\r\n```\r\n\r\n\u8d77\u52d5\u3059\u308b\u3068\u53f3\u4e0b\u306b\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\r\n\r\n# SSH\u63a5\u7d9a\r\n\r\n```\r\n$ ssh -R 52698:127.0.0.1:52698 <\u30ea\u30e2\u30fc\u30c8\u30e6\u30fc\u30b6>@<\u30ea\u30e2\u30fc\u30c8IP\u30a2\u30c9\u30ec\u30b9>\r\n```\r\n\r\n`52698`\u306fsettings.json\u306e`remote.port`\u306e\u8a2d\u5b9a\u5185\u5bb9\r\n\r\n# rmate\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\nssh\u3067\u306e\u63a5\u7d9a\u5148\u3067rmate\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```\r\n$ sudo wget -O /usr/local/bin/rmate https://raw.github.com/aurora/rmate/master/rmate\r\n$ sudo chmod a+x /usr/local/bin/rmate\r\n```\r\n\r\n# \u30d5\u30a1\u30a4\u30eb\u7de8\u96c6\r\n\r\n```\r\n$ rmate -p 52698 \u30d5\u30a1\u30a4\u30eb\u540d\r\n```\r\n\r\n\u30ed\u30fc\u30ab\u30eb\u306eVSCode\u3067\u30d5\u30a1\u30a4\u30eb\u304c\u958b\u3044\u3066\u7de8\u96c6\u3067\u304d\u308b",
    "pub_date": "2017-09-04T00:50:41.772Z",
    "user": 2,
    "tags": [
      1,
      55
    ]
  }
},
{
  "model": "app.memo",
  "pk": 176,
  "fields": {
    "title": "GitHub\u306eIdenticon",
    "content": "# GitHub\u306eIdenticon\u306e\u53d6\u5f97\u65b9\u6cd5\r\n\r\nGitHub\u306e\u8a2d\u5b9a\u753b\u9762\u304b\u3089\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u753b\u50cf\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3057\u307e\u3046\u3068\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u306eIdenticon\u306b\u623b\u305b\u306a\u3044\uff0e\r\n\u305f\u3060\u3057\uff0c\u4ee5\u4e0b\u306eURL\u304b\u3089\u3044\u3064\u3067\u3082\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\r\n\r\n[https://identicons.github.com/<\u81ea\u5206\u306e\u30e6\u30fc\u30b6\u30fc\u540d>.png](https://identicons.github.com/y-tsutsu.png)\r\n\r\n![https://identicons.github.com/y-tsutsu.png](https://identicons.github.com/y-tsutsu.png)",
    "pub_date": "2017-09-05T13:42:38.015Z",
    "user": 2,
    "tags": [
      1,
      60
    ]
  }
},
{
  "model": "app.memo",
  "pk": 177,
  "fields": {
    "title": "Python\u3067\u9032\u6357\u72b6\u6cc1\u3092\u8868\u793a\u3059\u308b",
    "content": "# tqdm\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u8868\u793a\r\n\r\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n```\r\n$ pip install tqdm\r\n```\r\n\r\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\r\n```py\r\nfrom tqdm import tqdm\r\nimport time\r\n\r\ndef main():\r\n    for i in tqdm(range(100)):\r\n        time.sleep(0.1)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n## \u7d50\u679c\u8868\u793a\r\n\r\n```\r\n$ python sample.py\r\n100%|##################################| 100/100 [00:10<00:00,  9.94it/s]\r\n```",
    "pub_date": "2017-09-06T07:20:10.911Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 178,
  "fields": {
    "title": "Yogibo",
    "content": "# \u4eba\u3092\u30c0\u30e1\u306b\u3059\u308b\u30bd\u30d5\u30a1\r\n\r\n[https://yogibo.jp](https://yogibo.jp)\r\n\r\n![image](https://img20.shop-pro.jp/PA01300/416/etc/coorde_max_rol.jpg?cmsp_timestamp=2161)",
    "pub_date": "2017-09-16T01:37:36.871Z",
    "user": 2,
    "tags": [
      61
    ]
  }
},
{
  "model": "app.memo",
  "pk": 179,
  "fields": {
    "title": "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eKuin",
    "content": "# \u7c21\u5358\u3067\u9ad8\u901f\u306a\u5b9f\u7528\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u300cKuin\u300d\u3067\u3059\uff01\r\n\r\n[https://github.com/kuina/Kuin](https://github.com/kuina/Kuin)\r\n\r\n![image](http://kuina.ch/data/category_kuin.png)\r\n\r\n```\r\nfunc main()\r\n    for i(2, 100)\r\n        var b: bool :: false\r\n        for j(2, i - 1)\r\n            if(i % j = 0)\r\n                do b :: true\r\n            end if\r\n        end for\r\n        if(!b)\r\n            do cui@print(\"\\{i}\\n\")\r\n        end if\r\n    end for\r\nend func\r\n```",
    "pub_date": "2017-09-19T02:11:08.083Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 180,
  "fields": {
    "title": "\u30e9\u30f3\u30c1\u30e3\u30fc Keypirinha",
    "content": "# Alfred\u30e9\u30a4\u30af\u3067\u9ad8\u901f\u306a\u30e9\u30f3\u30c1\u30e3\u30fc Keypirinha\r\n\r\n[http://keypirinha.com](http://keypirinha.com)\r\n\r\n![image](http://keypirinha.com/_images/wndrun-jumbo.png)\r\n\r\n```\r\n# Keypirinha.ini\r\n\r\n[app]\r\nlaunch_at_startup = yes\r\nhotkey_run = Ctrl+Alt+Space\r\n\r\n[gui]\r\nshow_on_taskbar = no\r\n```",
    "pub_date": "2017-09-29T04:11:11.416Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 181,
  "fields": {
    "title": "Git\u3067\u7a7a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u7ba1\u7406\u3059\u308b\u624b\u9806",
    "content": "# 1 .gitkeep\u3068\u3044\u3046\u7a7a\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\r\n\r\n\u7ba1\u7406\u3057\u305f\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b`.gitkeep`\u3068\u3044\u3046\u7a7a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\uff0e\uff08tmp/.gitkeep\uff09\r\n\r\n# 2 .gitignore\u3092\u66f4\u65b0\r\n\r\n`.gitignore`\u3067.gitkeep\u306e\u9664\u5916\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\uff0e\r\n\r\n```\r\ntmp/*  \r\n!.gitkeep\r\n```",
    "pub_date": "2017-10-06T05:38:28.014Z",
    "user": 2,
    "tags": [
      1,
      32
    ]
  }
},
{
  "model": "app.memo",
  "pk": 182,
  "fields": {
    "title": "Requests\u3067\u65e5\u672c\u8a9e\u3092\u6271\u3046\u3068\u304d\u306e\u6587\u5b57\u5316\u3051\u3092\u76f4\u3059",
    "content": "# apparent_encoding\u3067\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5224\u5b9a\r\n\r\nRequests\u3092\u4f7f\u3063\u3066\u65e5\u672c\u8a9e\u30da\u30fc\u30b8\u3092\u53d6\u5f97\u3057\u305f\u3068\u304d\u306b\u8868\u793a\u3059\u308b\u3068\u6587\u5b57\u5316\u3051\u304c\u8d77\u3053\u308b\uff0e\r\n`apparent_encoding`\u3092\u547c\u3073\u51fa\u3059\u3068\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u4f7f\u3063\u3066\u3061\u3083\u3093\u3068\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5224\u5b9a\u3059\u308b\u3089\u3057\u3044\uff0e\r\n\r\n```\r\nimport requests\r\nimport re\r\n\r\ndef main():\r\n    r = requests.get('http://bootcamp-text.readthedocs.io/textbook/index.html')\r\n    r.encoding = r.apparent_encoding\r\n\r\n    repatter = re.compile('<li class=\"toctree-l1.*>(.*)</a>')\r\n    for x in r.text.split('\\n'):\r\n        result = repatter.search(x)\r\n        if result:\r\n            print(result.groups(1)[0].encode().decode('utf-8'))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
    "pub_date": "2017-10-15T02:13:54.450Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 183,
  "fields": {
    "title": "\u30e2\u30f3\u30c6\u30a3\u30fb\u30db\u30fc\u30eb\u554f\u984c",
    "content": "# \u30e2\u30f3\u30c6\u30a3\u30fb\u30db\u30fc\u30eb\u554f\u984c\u3092Python\u3067\u89e3\u304f\r\n\r\n> \u6b63\u89e3\u306f\u300e\u30c9\u30a2\u3092\u5909\u66f4\u3059\u308b\u300f\u3067\u3042\u308b\u3002\u306a\u305c\u306a\u3089\u3001\u30c9\u30a2\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\u306b\u306f\u666f\u54c1\u3092\u5f53\u3066\u308b\u78ba\u7387\u304c2\u500d\u306b\u306a\u308b\u304b\u3089\u3060\r\n\r\n[https://ja.wikipedia.org/wiki/\u30e2\u30f3\u30c6\u30a3\u30fb\u30db\u30fc\u30eb\u554f\u984c](https://ja.wikipedia.org/wiki/\u30e2\u30f3\u30c6\u30a3\u30fb\u30db\u30fc\u30eb\u554f\u984c)\r\n\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\ndef do_notchange(count):\r\n    c = 0\r\n    for i in range(count):\r\n        x = np.random.permutation([True, False, False])\r\n        idx = np.random.randint(0, 3)\r\n        if x[idx]:\r\n            c += 1\r\n    return c\r\n\r\ndef do_change(count):\r\n    c = 0\r\n    for i in range(count):\r\n        x = list(np.random.permutation([True, False, False]))\r\n        idx = np.random.randint(0, 3)\r\n        x.pop(idx)\r\n        x.remove(False)\r\n        if x[0]:\r\n            c += 1\r\n    return c\r\n\r\ndef main():\r\n    c1 = do_notchange(10000)\r\n    c2 = do_change(10000)\r\n    print(c1)\r\n    print(c2)\r\n    plt.pie(np.array([c1, c2]), counterclock=False, startangle=90,\r\n            autopct=\"%1.1f%%\", labels=['net change', 'change'])\r\n    plt.show()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
    "pub_date": "2017-10-15T15:49:14.560Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 184,
  "fields": {
    "title": "Python\u306eFizzBuzz\uff08\u305d\u306e2\uff09",
    "content": "# \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3063\u3066\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\r\n\r\n\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3067\u7bc4\u56f2\u5916\u306e\u5834\u5408\u306f\u30a8\u30e9\u30fc\u3067\u306a\u304f\u7a7a\u30ea\u30b9\u30c8\u304c\u8fd4\u308b\uff0e\r\n\r\n```py\r\nprint('\\n'.join(['Fizz'[i % 3 * 4:] + 'Buzz'[i % 5 * 4:] or str(i) for i in range(1, 16)]))\r\n```",
    "pub_date": "2017-10-18T06:09:16.229Z",
    "user": 2,
    "tags": [
      1,
      2,
      9
    ]
  }
},
{
  "model": "app.memo",
  "pk": 185,
  "fields": {
    "title": "Docker\u3067Fedora\u306e\u74b0\u5883\u3092\u4f5c\u6210",
    "content": "# Docker Pull\r\n\r\nDocker Hub\u304b\u3089Fedora\u306e\u30a4\u30e1\u30fc\u30b8\u3092pull\r\n\r\n```shell\r\n$ sudo docker pull fedora\r\n```\r\n\r\n# Docker Run\r\n\r\nContainer\u306e\u4f5c\u6210\r\n\r\n```shell\r\n$ sudo docker run -it --name myfedora fedora /bin/bash\r\n```\r\n\r\n# Setup ssh\r\n\r\nssh\u63a5\u7d9a\u306e\u305f\u3081\u306eSetup\r\n\r\n```shell\r\n# dnf -y update --refresh\r\n# dnf clean packages\r\n# dnf -y update --refresh\r\n# dnf -y install openssh-server passwd\r\n# mkdir -p /var/run/sshd\r\n# ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ''\r\n# passwd root\r\n# exit\r\n```\r\n\r\n# Docker Commit\r\n\r\nssh\u63a5\u7d9a\u306e\u305f\u3081\u306e\u74b0\u5883\u3092\u4f5c\u3063\u305fContainer\u3092Commit\r\n\r\n```shell\r\n$ sudo docker commit myfedora tsutsu/fedora\r\n```\r\n\r\n# Docker Run\r\n\r\nCommit\u3057\u305fImage\u3067Container\u306e\u4f5c\u6210\uff0e\u3053\u3053\u3067\u306f22\u30dd\u30fc\u30c8\uff08ssh\uff09\u306880\u30dd\u30fc\u30c8\uff08http\uff09\u3092\u958b\u3051\u3066\u3044\u308b\uff0e\r\n\r\n```shell\r\n$ sudo docker run -d --expose 22 --expose 80 --name myfedora2 tsutsu/fedora /usr/sbin/sshd -D\r\n```\r\n\r\n\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u306fport forward\u3092\u8a2d\u5b9a\u3059\u308b\uff0e\r\n\r\n```shell\r\n$ sudo docker run -d --expose 22 --expose 80 -p 2200:22 -p 8080:80 --name myfedora2 tsutsu/fedora /usr/sbin/sshd -D\r\n```\r\n\r\n# Connect\r\n\r\nDocker Exec\u3067\u63a5\u7d9a\r\n\r\n```shell\r\n$ sudo docker exec -it myfedora2 /bin/bash\r\n```\r\n\r\nssh\u3067\u63a5\u7d9a\r\n\r\n```shell\r\n$ ssh root@172.17.0.2\r\n```\r\n\r\n# Install Tools\r\n\r\n\u305d\u306e\u4ed6\uff0c\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0e\r\n\r\n```shell\r\n# dnf -y groupinstall \"Development Tools\"\r\n# dnf -y install kernel-devel kernel-headers git net-tools procps wget\r\n```",
    "pub_date": "2017-10-21T11:56:25.533Z",
    "user": 2,
    "tags": [
      1,
      62
    ]
  }
},
{
  "model": "app.memo",
  "pk": 186,
  "fields": {
    "title": "C++ \u672a\u5b9a\u7fa9\u52d5\u4f5c\u30b3\u30fc\u30c9",
    "content": "# g++\u3068clang++\u3067\u9055\u3046\u7d50\u679c\u306b\u306a\u308b\u30b3\u30fc\u30c9\r\n\r\n```c++\r\n#include <vector>\r\n#include <cstdio>\r\n\r\nint f(std::vector<int> &a, std::vector<int> &b)\r\n{\r\n    a.push_back(-1);\r\n    b.push_back(-1);\r\n    return (int)a.size();\r\n}\r\n\r\nint main()\r\n{\r\n    std::vector<int> a, b;\r\n    int first = f(a, b);\r\n    printf(\"a[0]=%d, b[0]=%d\\n\", a[0], b[0]);\r\n    a[0] = f(a, b);\r\n    printf(\"a[0]=%d, b[0]=%d\\n\", a[0], b[0]);\r\n    return 0;\r\n}\r\n```\r\n\r\n# \u5b9f\u884c\u7d50\u679c\r\n\r\n```shell\r\n$ ./gcc.out\r\na[0]=-1, b[0]=-1\r\na[0]=-1, b[0]=2\r\n$ ./clang.out\r\na[0]=-1, b[0]=-1\r\na[0]=2, b[0]=-1\r\n```\r\n\r\na.push_back() \u306f a[0] \u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5909\u66f4\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b\u3089\uff0c\u524d\u3082\u3063\u3066\u8a55\u4fa1\u3055\u308c\u305f a[0] \u306e\u30a2\u30c9\u30ec\u30b9\u306f\u5fc5\u305a\u3057\u3082\u6709\u52b9\u3067\u306f\u306a\u3044\r\n\r\n# \u30d0\u30fc\u30b8\u30e7\u30f3\r\n\r\n```shell\r\n$ g++ --version\r\ng++ (Debian 6.3.0-18) 6.3.0 20170516\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n$ clang++ --version\r\nclang version 3.8.1-24 (tags/RELEASE_381/final)\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n```\r\n\r\n# C++17\r\n\r\nC++17\u3067\u306f`\u53b3\u5bc6\u306a\u5f0f\u306e\u8a55\u4fa1\u9806`\u304c\u5165\u308b\u3089\u3057\u3044",
    "pub_date": "2017-10-22T01:50:25.231Z",
    "user": 2,
    "tags": [
      1,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 187,
  "fields": {
    "title": "tmux\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u64cd\u4f5c",
    "content": "# tmux\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u95a2\u9023\u306e\u64cd\u4f5c\r\n\r\n## \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\r\n\r\n```shell\r\n$ tmux ls\r\n```\r\n\r\n## \u30a2\u30bf\u30c3\u30c1\r\n\r\n```shell\r\n$ tmux a\r\n$ tmux a -t \u30bb\u30c3\u30b7\u30e7\u30f3\u540d\r\n```\r\n\r\n## \u30c7\u30bf\u30c3\u30c1\r\n\r\n```shell\r\n$ tmux d\r\n```\r\n\r\n## tmux\u4e0a\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3\u4e00\u89a7 & \u5207\u308a\u66ff\u3048\r\n\r\n```\r\nPREFIX s\r\n```",
    "pub_date": "2017-10-22T15:05:12.987Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 188,
  "fields": {
    "title": "sshfs\u3067\u30ea\u30e2\u30fc\u30c8\u30db\u30b9\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709",
    "content": "# \u30ea\u30e2\u30fc\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30ed\u30fc\u30ab\u30eb\u306b\u30de\u30a6\u30f3\u30c8\r\n\r\n\u30ed\u30fc\u30ab\u30eb\u306b\u3044\u306a\u304c\u3089\u306b\u3057\u3066\u30ea\u30e2\u30fc\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u89e6\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u65b9\u6cd5\uff0e\r\n\r\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```shell\r\n$ sudo apt install sshfs\r\n```\r\n\r\n## \u30de\u30a6\u30f3\u30c8\u30fb\u30a2\u30f3\u30de\u30a6\u30f3\u30c8\r\n\r\n```shell\r\n$ sshfs <user>@<host>:<dir> <mountpoiut>\r\n$ fusermount -u <mountpoint>\r\n```",
    "pub_date": "2017-10-28T12:12:00.587Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 189,
  "fields": {
    "title": "Linux\u304b\u3089Windows\u306e\u5171\u6709\u30d5\u30a9\u30eb\u30c0\u3092\u30de\u30a6\u30f3\u30c8",
    "content": "# cifs-utils\u3092\u4f7f\u3063\u3066\u5171\u6709\u30d5\u30a9\u30eb\u30c0\u3092\u30de\u30a6\u30f3\u30c8\r\n\r\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```shell\r\n$ sudo apt install cifs-utils \r\n```\r\n\r\n## \u30de\u30a6\u30f3\u30c8\u30fb\u30a2\u30f3\u30de\u30a6\u30f3\u30c8\r\n\r\n```shell\r\n$ sudo mount.cifs //192.168.11.02/disk /home/tsutsu/nas/x/\r\n$ sudo umount /home/tsutsu/nas/x/\r\n```\r\n\r\n## \u30e6\u30fc\u30b6\u304c windows \u30c9\u30e1\u30a4\u30f3\u306e\u5834\u5408\r\n\r\n```shell\r\n$ sudo mount.cifs -o username=<user>,password=<password>,domain=<domain> //192.168.20.10/ts ~/nas\r\n```\r\n\r\n## \u81ea\u52d5\u30de\u30a6\u30f3\u30c8\r\n\r\n```shell\r\n$ sudo vi /etc/fstab\r\n//192.168.11.2/disk /home/tsutsu/nas/x cifs username=<user>,password=<password>\r\n```",
    "pub_date": "2017-10-28T12:28:19.048Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 190,
  "fields": {
    "title": "pip-tools\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406",
    "content": "# pip-tools\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```shell\r\n$ pip install pip-tools\r\n```\r\n\r\n# requirements.txt\u306e\u66f4\u65b0\r\n\r\n\u3042\u3089\u304b\u3058\u3081`requirements.in`\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\uff0e\r\n\r\n```\r\ndj-database-url\r\ndjango\r\ndjango-dotenv\r\n```\r\n\r\n`pip-compile`\u30b3\u30de\u30f3\u30c9\u3067\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u5185\u5bb9\u3067requirements.txt\u3092\u66f4\u65b0\uff0e\r\n\r\n```shell\r\n$ pip-compile requirements.in\r\n```\r\n\r\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u66f4\u65b0\r\n\r\nrequirements.txt\u306e\u5185\u5bb9\u306b\u5408\u308f\u305b\u3066\u30d1\u30c3\u30b1\u30fc\u30b8\u4e00\u5f0f\u3092\u66f4\u65b0\uff0e\u4e0d\u8981\u306b\u306a\u3063\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3082\u884c\u3063\u3066\u304f\u308c\u308b\uff0e\r\n\r\n```shell\r\n$ pip-sync\r\n```",
    "pub_date": "2018-01-04T07:52:04.318Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 191,
  "fields": {
    "title": "\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3067UTF-8\u3092\u8868\u793a",
    "content": "# \u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5909\u66f4\r\n\r\n`chcp`\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\uff0e\r\n\r\n## UTF-8\r\n\r\n```cmd\r\n> chcp 65001\r\n```\r\n\r\n## Shift_JIS\r\n\r\n```cmd\r\n> chcp 932\r\n```",
    "pub_date": "2018-01-05T05:42:37.604Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 192,
  "fields": {
    "title": "PyQt\u3067QtQuick\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea",
    "content": "# PyQt\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```shell\r\n$ pip install pyqt5\r\n```\r\n\r\n# PyQt\u5074\u306e\u30b3\u30fc\u30c9\r\n\r\n```\r\nimport sys\r\nfrom os.path import dirname, join\r\n\r\nfrom PyQt5.QtCore import QUrl\r\nfrom PyQt5.QtGui import QGuiApplication\r\nfrom PyQt5.QtQuick import QQuickView\r\n\r\ndef main():\r\n    app = QGuiApplication(sys.argv)\r\n    view = QQuickView()\r\n\r\n    view.engine().quit.connect(app.quit)\r\n    view.rootContext().setContextProperty(\r\n        \"imageUrl\", 'https://pbs.twimg.com/profile_images/712812877439062017/xZNnGcXW.jpg')\r\n\r\n    url = QUrl(join(dirname(__file__), 'sample.qml'))\r\n    view.setSource(url)\r\n    view.show()\r\n    sys.exit(app.exec_())\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n# QML\u5074\u306e\u30b3\u30fc\u30c9\r\n\r\n```\r\nimport QtQuick 2.0\r\n\r\nRectangle {\r\n    id: imageViewer\r\n    width: 512\r\n    height: 512\r\n\r\n    Image {\r\n        id: view\r\n        clip: true\r\n        sourceSize.width: 0\r\n        anchors.fill: parent\r\n        source: imageUrl\r\n    }\r\n\r\n    Rectangle {\r\n        id: closeButton\r\n        width: 100\r\n        height: 100\r\n        color: 'gray'\r\n        anchors.right: parent.right\r\n\r\n        MouseArea {\r\n            anchors.fill: parent\r\n            onPressed: {\r\n                Qt.quit()\r\n            }\r\n        }\r\n\r\n        Text {\r\n            text: 'close'\r\n            horizontalAlignment: Text.AlignHCenter\r\n            verticalAlignment: Text.AlignVCenter\r\n            anchors.horizontalCenter: parent.horizontalCenter\r\n            anchors.verticalCenter: parent.verticalCenter\r\n            wrapMode: Text.NoWrap\r\n        }\r\n    }\r\n}\r\n```",
    "pub_date": "2018-01-27T10:27:29.332Z",
    "user": 2,
    "tags": [
      1,
      2,
      57
    ]
  }
},
{
  "model": "app.memo",
  "pk": 193,
  "fields": {
    "title": "cmder\u3067\u306els\u30b3\u30de\u30f3\u30c9\u306e\u6587\u5b57\u5316\u3051\u5bfe\u7b56",
    "content": "# Monospace\u306e\u89e3\u9664\r\n\r\n\u300cMain\u300d\u306e`Monospace`\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3059\uff0e\r\n\r\n# \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u8a2d\u7f6e\r\n\r\n\u300cStartup\u300d-\u300cEnvironment\u300d\u306b\u4e0b\u8a18\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\uff0e\r\n\r\n```cmd\r\nset PATH=C:\\Program Files\\Git\\usr\\bin;%ConEmuBaseDir%\\Scripts;%PATH%\r\nset LANG=ja_JP.UTF-8\r\n```\r\n\r\n# msys\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3064\u3044\u3066\r\n\r\n`ls`\u3068`git`\u306f\u6319\u52d5\u304c\u4e0d\u5b89\u5b9a\uff0c\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u306a\u3069\u8abf\u5b50\u304c\u60aa\u3044\u305f\u3081\uff0c\u74b0\u5883\u5909\u6570\u306ePATH\u306bGit for Windows\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u8ffd\u52a0\u3057\u3066\u3001\u305d\u3061\u3089\u304c\u512a\u5148\u7684\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u3059\u308b\uff0eGit for Windows\u306e`ls`\u30b3\u30de\u30f3\u30c9\u7b49\u306f\u6587\u5b57\u5316\u3051\u3057\u3066\u3057\u307e\u3046\u305f\u3081\uff0c\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u5bfe\u7b56\u304c\u5fc5\u8981\uff0e",
    "pub_date": "2018-02-04T10:25:02.526Z",
    "user": 2,
    "tags": [
      1
    ]
  }
},
{
  "model": "app.memo",
  "pk": 194,
  "fields": {
    "title": "Weston\u306e\u30d3\u30eb\u30c9\u624b\u9806",
    "content": "# \u74b0\u5883\u5909\u6570\r\n\r\n\u9069\u5f53\u306a\u540d\u524d\uff08wlenv\uff09\u3067\u4fdd\u5b58\uff0e\r\n\r\n*wlenv*\r\n\r\n```sh\r\nexport USRFS=$HOME/usrfs\r\nexport WLD=$USRFS\r\nexport LD_LIBRARY_PATH=$USRFS/lib\r\nexport PKG_CONFIG_PATH=$USRFS/lib/pkgconfig:$USRFS/share/pkgconfig\r\nexport ACLOCAL=\"aclocal -I $USRFS/share/aclocal\"\r\nexport PATH=$HOME/usrfs/bin:$PATH\r\n```\r\n\r\n# \u30d3\u30eb\u30c9&\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n\u4e0a\u8a18\u306e\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u8fbc\u3093\u3067\uff0c`~/usrfs`\u306b\u30d3\u30eb\u30c9&\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0e\r\n\r\n*install.sh*\r\n\r\n```sh\r\n#!/bin/bash\r\n\r\nWORK_DIR=$(cd $(dirname $0) && pwd)\r\n\r\nmkdir -p ~/usrfs\r\nsudo apt install -y libxml++2.6-dev bison flex libmtdev-dev libudev-dev libevdev-dev libgtk-3-dev check libunwind-dev libwacom-dev libxcb-composite0-dev libpam0g-dev\r\n\r\ncd $WORK_DIR\r\nsource ./wlenv\r\n\r\ngit clone http://anongit.freedesktop.org/git/wayland/wayland.git\r\ncd wayland\r\ngit checkout 1.14.0\r\n./autogen.sh --prefix=$WLD --disable-documentation\r\n./autogen.sh --prefix=$WLD --disable-documentation\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone http://anongit.freedesktop.org/git/mesa/mesa.git\r\ncd mesa\r\ngit checkout mesa-17.0.7\r\npyenv local 2.7.16\r\npip install mako\r\n./autogen.sh --prefix=$WLD --with-gallium-drivers=svga --with-dri-drivers= --enable-gles1 --enable-gles2 --enable-gallium-egl --enable-gbm --enable-shared-glapi --with-egl-platforms=x11,wayland\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone http://anongit.freedesktop.org/git/cairo\r\ncd cairo\r\ngit checkout 1.15.8\r\n./autogen.sh --prefix=$WLD --enable-gl --enable-xcb\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone git://anongit.freedesktop.org/wayland/libinput\r\ncd libinput\r\ngit checkout 1.8.4\r\n./autogen.sh --prefix=$WLD\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone http://anongit.freedesktop.org/git/wayland/weston.git\r\ncd weston\r\ngit checkout 2.0.0\r\n./autogen.sh --prefix=$WLD\r\nmake -j4\r\nsudo make install\r\ncp ivi-shell/weston.ini ~/.config/.\r\ncd $WORK_DIR\r\n```",
    "pub_date": "2018-02-12T11:39:08.662Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 195,
  "fields": {
    "title": "Windows\u3067USB\u30e1\u30e2\u30ea\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u524a\u9664",
    "content": "# \u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u524a\u9664\u65b9\u6cd5\r\n\r\n`diskpart`\u3092\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u7b49\u304b\u3089\u8d77\u52d5\u3059\u308b\uff0e\uff08\u30b3\u30f3\u30bd\u30fc\u30eb\u304c\u7acb\u3061\u4e0a\u304c\u308b\uff0e\uff09\r\n\r\n```cmd\r\n> diskpart\r\n```\r\n\r\n\u30c7\u30a3\u30b9\u30afNo.\u3092\u78ba\u8a8d\u3059\u308b\uff0e\u30b5\u30a4\u30ba\u7b49\u3067\u78ba\u8a8d\uff0e\r\n\r\n```cmd\r\nDISKPART> list disk\r\n\r\n  \u30c7\u30a3\u30b9\u30af      \u72b6\u614b           \u30b5\u30a4\u30ba   \u7a7a\u304d   \u30c0\u30a4\u30ca GPT\r\n  ###                                          \u30df\u30c3\u30af\r\n  ------------  -------------  -------  -------  ---  ---\r\n  \u30c7\u30a3\u30b9\u30af 0    \u30aa\u30f3\u30e9\u30a4\u30f3           465 GB      0 B\r\n  \u30c7\u30a3\u30b9\u30af 1    \u30aa\u30f3\u30e9\u30a4\u30f3            14 GB  7823 MB\r\n```\r\n\r\n\u30c7\u30a3\u30b9\u30af\u3092\u9078\u629e\u3057\u3066\u30af\u30ea\u30fc\u30f3\uff0c\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u3092\u884c\u3046\uff0e\r\n\r\n```\r\nDISKPART> select disk 1\r\n\r\n\u30c7\u30a3\u30b9\u30af 1 \u304c\u9078\u629e\u3055\u308c\u307e\u3057\u305f\u3002\r\n\r\nDISKPART> clean\r\n\r\nDiskPart \u306f\u30c7\u30a3\u30b9\u30af\u3092\u6b63\u5e38\u306b\u30af\u30ea\u30fc\u30f3\u306a\u72b6\u614b\u306b\u3057\u307e\u3057\u305f\u3002\r\n\r\nDISKPART> create partition primary\r\n\r\nDiskPart \u306f\u6307\u5b9a\u3057\u305f\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002\r\n```\r\n\r\n\u3042\u3068\u306f\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u4e0a\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089FAT32\u7b49\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u65bd\uff0e",
    "pub_date": "2018-03-20T07:16:43.724Z",
    "user": 2,
    "tags": [
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 196,
  "fields": {
    "title": "pip install\u3067UnicodeDecodeError\u304c\u51fa\u308b\u5bfe\u7b56",
    "content": "# pip\\compat\\\\_\\_init\\_\\_.py\u306e\u4fee\u6b63\r\n\r\n`locale`\u306eimport\u3092\u8ffd\u52a0\u3057\u3066`console_to_str`\u3092\u4fee\u6b63\uff0e\r\n\r\n```diff\r\nimport os\r\nimport sys\r\n+import locale\r\n\uff1a\r\nif sys.version_info >= (3,):\r\n    def console_to_str(s):\r\n-       try:\r\n-           return s.decode(sys.__stdout__.encoding)\r\n-       except UnicodeDecodeError:\r\n-           return s.decode('utf_8')\r\n+       return s.decode(locale.getpreferredencoding() or 'utf-8', 'replace')\r\n```",
    "pub_date": "2018-03-31T19:17:48.217Z",
    "user": 2,
    "tags": [
      1,
      2,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 197,
  "fields": {
    "title": "Git\u3067\u5dee\u5206\u884c\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u65b9\u6cd5",
    "content": "# \u30b7\u30f3\u30d7\u30eb\u306b\u5168\u4f53\u306e\u5dee\u5206\u884c\u6570\u3092\u8868\u793a\u3059\u308b\r\n\r\n`git diff`\u306b`--shortstat`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3068\uff0c\u5168\u4f53\u306e\u5909\u66f4\u30d5\u30a3\u30eb\u6570\u3068\u8ffd\u52a0/\u524a\u9664\u306e\u884c\u6570\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e\r\n\r\n```shell\r\n$ git diff --shortstat dc2b1199f4..master\r\n 362 files changed, 52423 insertions(+), 24979 deletions(-)\r\n```\r\n\r\n# \u5404\u30d5\u30a1\u30a4\u30eb\u3054\u3068\u306e\u5dee\u5206\u884c\u6570\u3092\u8868\u793a\u3059\u308b\r\n\r\n`--numstat`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\uff0e\r\n\r\n```shell\r\n$ git diff --numstat dc2b1199f4..master\r\n0       3       app/__init__.py\r\n11      0       app/admin.py\r\n5       0       app/apps.py\r\n13      16      app/forms.py\r\n57      4       app/models.py\r\n42      27      app/tests.py\r\n36      0       app/urls.py\r\n194     46      app/views.py\r\n```\r\n\r\n# \u3082\u3046\u5c11\u3057\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306b\u8868\u793a\u3059\u308b\r\n\r\n`--stat`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\uff0e\r\n\r\n```shell\r\n$ git diff --stat dc2b1199f4..master\r\n app/__init__.py                                    |     3 -\r\n app/admin.py                                       |    11 +\r\n app/apps.py                                        |     5 +\r\n app/forms.py                                       |    29 +-\r\n app/models.py                                      |    61 +-\r\n app/tests.py                                       |    69 +-\r\n app/urls.py                                        |    36 +\r\n app/views.py                                       |   240 +-\r\n```",
    "pub_date": "2018-04-05T06:53:16.759Z",
    "user": 2,
    "tags": [
      1,
      32
    ]
  }
},
{
  "model": "app.memo",
  "pk": 198,
  "fields": {
    "title": "reveal.js\u3092PDF\u306b\u5370\u5237",
    "content": "# reveal.js\u306e\u30b9\u30e9\u30a4\u30c9\u3092PDF\u306b\u5370\u5237\u3059\u308b\r\n\r\n1. URL\u306b`?print-pdf`\u3092\u8ffd\u52a0\u3059\u308b\uff0e\r\n1. \u30b9\u30e9\u30a4\u30c9\u304c\u7e26\u306b\u4e26\u3093\u3067\u8868\u793a\u3055\u308c\u308b\uff0e\r\n1. \u30d6\u30e9\u30a6\u30b6\u304b\u3089PDF\u306b\u5370\u5237\u3059\u308b\uff0e\r\n\r\n## \u53c2\u8003\u4f8b\r\n\r\n* \u901a\u5e38\u7248  \r\n[https://y-tsutsu.github.io/reveal.js-lt-wintools/](https://y-tsutsu.github.io/reveal.js-lt-wintools/)\r\n* PDF\u5370\u5237\u7248  \r\n[https://y-tsutsu.github.io/reveal.js-lt-wintools/?print-pdf](https://y-tsutsu.github.io/reveal.js-lt-wintools/?print-pdf)",
    "pub_date": "2018-04-05T06:59:24Z",
    "user": 2,
    "tags": [
      63
    ]
  }
},
{
  "model": "app.memo",
  "pk": 199,
  "fields": {
    "title": "Docker\u3092sudo\u306a\u3057\u3067\u4f7f\u3046\u65b9\u6cd5",
    "content": "# docker\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3059\u308b\r\n\r\n\u30e6\u30fc\u30b6\u3092docker\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3059\u308b\u3068sudo\u306a\u3057\u3067\u5b9f\u884c\u53ef\u80fd\uff0e\r\n\r\n```shell\r\n$ groups\r\ntsutsu cdrom floppy audio dip video plugdev netdev bluetooth lpadmin scanner docker\r\n$ sudo groupadd docker            # docker\u30b0\u30eb\u30fc\u30d7\u304c\u306a\u3051\u308c\u3070\u4f5c\u6210\u3059\u308b\r\n$ sudo gpasswd -a $USER docker    # \u30e6\u30fc\u30b6\u3092docker\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3055\u305b\u308b\r\n$ sudo systemctl restart docker\r\n$ exit\r\n```",
    "pub_date": "2018-04-06T04:16:43.004Z",
    "user": 2,
    "tags": [
      1,
      62
    ]
  }
},
{
  "model": "app.memo",
  "pk": 200,
  "fields": {
    "title": "reveal.js\u306e\u4fbf\u5229\u306a\u8a2d\u5b9a\u5909\u66f4",
    "content": "# reveal.js\u3078\u306e\u8a2d\u5b9a\r\n\r\n* \u5c65\u6b74\u6a5f\u80fd\u306e\u6709\u52b9\u5316\uff08F5\u3092\u62bc\u3057\u3066\u3082\u30da\u30fc\u30b8\u304c\u623b\u3089\u306a\u3044\uff09\r\n* \u30b9\u30e9\u30a4\u30c9\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u5909\u66f4\r\n\r\n```diff\r\n<script>\r\n    Reveal.initialize({\r\n        dependencies: [\r\n            { src: 'plugin/markdown/marked.js' },\r\n            { src: 'plugin/markdown/markdown.js' },\r\n            { src: 'plugin/notes/notes.js', async: true },\r\n            { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }\r\n        ],\r\n+\t\thistory: true,\r\n+\t\ttransition: 'convex', // none/fade/slide/convex/concave/zoom\r\n    });\r\n</script>\r\n```\r\n\r\n# Markdown\u3067\u306e\u8a18\u8ff0\u8a2d\u5b9a\r\n\r\n* Markdown\u306e\u6709\u52b9\u5316\r\n* \u30bb\u30d1\u30ec\u30fc\u30bf\u306e\u8a2d\u5b9a\r\n\r\n```diff\r\n<div class=\"reveal\">\r\n    <div class=\"slides\">\r\n+       <section data-markdown data-separator=\"\\n---\\n\" data-separator-vertical=\"\\n--\\n\">\r\n+           <textarea data-template>\r\n+               # XXX\r\n+               ---\r\n+               ## YYY\r\n+               --\r\n+               ### ZZZ\r\n+           </textarea>\r\n+       </section>\r\n    </div>\r\n</div>\r\n```",
    "pub_date": "2018-05-01T07:46:00.095Z",
    "user": 2,
    "tags": [
      63
    ]
  }
},
{
  "model": "app.memo",
  "pk": 201,
  "fields": {
    "title": "Python\u30672\u6b21\u5143\u914d\u5217\u3092\u8ee2\u7f6e",
    "content": "# 2\u6b21\u5143\u914d\u5217\u306e\u884c\u3068\u5217\u3092\u5165\u308c\u66ff\u3048\u308b\r\n\r\n\u95a2\u6570\u306e\u5f15\u6570\u306b`*`\u3092\u30ea\u30b9\u30c8\u306b\u3064\u3051\u3066\u6e21\u3059\u3068\uff0c\u5206\u89e3\u3055\u308c\u3066\u5f15\u6570\u306b\u6e21\u3055\u308c\u308b\uff0e\r\n\r\n```py\r\na = [[y for y in range(1, 4)] for x in range(3)]\r\nprint(a)\r\nprint(*a, sep='\\n')\r\nb = [x for x in zip(*a)]\r\nprint(b)\r\nprint(*b, sep='\\n')\r\n```\r\n\r\n\u5b9f\u884c\u7d50\u679c\r\n\r\n```shell\r\n$ python spam.py\r\n[[1, 2, 3], [1, 2, 3], [1, 2, 3]]\r\n[1, 2, 3]\r\n[1, 2, 3]\r\n[1, 2, 3]\r\n[(1, 1, 1), (2, 2, 2), (3, 3, 3)]\r\n(1, 1, 1)\r\n(2, 2, 2)\r\n(3, 3, 3)\r\n```",
    "pub_date": "2018-05-05T00:42:19.747Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 202,
  "fields": {
    "title": "Python\u3067\u968e\u4e57\uff0c\u9806\u5217\uff0c\u7d44\u307f\u5408\u308f\u305b",
    "content": "# \u968e\u4e57\uff0c\u9806\u5217\uff0c\u7d44\u307f\u5408\u308f\u305b\u306e\u7dcf\u6570\u7b97\u51fa\r\n\r\n`math.factorial()`\u3092\u4f7f\u3063\u3066\u305d\u308c\u305e\u308c\u7b97\u51fa\uff0e\r\n\r\n```py\r\nimport math\r\n\r\ndef factorial(n):\r\n    ''' \u968e\u4e57 '''\r\n    return math.factorial(n)\r\n\r\ndef permutations_count(n, r):\r\n    ''' \u9806\u5217 '''\r\n    return math.factorial(n) // math.factorial(n - r)\r\n\r\ndef combinations_count(n, r):\r\n    ''' \u7d44\u307f\u5408\u308f\u305b '''\r\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\r\n\r\ndef main():\r\n    print(factorial(5))\r\n    print(permutations_count(5, 2))\r\n    print(combinations_count(5, 2))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n\u5b9f\u884c\u7d50\u679c\r\n\r\n```shell\r\n$ python spam.py\r\n120\r\n20\r\n10\r\n```",
    "pub_date": "2018-05-05T01:00:54.869Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 203,
  "fields": {
    "title": "\u7d20\u6570\u5217\u6319\u3068\u7d20\u6570\u5224\u5b9a",
    "content": "# Python\u3067\u7d20\u6570\u5217\u6319\u3068\u7d20\u6570\u5224\u5b9a\r\n\r\n\u300c\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u3075\u308b\u3044\u300d\u3068\u300c\u305f\u3081\u3057\u5272\u308a\u300d\r\n\r\n```py\r\ndef primes(n):\r\n    if n < 2:\r\n        return []\r\n\r\n    primes = [i for i in range(n)]\r\n    primes[1] = 0\r\n\r\n    for i in primes:\r\n        if i > n ** (1 / 2):\r\n            break\r\n        if i == 0:\r\n            continue\r\n        for j in range(i * 2, n, i):\r\n            primes[j] = 0\r\n\r\n    return [x for x in primes if x != 0]\r\n\r\ndef is_prime(n):\r\n    if n < 2:\r\n        return False\r\n    if n == 2 or n == 3 or n == 5:\r\n        return True\r\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0:\r\n        return False\r\n\r\n    prime = 7\r\n    step = 4\r\n    while prime <= n ** (1 / 2):\r\n        if n % prime == 0:\r\n            return False\r\n        prime += step\r\n        step = 6 - step\r\n\r\n    return True\r\n\r\ndef main():\r\n    pri = primes(10000)\r\n    print(len(pri))\r\n    print(len([x for x in pri if is_prime(x)]))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n    '''\r\n    $ python spam.py\r\n    1229\r\n    1229\r\n    '''\r\n```",
    "pub_date": "2018-05-06T15:56:59.755Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 204,
  "fields": {
    "title": "\u52d5\u7684\u306b\u30b0\u30e9\u30d5\u3092\u751f\u6210",
    "content": "# Python\u3067\u52d5\u7684\u306b\u30b0\u30e9\u30d5\u3092\u751f\u6210\u3059\u308b\r\n\r\nmatplotlib\u306e`animation`\u3092\u4f7f\u3063\u3066\u52d5\u7684\u306b\u63cf\u753b\u3059\u308b\uff0e\r\n\r\n```py\r\nimport math\r\n\r\nimport numpy as np\r\nfrom matplotlib import animation\r\nfrom matplotlib import pyplot as plt\r\n\r\ndef _update(frame, x, y):\r\n    plt.cla()\r\n    x.append(frame)\r\n    y.append(math.sin(frame))\r\n    plt.plot(x, y)\r\n\r\ndef main():\r\n    fig = plt.figure(figsize=(10, 6))\r\n\r\n    x = []\r\n    y = []\r\n\r\n    params = {\r\n        'fig': fig,\r\n        'func': _update,                        # \u30b0\u30e9\u30d5\u3092\u66f4\u65b0\u3059\u308b\u95a2\u6570\r\n        'fargs': (x, y),                        # \u95a2\u6570\u306e\u5f15\u6570 (\u30d5\u30ec\u30fc\u30e0\u756a\u53f7\u3092\u9664\u304f)\r\n        'interval': 10,                         # \u66f4\u65b0\u9593\u9694 (\u30df\u30ea\u79d2)\r\n        'frames': np.arange(0, 10, 0.1),        # \u30d5\u30ec\u30fc\u30e0\u756a\u53f7\u3092\u751f\u6210\u3059\u308b\u30a4\u30c6\u30ec\u30fc\u30bf\r\n        'repeat': False,                        # \u7e70\u308a\u8fd4\u3055\u306a\u3044\r\n    }\r\n    anime = animation.FuncAnimation(**params)\r\n\r\n    plt.show()\r\n    # anime.save('sin.gif', writer='pillow')    # \u4fdd\u5b58\u3059\u308b\u5834\u5408\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
    "pub_date": "2018-07-16T14:41:21.825Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 205,
  "fields": {
    "title": "DockerHub\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u30bf\u30b0\u4e00\u89a7",
    "content": "# DockerHub\u306e\u30ec\u30b8\u30b9\u30c8\u30ea\u306eAPI\u3092\u76f4\u306b\u53e9\u3044\u3066\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\r\n\r\n```console\r\n$ curl -s https://registry.hub.docker.com/v1/repositories/<\u30a4\u30e1\u30fc\u30b8\u540d>/tags | sed \"s/,/\\n/g\" | grep name | cut -d '\"' -f 4\r\n```",
    "pub_date": "2018-07-20T04:13:12.163Z",
    "user": 2,
    "tags": [
      1,
      62
    ]
  }
},
{
  "model": "app.memo",
  "pk": 206,
  "fields": {
    "title": "Pipenv\u306escripts\u306b\u767b\u9332\u3057\u3066\u304a\u304d\u305f\u3044\u30b3\u30de\u30f3\u30c9",
    "content": "# \u95a2\u9023\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```console\r\n$ pipenv install --dev autopep8 flake8\r\n```\r\n\r\n# Pipfile\u306b\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8a18\u8ff0\u3059\u308b\r\n\r\n```ini\r\n[scripts]\r\nstart = \"python main.py runserver\"\r\ntest = \"python -m unittest discover -v\"\r\nformat = \"autopep8 -ivr .\"\r\nlint = \"flake8 --show-source .\"\r\n```",
    "pub_date": "2018-12-09T11:20:15.896Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 207,
  "fields": {
    "title": "\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3067\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u7d50\u679c\u3092\u5909\u6570\u306b\u53d7\u3051\u53d6\u308b",
    "content": "# Git\u306e\u30b3\u30df\u30c3\u30c8\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u53d6\u5f97\u3059\u308b\u4f8b\r\n\r\nfor\u6587\u306b\u300cusebackq\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\uff0cIN\u3067\u6307\u5b9a\u3059\u308b\u30b3\u30de\u30f3\u30c9\u306b\u30d0\u30c3\u30af\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u304f\u304f\u308b\uff0e\r\n\r\n```bat\r\nfor /f \"usebackq tokens=*\" %%i in (`git rev-parse HEAD`) do @set GIT_COMMIT_HASH=%%i\r\necho __version__ = '%GIT_COMMIT_HASH%' > __version__.py\r\n```",
    "pub_date": "2018-12-14T07:41:11.501Z",
    "user": 2,
    "tags": [
      1,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 208,
  "fields": {
    "title": "Go\u306e\u74b0\u5883\u8a2d\u5b9a",
    "content": "# \u306f\u3058\u3081\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30c4\u30fc\u30eb\r\n\r\n```console\r\n$ go get -u github.com/motemen/gore\r\n$ go get -u github.com/nsf/gocode\r\n$ go get -u github.com/k0kubun/pp\r\n$ go get -u golang.org/x/tools/cmd/godoc\r\n$ go get -u github.com/jessevdk/go-assets-builder\r\n```\r\n\r\n# vscode\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u30c4\u30fc\u30eb\r\n\r\n`Go: Install/update Tools`\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\uff0e\r\n\r\n* github.com/mdempsky/gocode\r\n* github.com/uudashr/gopkgs/cmd/gopkgs\r\n* github.com/ramya-rao-a/go-outline\r\n* github.com/acroca/go-symbols\r\n* golang.org/x/tools/cmd/guru\r\n* golang.org/x/tools/cmd/gorename\r\n* github.com/derekparker/delve/cmd/dlv\r\n* github.com/stamblerre/gocode\r\n* github.com/rogpeppe/godef\r\n* github.com/ianthehat/godef\r\n* github.com/sqs/goreturns\r\n* golang.org/x/lint/golint\r\n* github.com/cweill/gotests/...\r\n* github.com/fatih/gomodifytags\r\n* github.com/josharian/impl\r\n* github.com/davidrjenni/reftools/cmd/fillstruct\r\n* github.com/haya14busa/goplay/cmd/goplay\r\n\r\n# \u5225\u9014\u30d0\u30a4\u30ca\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30c4\u30fc\u30eb\r\n\r\n* ghq  \r\n[https://github.com/motemen/ghq](https://github.com/motemen/ghq)\r\n* peco  \r\n[https://github.com/peco/peco](https://github.com/peco/peco)\r\n* dep  \r\n[https://github.com/golang/dep](https://github.com/golang/dep)",
    "pub_date": "2018-12-16T14:07:42.402Z",
    "user": 2,
    "tags": [
      1,
      64
    ]
  }
},
{
  "model": "app.memo",
  "pk": 209,
  "fields": {
    "title": "pip install\u3067\u30a8\u30e9\u30fc",
    "content": "# New XPS 13\u3067pip install\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u308b\r\n\r\n```console\r\n'ProtocolError('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))': /simple/pip/\r\n```\r\n\r\n## \u5bfe\u51e6\u65b9\u6cd5\r\n\r\nNew XPS 13\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u300cKiller Control Center\u300d\u306e\u300cAdvanced Stream Detect\u300d\u3092\u7121\u52b9\u5316\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u306a\u304f\u306a\u308b\uff0e",
    "pub_date": "2019-01-17T13:32:35.281Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 210,
  "fields": {
    "title": "WSL\u306eUbuntu\u74b0\u5883\u3092\u65e5\u672c\u8a9e\u5316",
    "content": "# apt\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u65e5\u672c\u306b\u5909\u66f4\r\n\r\n```console\r\n$ sudo sed -i.bak -e \"s/http:\\/\\/archive\\.ubuntu\\.com/http:\\/\\/jp\\.archive\\.ubuntu\\.com/g\" /etc/apt/sources.list\r\n$ sudo apt update\r\n$ sudo apt upgrade\r\n```\r\n\r\n# \u65e5\u672c\u8a9e\u8a00\u8a9e\u30d1\u30c3\u30af\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```console\r\n$ sudo apt install language-pack-ja\r\n```\r\n\r\n# \u30ed\u30b1\u30fc\u30eb\u3092\u65e5\u672c\u8a9e\u306b\u8a2d\u5b9a\uff08\u7d42\u308f\u3063\u305f\u3089\u518d\u8d77\u52d5\uff09\r\n\r\n```console\r\n$ sudo update-locale LANG=ja_JP.UTF8\r\n```\r\n\r\n# \u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092JST\u306b\u8a2d\u5b9a\r\n\r\n```console\r\n$ sudo dpkg-reconfigure tzdata\r\n```\r\n\r\n# \u65e5\u672c\u8a9e\u30de\u30cb\u30e5\u30a2\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n```console\r\n$ sudo apt install manpages-ja manpages-ja-dev\r\n```",
    "pub_date": "2019-01-20T10:29:42.009Z",
    "user": 2,
    "tags": [
      1,
      37,
      67
    ]
  }
},
{
  "model": "app.memo",
  "pk": 211,
  "fields": {
    "title": "PC\u8d77\u52d5\u6642\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u304c\u5207\u65ad\u3055\u308c\u308b\u554f\u984c\u306e\u89e3\u6c7a",
    "content": "# \u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306e\u63a5\u7d9a\u3092\u884c\u3046\r\n\r\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u3078\u306e\u63a5\u7d9a\u3092\u884c\u3046vbs\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u304b\u3089\u5b9f\u884c\u3059\u308b\uff0ePC\u306e\u518d\u8d77\u52d5\u6642\u306a\u3069\u3059\u3067\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306b\u63a5\u7d9a\u3067\u304d\u3066\u3044\u308b\u3068\u304d\u306f\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u305f\u3081`On Error Resume Next`\u3067\u30a8\u30e9\u30fc\u3092\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u3059\u308b\uff0e\r\n\r\n```vbs\r\nWScript.sleep 3000\r\nSet objNetwork = CreateObject(\"WScript.Network\")\r\nOn Error Resume Next\r\nDim i\r\nFor i = 1 To 6\r\n    objNetWork.MapNetworkDrive \"X:\",\"\\\\192.168.11.2\\disk\"\r\n    objNetWork.MapNetworkDrive \"Y:\",\"\\\\192.168.11.10\\share\"\r\n    objNetWork.MapNetworkDrive \"Z:\",\"\\\\192.168.11.20\\share\"\r\n    WScript.sleep 10000\r\nNext\r\n```\r\n\r\n\u203b \u305f\u307e\u306b\u3046\u307e\u304f\u7e4b\u304c\u3089\u306a\u3044\u304b\u30891\u5206\u7a0b\u5ea6\u7e70\u308a\u8fd4\u3059",
    "pub_date": "2019-02-17T09:22:14.124Z",
    "user": 2,
    "tags": [
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 212,
  "fields": {
    "title": "\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8",
    "content": "# \u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308bPython\u306eOne-liner\r\n\r\n```bat\r\npython -c \"import random, string, pyperclip; pyperclip.copy(''.join([random.choice(string.ascii_letters + string.digits) for i in range(10)]))\"\r\n```",
    "pub_date": "2019-02-18T00:56:34.103Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 213,
  "fields": {
    "title": "\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u5c65\u6b74\u3092\u6d88\u3059",
    "content": "# Git\u7ba1\u7406\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5c65\u6b74\u3054\u3068\u524a\u9664\u3059\u308b\u65b9\u6cd5\r\n\r\n\u8aa4\u3063\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a18\u8ff0\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30df\u30c3\u30c8\u3057\u3066\u3057\u307e\u3063\u305f\u3068\u304d\u306b\uff0c\u5c65\u6b74\u3082\u542b\u3081\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u624b\u9806\uff0e\r\n\r\n```console\r\n$ git filter-branch --tree-filter \"rm -f [\u6d88\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9]\" HEAD\r\n$ git filter-branch --tree-filter \"rm -f -r [\u6d88\u3057\u305f\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9]\" HEAD\r\n```",
    "pub_date": "2019-02-28T03:59:54.089Z",
    "user": 2,
    "tags": [
      1,
      32
    ]
  }
},
{
  "model": "app.memo",
  "pk": 214,
  "fields": {
    "title": "gcc\u306e\u30d1\u30b9\u306e\u78ba\u8a8d\u65b9\u6cd5\uff08\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\uff09",
    "content": "# \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306e\u78ba\u8a8d\u65b9\u6cd5\r\n\r\n`-v`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u78ba\u8a8d\u3059\u308b\uff0e\r\n\r\n```console\r\n$ gcc -v foo.c 2>&1 | less\r\n:\r\n#include \"...\" search starts here:\r\n#include <...> search starts here:\r\n C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++\r\n C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32\r\n C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward\r\n C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include\r\n C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed\r\n C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include\r\nEnd of search list.\r\n:\r\n```\r\n\r\n\u7d50\u679c\u3092\u898b\u308b\u3068\uff0c\u4f8b\u3048\u3070stdio.h\u306a\u3069\u306fmingw64\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e`x86_64-w64-mingw32\\include`\u3042\u305f\u308a\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u305d\u3046\uff0e\r\n\r\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u30d1\u30b9\u306e\u78ba\u8a8d\u65b9\u6cd5\r\n\r\n```console\r\n$ gcc -print-search-dirs\r\ninstall: C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/\r\nprograms: =C:/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/mingw64/bin/../libexec/gcc/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/x86_64-w64-mingw32/8.1.0/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/\r\nlibraries: =C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/mingw64/bin/../lib/gcc/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/\r\n```\r\n\r\n`libraries:`\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\uff0e",
    "pub_date": "2019-03-03T01:34:43.208Z",
    "user": 2,
    "tags": [
      1,
      8,
      16
    ]
  }
},
{
  "model": "app.memo",
  "pk": 215,
  "fields": {
    "title": "VSCode\u3067\u306eC++\u306e\u30d3\u30eb\u30c9\u30bf\u30b9\u30af\u8a2d\u5b9a",
    "content": "# tasks.json\u306e\u8a2d\u5b9a\u5185\u5bb9\r\n\r\n`Makefile`\u306fbuild\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u60f3\u5b9a\uff0e\u554f\u984c\u30d3\u30e5\u30fc\u306b\u30d3\u30eb\u30c9\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u8868\u793a\u3059\u308b\u3068\u304d\u306b\uff0c`\"fileLocation\": \"absolute\"`\u3067\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u3068\u3057\u3066\u89e3\u6790\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\uff0e`\"focus\": true`\u3067\u30d3\u30eb\u30c9\u30bf\u30b9\u30af\u5b9f\u884c\u5f8c\u306b\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5f53\u305f\u308b\u3088\u3046\u306b\u8a2d\u5b9a\uff0e\r\n\r\n`Ctrl`+`Shift`+`B`\u3067\u30d3\u30eb\u30c9\u30bf\u30b9\u30af\u3092\u5b9f\u884c\uff0e\r\n\r\n```json\r\n{\r\n    \"version\": \"2.0.0\",\r\n    \"tasks\": [\r\n        {\r\n            \"label\": \"build\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"make\",\r\n            \"args\": [\r\n                \"-C${workspaceFolder}/build\",\r\n                \"-j4\"\r\n            ],\r\n            \"group\": \"build\",\r\n            \"problemMatcher\": {\r\n                \"base\": \"$gcc\",\r\n                \"fileLocation\": \"absolute\"\r\n            },\r\n            \"presentation\": {\r\n                \"focus\": true,\r\n            }\r\n        }\r\n    ]\r\n}\r\n```",
    "pub_date": "2019-03-16T13:04:46.027Z",
    "user": 2,
    "tags": [
      1,
      8,
      16,
      55
    ]
  }
},
{
  "model": "app.memo",
  "pk": 216,
  "fields": {
    "title": "VMware\u3067ssh\u304c\u3064\u306a\u304c\u3089\u306a\u3044\u3068\u304d\u306e\u5bfe\u5fdc",
    "content": "# VMware\u4e0a\u306eLinux\u3067ssh\u304c\u3064\u306a\u304c\u3089\u306a\u3044\u3068\u304d\u306e\u5bfe\u5fdc\r\n\r\n## \u30a8\u30e9\u30fc\u5185\u5bb9\r\n\r\n\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u3067ssh\u304c\u3064\u306a\u304c\u3089\u306a\u3044\r\n\r\n```console\r\n$ ssh git@github.com\r\npacket_write_wait: Connection to 192.30.255.112 port 22: Broken pipe\r\n```\r\n\r\n## \u56de\u907f\u7b56\r\n\r\n`~/.ssh/config`\u306b\u4e0b\u8a18\u3092\u8a2d\u5b9a\r\n\r\n```\r\nHost *\r\n    IPQoS throughput\r\n```\r\n\r\n## \u95a2\u9023issue\r\n\r\n[https://github.com/vmware/open-vm-tools/issues/287](https://github.com/vmware/open-vm-tools/issues/287)",
    "pub_date": "2019-03-22T13:19:34.629Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 217,
  "fields": {
    "title": "\u518d\u5e30\u7684\u306b\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u5909\u66f4",
    "content": "# \u518d\u5e30\u7684\u306b\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u5909\u66f4\r\n\r\n## \u3059\u3079\u3066\u4e00\u62ec\r\n\r\n```console\r\n$ chmod -R a+x .\r\n```\r\n\r\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u307f\r\n\r\n```console\r\n$ find . -type d -exec chmod 755 \\{\\} \\;\r\n```\r\n\r\n## \u30d5\u30a1\u30a4\u30eb\u306e\u307f\r\n\r\n```console\r\n$ find . -type f -exec chmod 644 \\{\\} \\;\r\n$ find . -type f -name '*.sh' -exec chmod 644 \\{\\} \\;  # \u62e1\u5f35\u5b50\u6307\u5b9a\r\n```\r\n\r\n# WSL\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u5909\u66f4\r\n\r\n`.bashrc`\u306b\u4ee5\u4e0b\u3092\u8a18\u8ff0\u3057\u3066\u304a\u304f\r\n\r\n```console\r\numask 022\r\n```",
    "pub_date": "2019-06-30T01:04:03Z",
    "user": 2,
    "tags": [
      1,
      52,
      67
    ]
  }
},
{
  "model": "app.memo",
  "pk": 218,
  "fields": {
    "title": "DataGridView\u306e\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u624b\u8efd\u306b\u6709\u52b9\u5316\u3059\u308b\u65b9\u6cd5",
    "content": "# \u7d99\u627f\u306a\u3057\u3067\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u6709\u52b9\u5316\r\n\r\nReflection\u3092\u4f7f\u3063\u3066protected\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u66f8\u304d\u304b\u3048\u308b\uff0e\r\n\r\n```cs\r\nusing System.Reflection;\r\n\r\ngrid.GetType().InvokeMember(\r\n    \"DoubleBuffered\",\r\n    BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.SetProperty,\r\n    null,\r\n    grid,\r\n    new object[] { true });\r\n```",
    "pub_date": "2019-07-03T03:32:58.604Z",
    "user": 2,
    "tags": [
      1,
      10
    ]
  }
},
{
  "model": "app.memo",
  "pk": 219,
  "fields": {
    "title": "Weston\u306e\u30d3\u30eb\u30c9\u624b\u9806\uff08Debian10\u7248\uff09",
    "content": "# \u74b0\u5883\u5909\u6570\r\n\r\n\u9069\u5f53\u306a\u540d\u524d\uff08wlenv\uff09\u3067\u4fdd\u5b58\uff0e\r\n\r\n*wlenv*\r\n\r\n```sh\r\nexport USRFS=$HOME/usrfs\r\nexport WLD=$USRFS\r\nexport LD_LIBRARY_PATH=$USRFS/lib\r\nexport PKG_CONFIG_PATH=$USRFS/lib/pkgconfig:$USRFS/share/pkgconfig\r\nexport ACLOCAL=\"aclocal -I $USRFS/share/aclocal\"\r\nexport PATH=$HOME/usrfs/bin:$PATH\r\n```\r\n\r\n# \u30d3\u30eb\u30c9&\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n\r\n\u4e0a\u8a18\u306e\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u8fbc\u3093\u3067\uff0c`~/usrfs`\u306b\u30d3\u30eb\u30c9&\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0e\r\n\r\n*install.sh*\r\n\r\n```sh\r\n#!/bin/bash\r\n\r\nWORK_DIR=$(cd $(dirname $0) && pwd)\r\n\r\nmkdir -p ~/usrfs\r\nsudo apt install -y libxml++2.6-dev bison flex libmtdev-dev libudev-dev libevdev-dev libgtk-3-dev check libunwind-dev libwacom-dev libxcb-composite0-dev libpam0g-dev libgbm-dev\r\n\r\ncd $WORK_DIR\r\nsource ./wlenv\r\n\r\ngit clone http://anongit.freedesktop.org/git/wayland/wayland.git\r\ncd wayland\r\ngit checkout 1.17.0\r\n./autogen.sh --prefix=$WLD --disable-documentation\r\n./autogen.sh --prefix=$WLD --disable-documentation\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone http://anongit.freedesktop.org/git/mesa/mesa.git\r\ncd mesa\r\ngit checkout mesa-18.3.6\r\npyenv local 2.7.16\r\npip install mako\r\n./autogen.sh --prefix=$WLD --with-gallium-drivers=svga --with-dri-drivers= --enable-gles1 --enable-gles2 --enable-gallium-egl --enable-gbm --enable-shared-glapi --with-egl-platforms=x11,wayland\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone http://anongit.freedesktop.org/git/cairo\r\ncd cairo\r\ngit checkout 1.17.2\r\n./autogen.sh --prefix=$WLD --enable-gl --enable-xcb\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone git://anongit.freedesktop.org/wayland/libinput\r\ncd libinput\r\ngit checkout 1.8.4\r\n./autogen.sh --prefix=$WLD\r\nmake -j4\r\nmake install\r\ncd $WORK_DIR\r\n\r\ngit clone http://anongit.freedesktop.org/git/wayland/weston.git\r\ncd weston\r\ngit checkout 2.0.0\r\necho \"diff --git a/libweston/weston-launch.c b/libweston/weston-launch.c\r\nindex 140fde1d..eecb911a 100644\r\n--- a/libweston/weston-launch.c\r\n+++ b/libweston/weston-launch.c\r\n@@ -42,6 +42,7 @@\r\n #include <sys/wait.h>\r\n #include <sys/socket.h>\r\n #include <sys/signalfd.h>\r\n+#include <sys/sysmacros.h>\r\n #include <signal.h>\r\n #include <unistd.h>\r\n #include <fcntl.h>\" > weston-launch.patch\r\npatch -p1 < weston-launch.patch\r\n./autogen.sh --prefix=$WLD\r\nmake -j4\r\nsudo make install\r\ncp ivi-shell/weston.ini ~/.config/.\r\ncd $WORK_DIR\r\n```",
    "pub_date": "2019-07-09T06:55:37.620Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 220,
  "fields": {
    "title": "Windows\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3084\u30b9\u30c8\u30a2\u30a2\u30d7\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u305f\u3081\u306eProxy\u8a2d\u5b9a",
    "content": "# WinHTTP\u8a2d\u5b9a\u3092\u884c\u3046\r\n\r\ncmd\u3092\u7ba1\u7406\u8005\u6a29\u9650\u3067\u8d77\u52d5\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\uff0e\r\n\r\n```cmd\r\n> netsh winhttp show proxy                # \u73fe\u5728\u306eWinHTTP\u8a2d\u5b9a\u3092\u78ba\u8a8d\r\n> netsh winhttp set proxy proxy-server=\"192.168.0.1:15080\" bypass-list=\";*.microsoft.com;*.foo.ne\"\r\n> netsh winhttp import proxy source=ie    # InternetExplorer\u306e\u8a2d\u5b9a\u3092\u53cd\u6620\r\n> netsh winhttp reset proxy               # WinHTTP\u8a2d\u5b9a\u3092\u30ea\u30bb\u30c3\u30c8\r\n```",
    "pub_date": "2019-07-09T07:27:41.008Z",
    "user": 2,
    "tags": [
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 221,
  "fields": {
    "title": "npm\u3067\u3088\u304f\u4f7f\u3046\u30b3\u30de\u30f3\u30c9",
    "content": "# npm\u3067\u3088\u304f\u4f7f\u3046\u30b3\u30de\u30f3\u30c9\u3092\u6574\u7406\r\n\r\n`npm ci`\u304c`pipenv sync`\u76f8\u5f53\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u64cd\u4f5c\r\n\r\n```console\r\n$ npm install\r\n$ npm install --save <package-name>\r\n$ npm install --save-dev <package-name>\r\n$ npm update\r\n$ npm uninstall\r\n$ npm list\r\n$ npm list --depth=0\r\n$ npm ci    # package-lock.json\u306e\u56fa\u5b9a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\r\n```",
    "pub_date": "2019-08-04T06:21:35.366Z",
    "user": 2,
    "tags": [
      1,
      65
    ]
  }
},
{
  "model": "app.memo",
  "pk": 222,
  "fields": {
    "title": "VMware\u3067\u30db\u30b9\u30c8\u3068\u30d5\u30a9\u30eb\u30c0\u3092\u5171\u6709",
    "content": "# \u30db\u30b9\u30c8\u3068\u306e\u30d5\u30a9\u30eb\u30c0\u5171\u6709\r\n\r\nVMware\u306e\u30d5\u30a9\u30eb\u30c0\u5171\u6709\u3092\u884c\u3063\u305f\u5f8c\u306bDebian\u5074\u3067\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\r\n\r\n```console\r\n$ sudo mkdir /mnt/hgfs\r\n$ sudo vmhgfs-fuse .host:/ /mnt/hgfs\r\n$ echo '.host:/ /mnt/hgfs fuse.vmhgfs-fuse allow_other 0 0' | sudo tee -a /etc/fstab  # \u81ea\u52d5\u3067\u5171\u6709\r\n```\r\n\r\n# \u6240\u6709\u6a29\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306e\u5909\u66f4\r\n\r\n\u5171\u6709\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u306froot\u6a29\u9650\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30d4\u30fc\u5f8c\u306b\u6240\u6709\u6a29\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u5909\u66f4\uff0e\r\n\r\n```console\r\n$ sudo chown user:user file_name\r\n$ chmod a-x file_name\r\n```",
    "pub_date": "2019-09-01T00:38:40.135Z",
    "user": 2,
    "tags": [
      52,
      66
    ]
  }
},
{
  "model": "app.memo",
  "pk": 223,
  "fields": {
    "title": "IP\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\u3059\u308bbat\u30d5\u30a1\u30a4\u30eb",
    "content": "# bat\u30d5\u30a1\u30a4\u30eb\u304b\u3089IP\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\r\n\r\n\u7ba1\u7406\u8005\u6a29\u9650\u3067\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\uff0c\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\uff0e\u3064\u3044\u3067\u306b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u304b\u3089\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u6e21\u3057\u3066\uff0c3\u901a\u308a\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\uff0e\r\n\r\n```bat\r\n@echo off\r\n\r\nif %1 == 1 (\r\n    netsh interface ip set address \"Wi-Fi\" static 192.168.1.16 255.255.255.0 192.168.1.246\r\n    netsh interface ip set dns \"Wi-Fi\" static 192.168.9.101 primary\r\n) else if %1 == 20 (\r\n    netsh interface ip set address \"Wi-Fi\" static 192.168.20.16 255.255.255.0 192.168.20.254\r\n    netsh interface ip set dns \"Wi-Fi\" static 192.168.9.101 primary\r\n) else (\r\n    netsh interface ip set address \"Wi-Fi\" dhcp\r\n    netsh interface ip set dns \"Wi-Fi\" dhcp\r\n)\r\n\r\ntimeout 5\r\nipconfig\r\npause\r\n```",
    "pub_date": "2019-11-22T01:21:59.061Z",
    "user": 2,
    "tags": [
      1,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 224,
  "fields": {
    "title": "Hyper-V\u306eON/OFF\u5207\u308a\u66ff\u3048",
    "content": "# \u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\uff08\u7ba1\u7406\u8005\uff09\u304b\u3089\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\r\n\r\n\u8a2d\u5b9a\u306e\u53cd\u6620\u306f\u518d\u8d77\u52d5\u5f8c\u304b\u3089\u6709\u52b9\r\n\r\n```cmd\r\n> bcdedit    # \u73fe\u5728\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\r\n\uff1a\r\nnx                      OptIn\r\nbootmenupolicy          Standard\r\nhypervisorlaunchtype    Off\r\n> bcdedit /set hypervisorlaunchtype auto    # \u518d\u8d77\u52d5\u5f8cON\r\n> bcdedit /set hypervisorlaunchtype off     # \u518d\u8d77\u52d5\u5f8cOFF\r\n```\r\n\r\nbat\u30d5\u30a1\u30a4\u30eb\u3067ON/OFF\u5207\u308a\u66ff\u3048\r\n\r\n```bat\r\n@echo off\r\n\r\nif %1 == 1 (\r\n    bcdedit /set hypervisorlaunchtype auto\r\n) else (\r\n    bcdedit /set hypervisorlaunchtype off\r\n)\r\n```",
    "pub_date": "2020-01-19T11:08:29.481Z",
    "user": 2,
    "tags": [
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 225,
  "fields": {
    "title": "WinMerge\u3092\u4f7f\u3063\u3066\u5dee\u5206\u30ec\u30dd\u30fc\u30c8\u306e\u81ea\u52d5\u51fa\u529b",
    "content": "# Python\u3067WinMerge\u3092\u5229\u7528\u3057\u3066\u5dee\u5206\u30ec\u30dd\u30fc\u30c8\u3092HTML\u51fa\u529b\r\n\r\n```\r\nfrom subprocess import check_call\r\n\r\ndef output_diff_html(a_file_name, b_file_name, out_file_name):\r\n    try:\r\n        winmerge = '\"C:/Program Files/WinMerge/WinMergeU.exe\"'\r\n        cmd = f'{winmerge} {a_file_name} {b_file_name} /minimize /noninteractive /u /or {out_file_name}'\r\n        check_call(cmd)\r\n    except Exception as ex:\r\n        print(ex)\r\n\r\ndef main():\r\n    output_diff_html('a.txt', 'b.txt', 'result.html')\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
    "pub_date": "2020-03-21T06:07:59.345Z",
    "user": 2,
    "tags": [
      1,
      2,
      37
    ]
  }
},
{
  "model": "app.memo",
  "pk": 226,
  "fields": {
    "title": "Python\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u5c65\u6b74",
    "content": "# inspect.stack\u3092\u4f7f\u3063\u3066\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u78ba\u8a8d\r\n\r\n\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u884c\u756a\u53f7\u3068\u95a2\u6570\u540d\u3092\u8868\u793a\r\n\r\n```py\r\nimport inspect\r\n\r\ndef f1():\r\n    f2()\r\n\r\ndef f2():\r\n    f3()\r\n\r\ndef f3():\r\n    for s in inspect.stack():\r\n        print(f'file: {s.filename}, line: {s.lineno}, func: {s.function}')\r\n\r\ndef main():\r\n    f1()\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n\u5b9f\u884c\u7d50\u679c\r\n\r\n```console\r\nfile: spam.py, line: 10, func: f3\r\nfile: spam.py, line: 7, func: f2\r\nfile: spam.py, line: 4, func: f1\r\nfile: spam.py, line: 14, func: main\r\nfile: spam.py, line: 17, func: <module>\r\n```",
    "pub_date": "2020-03-27T01:24:36.999Z",
    "user": 2,
    "tags": [
      1,
      2
    ]
  }
},
{
  "model": "app.memo",
  "pk": 227,
  "fields": {
    "title": "bash\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba",
    "content": "# \u9593\u9055\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u3068\u9854\u304c\u5909\u308f\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> \u3082\u3063\u3068\u3082\u304a\u3082\u3057\u308d\u3044\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u3072\u3068\u3064\u3060\u304c\u3001\u4f7f\u3044\u3084\u3059\u304f\u3082\u3042\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u3002\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u304c\u6210\u529f\u3057\u305f\u304b\u5931\u6557\u3057\u305f\u304b\u3067\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u8868\u793a\u3055\u308c\u308b\u30a2\u30b9\u30ad\u30fc\u30a2\u30fc\u30c8\u306e\u9854\u3092\u5909\u66f4\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3002\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u306b\u5931\u6557\u3059\u308b\u3068\u60b2\u3057\u3044\u9854\u304c\u8868\u793a\u3055\u308c\u308b\u3002\u6210\u529f\u3059\u308b\u3068\u5143\u306b\u623b\u308b\u3002\r\n\r\n```sh\r\nPS1=\"\\`if [ \\$? = 0 ]; then echo \\[\\e[33m\\]^_^\\[\\e[0m\\]; else echo \\[\\e[31m\\]O_O\\[\\e[0m\\]; fi\\`[\\u@\\h:\\w]\\\\$ \"\r\n```\r\n\r\n# \u9593\u9055\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u3068\u8272\u304c\u5909\u308f\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> \u30a2\u30a4\u30c7\u30a3\u30a2\u306f\u30b3\u30de\u30f3\u30c9\u306e\u6210\u529f\u306e\u53ef\u5426\u3067\u8868\u793a\u3059\u308b\u9854\u3092\u5909\u3048\u308b\u3068\u3044\u3046\u3082\u306e\u3060\u304c\u3001\u3053\u308c\u306f\u9854\u306e\u4ee3\u308f\u308a\u306b\u8272\u3092\u5909\u66f4\u3059\u308b\u3002\u307e\u305f\u3001\u5c65\u6b74\u306b\u8a18\u61b6\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u56de\u6570\u3084\u3001\u30d1\u30b9\u306e\u8868\u793a\u3092\u77ed\u7e2e\u8868\u8a18\u304b\u3089\u30d5\u30eb\u30d1\u30b9\u8868\u8a18\u306b\u5909\u66f4\u3057\u3066\u3044\u308b\u3002\r\n\r\n```sh\r\nPROMPT_COMMAND='PS1=\"\\[\\033[0;33m\\][\\!]\\`if [[ \\$? = \"0\" ]]; then echo \"\\\\[\\\\033[32m\\\\]\"; else echo \"\\\\[\\\\033[31m\\\\]\"; fi\\`[\\u.\\h: \\`if [[ `pwd|wc -c|tr -d \" \"` > 18 ]]; then echo \"\\\\W\"; else echo \"\\\\w\"; fi\\`]\\$\\[\\033[0m\\] \"; echo -ne \"\\033]0;`hostname -s`:`pwd`\\007\"'\r\n```\r\n\r\n# \u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> \u8907\u6570\u884c\u306b\u308f\u305f\u3063\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u3057\u3001\u3088\u308a\u591a\u304f\u306e\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b\u3002\u65e5\u4ed8\u3001\u6642\u9593\u3001\u30d5\u30eb\u30d1\u30b9\u3001\u30e6\u30fc\u30b6\u540d\u3001\u30db\u30b9\u30c8\u540d\u3001\u7aef\u672b\u540d\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084\u30d5\u30a1\u30a4\u30eb\u306e\u7dcf\u6570\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084\u30d5\u30a1\u30a4\u30eb\u306e\u7dcf\u5408\u30b5\u30a4\u30ba\u304c\u8868\u793a\u3055\u308c\u308b\u3002\r\n\r\n```sh\r\nPS1=\"\\n\\[\\033[35m\\]\\$(date)\\n\\[\\033[32m\\]\\w\\n\\[\\033[1;31m\\]\\u@\\h: \\[\\033[1;34m\\]\\$(tty | sed -e 's:/dev/::'): \\[\\033[1;36m\\]\\$(ls -1 | wc -l | sed 's: ::g') files \\[\\033[1;33m\\]\\$(ls -lah | grep -m 1 total | sed 's/total //')b\\[\\033[0m\\] -> \\[\\033[0m\\]\"\r\n```\r\n\r\n# \u30c7\u30fc\u30bf\u3054\u3068\u306b\u8272\u3092\u5909\u3048\u3066\u898b\u3084\u3059\u304f\u3057\u305f\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> \u6642\u523b\u3001\u30e6\u30fc\u30b6\u540d\u3001\u30db\u30b9\u30c8\u540d\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u8868\u793a\u3059\u308b\u30df\u30cb\u30de\u30e0\u306a\u30d7\u30ed\u30f3\u30d7\u30c8\u3002\u307b\u304b\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u3088\u3046\u306a\u7279\u5fb4\u306f\u306a\u3044\u304c\u3001\u3046\u307e\u304f\u8272\u3092\u6d3b\u7528\u3057\u3066\u77ed\u3044\u306a\u304b\u3067\u3082\u8996\u8a8d\u6027\u3092\u3042\u3052\u3066\u3044\u308b\u3002\r\n\r\n```sh\r\nPS1=\"\\[\\033[35m\\]\\t\\[\\033[m\\]-\\[\\033[36m\\]\\u\\[\\033[m\\]@\\[\\033[32m\\]\\h:\\[\\033[33;1m\\]\\w\\[\\033[m\\]\\$ \"\r\n```\r\n\r\n# \u30d5\u30eb\u30d1\u30b9\u3092\u8868\u793a\u3059\u308b\u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> \u30e6\u30fc\u30b6\u540d\u3068\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30eb\u30d1\u30b9\u3092\u8868\u793a\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u3067\u30ca\u30a4\u30b9\u306a\u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\u3002\r\n\r\n```sh\r\nPS1=\"\\[\\033[32m\\][\\w]\\[\\033[0m\\]\\n\\[\\033[1;36m\\]\\u\\[\\033[1;33m\\]-> \\[\\033[0m\\]\"\r\n```\r\n\r\n# \u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b8\u30e7\u30d6\u6570\u3092\u8868\u793a\u3059\u308b\u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> 1\u884c\u76ee\u306f\u30e6\u30fc\u30b6\u540d\u3068\u30db\u30b9\u30c8\u540d\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30eb\u30d1\u30b9\u30012\u884c\u76ee\u306f\u30b3\u30de\u30f3\u30c9\u306e\u5c65\u6b74\u6570\u3068\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b8\u30e7\u30d6\u306e\u7dcf\u6570\u3092\u8868\u793a\u3059\u308b\u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\u3002\r\n\r\n```sh\r\nPS1='\\[\\e[1;32m\\]\\u@\\H:\\[\\e[m\\] \\[\\e[1;37m\\]\\w\\[\\e[m\\]\\n\\[\\e[1;33m\\]hist:\\! \\[\\e[0;33m\\] \\[\\e[1;31m\\]jobs:\\j \\$\\[\\e[m\\] \r\n```\r\n\r\n# \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> \u6d17\u7df4\u3055\u308c\u305f\u30c7\u30b6\u30a4\u30f3\u306e\u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\u3002\u30e6\u30fc\u30b6\u540d\u3001\u30db\u30b9\u30c8\u540d\u3001\u30b8\u30e7\u30d6\u6570\u3001\u65e5\u4ed8\u3001\u6642\u523b\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30eb\u30d1\u30b9\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u7dcf\u6570\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u7dcf\u5408\u30b5\u30a4\u30ba\u304c\u8868\u793a\u3055\u308c\u308b\u3002\r\n\r\n```sh\r\nPS1=\"\\n\\[\\e[30;1m\\]\u250c(\\[\\e[34;1m\\]\\u@\\h\\[\\e[30;1m\\])-(\\[\\e[34;1m\\]\\j\\[\\e[30;1m\\])-(\\[\\e[34;1m\\]\\@ \\d\\[\\e[30;1m\\])->\\[\\e[30;1m\\]\\n\u2514\u2500(\\[\\e[32;1m\\]\\w\\[\\e[30;1m\\])-(\\[\\e[32;1m\\]\\$(ls -1 | wc -l | sed 's: ::g') files, \\$(ls -lah | grep -m 1 total | sed 's/total //')b\\[\\e[30;1m\\])--> \\[\\e[0m\\]\"\r\n```\r\n\r\n# Joshua Price\u6c0f\u306e\u4f7f\u3063\u3066\u3044\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\r\n\r\n> Joshua Price\u6c0f\u304c\u4f7f\u3063\u3066\u3044\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u3002\u3072\u3068\u3064\u524d\u306e\u8907\u6570\u884c\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3064\u3064\u3001\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u3067\u5834\u6240\u3092\u3068\u3089\u306a\u3044\u3082\u306e\u3078\u8abf\u6574\u3055\u308c\u3066\u3044\u308b\u3002\r\n\r\n```sh\r\nPS1=\"\\n\\[\\e[32;1m\\](\\[\\e[37;1m\\]\\u\\[\\e[32;1m\\])-(\\[\\e[37;1m\\]jobs:\\j\\[\\e[32;1m\\])-(\\[\\e[37;1m\\]\\w\\[\\e[32;1m\\])\\n(\\[\\e[37;1m\\]! \\!\\[\\e[32;1m\\])-> \\[\\e[0m\\]\"\r\n```",
    "pub_date": "2020-04-01T13:51:19.079Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
},
{
  "model": "app.memo",
  "pk": 228,
  "fields": {
    "title": "vim\u306e\u304a\u3059\u3059\u3081\u8a2d\u5b9a",
    "content": "# $HOME/.vimrc\u306b\u4ee5\u4e0b\u3092\u8a2d\u5b9a\r\n\r\n```vim\r\nset fenc=utf-8\r\nset nobackup\r\nset noswapfile\r\nset autoread\r\nset hidden\r\nset showcmd\r\n\r\nset number\r\nset cursorline\r\nset virtualedit=onemore\r\nset smartindent\r\nset visualbell\r\nset showmatch\r\nset laststatus=2\r\nset wildmode=list:longest\r\nnnoremap j gj\r\nnnoremap k gk\r\nsyntax enable\r\ncolorscheme koehler\r\nset background=dark\r\n\r\nset list listchars=tab:\\\u25b8\\-\r\nset expandtab\r\nset tabstop=4\r\nset shiftwidth=4\r\n\r\nset ignorecase\r\nset smartcase\r\nset incsearch\r\nset wrapscan\r\nset hlsearch\r\nnmap <Esc><Esc> :nohlsearch<CR><Esc>\r\n```",
    "pub_date": "2020-04-19T06:49:08.880Z",
    "user": 2,
    "tags": [
      1,
      52
    ]
  }
}
]
